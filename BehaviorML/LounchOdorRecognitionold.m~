% LounchOdorRecognition
%be in /media/DataMOBs16/ProjetBULB

%% INPUTS

erasePreviousA=0; % 0 to keep existing files, 1 otherwise
OrderLabel={'CTRL','VARIANT','FIXED'}; % default {'CTRL','VARIANT','FIXED'}
MatName = {'numMouse' 'nPhase' 'Tctrl' 'Tvari' 'Tfixa' 'dRun'}; %default {'numMouse' 'nPhase' 'Tctrl' 'Tvari' 'Tfixa' 'dRun'}
AnalyTimeRestrict=60; %time in seconde, default 180s (3min)
NameExperimentFolder='OdorRecognition'; % default 'OdorRecognition'
NameInFiles='OFOOdor'; % exemple 'MNTOdor'

%% INITIALISATION
res=pwd;
lis=dir(res);
scrsz = get(0,'ScreenSize');

if isempty(strfind(res,'/')),mark='\'; else mark='/';end


%% SCREEN FOR UNDONE OFFLINE TRACKING
MATData=[];
for i=3:length(lis)
    
    if length(lis(i).name)>4 && strcmp(lis(i).name(1:5),'Mouse')
        % number of the mouse
        nameMouse=lis(i).name(7:end);
        k=1; numMouse=[]; 
        while isempty(numMouse), 
            try 
                numMouse=str2num(nameMouse(k:end)); 
                k=k+1;
            end
        end
        
        disp(' ')
        disp(['           * * * Mouse ',nameMouse,' * * *'])
        listi=dir([res,mark,lis(i).name]);
        
        for j=3:length(listi)
            
            if strcmp(listi(j).name,NameExperimentFolder)
                listiji=dir([res,mark,lis(i).name,mark,listi(j).name]);
                
                for k=3:length(listiji)
                    if ~isempty(strfind(listiji(k).name,NameInFiles))
                        disp(listiji(k).name)
                        filename=[res,mark,lis(i).name,mark,listi(j).name,mark,listiji(k).name];
                        
                        % -------------------------------------------------
                        % If not done, run AnalyzeOdorRecognition
                        clear MatOdor Distance BlockTime numF
                        DoAnalysis=1;
                        try
                            load([filename,mark,'OdorAnalysis.mat'],'MatOdor','Distance','BlockTime')
                            MatOdor; Distance;BlockTime;
                            if exist([filename,mark,'Figure_OdorAnalysis.eps'],'file'),DoAnalysis=0;end
                        end
                        
                        if DoAnalysis || erasePreviousA
                            [numF,Distance,MatOdor,BlockTime]=AnalyzeOdorRecognition(filename);
                        end
                        disp('  -> done')
                        % -------------------------------------------------
                        
                        %index AnalyTimeRestrict
                        if AnalyTimeRestrict<BlockTime, disp(['PROBLEM! AnalyTimeRestrict is shorter than BlockTime=',num2str(BlockTime),'s']);end
                        indexATR=2:round(AnalyTimeRestrict/BlockTime)+1;
                        if max(indexATR)>=size(MatOdor,2)
                            indexATR=2:size(MatOdor,2);
                            disp(['PROBLEM! AnalyTimeRestrict is too big for this recording, limit at ',num2str(BlockTime*length(indexATR)),'s !'])
                        end
                        
                        % Analyze time within Odor Zone
                        clear nPhase Tctrl Tvari Tfixa dRun
                        nPhase = str2num(filename(strfind(filename,'Phase')+5));
                        Tctrl = sum(sum(MatOdor(MatOdor(:,1)==1,indexATR)))/length(indexATR);
                        Tvari = sum(sum(MatOdor(MatOdor(:,1)==2,indexATR)))/length(indexATR);
                        Tfixa = sum(sum(MatOdor(MatOdor(:,1)==3,indexATR)))/length(indexATR);
                        
                        
                        % Analyze distance
                        dRun=sum(Distance(indexATR-1));
                        
                        % MatName = {numMouse nPhase Tctrl Tvari Tfixa dRun}
                        MATData=[MATData; [numMouse nPhase Tctrl Tvari Tfixa dRun] ];
                        
                        % save Individual Figures
                        if ~exist(['Temp_',NameExperimentFolder,'_',NameInFiles],'dir')
                            mkdir(['Temp_',NameExperimentFolder,'_',NameInFiles])
                        end
                        try
                            saveFigure(numF,['Mouse',nameMouse,'_Phase',num2str(nPhase),'_OdorAnalysis'],['Temp_',NameExperimentFolder,'_',NameInFiles]);
                            disp(['saving figure in Temp_',NameExperimentFolder,'_',NameInFiles])
                        catch
                            copyfile([filename,mark,'Figure_OdorAnalysis.eps'],['Temp_',NameExperimentFolder,'_',NameInFiles,mark,'Mouse',nameMouse,'_Phase',num2str(nPhase),'_OdorAnalysis.eps'])
                            disp(['copying existing figure into Temp_',NameExperimentFolder,'_',NameInFiles])
                        end
                    end
                end
                
            end
        end
    end
end


%% DISPLAY TIME IN ODOR ZONE FOR MICE AND PHASES

figure('Color',[1 1 1],'Position',scrsz); numF=gcf;

AllMouse=unique(MATData(:,1));
Allphase=unique(MATData(:,2));
 
labelX=[];
for mi=1:length(AllMouse)
    labelX=[labelX;MATData(MATData(:,1)==AllMouse(mi),2)+(mi-1)*(length(Allphase)+1)];
end

% ------------------------------------------------------------------------
% stacked bar for every mouse and phase
subplot(2,3,1:2)
bar(labelX ,MATData(:,3:5),'stacked')
ylim([0 100]); colormap bone
legend(OrderLabel,'Location','NorthWest')
ylabel('% time around odor')
title(['Exploration of odor locations (first ',num2str(AnalyTimeRestrict),'s)'])

nameMi=[];
for i=1:length(MATData(:,1))
    if ~sum(strcmp(nameMi,num2str(MATData(i,1))))
        nameMi=[nameMi,{num2str(MATData(i,1))}];
        text((length(Allphase)+1)*(length(nameMi)-1)+1,-10,num2str(MATData(i,1)));
    end
end 
text(-length(AllMouse)/2,-10,'Mouse');
text(-length(AllMouse)/2,-3,'Phase');

for ph=1:length(Allphase)
    PhaseLabelShort(ph)={num2str(Allphase(ph))};
end
set(gca,'XTick',labelX)
set(gca,'XTickLabel',PhaseLabelShort)

% ------------------------------------------------------------------------
% bar plot for each phase, mice pooled 
PhaseLabel={};
for ph=1:length(Allphase)
    PhaseLabel=[PhaseLabel,['Phase ',num2str(Allphase(ph))]];
    for od=1:length(OrderLabel)
        MeanMatOdor(od,ph)=nanmean(MATData(MATData(:,2)==Allphase(ph),od+2));
        stdMatOdor(od,ph)=stdError(MATData(MATData(:,2)==Allphase(ph),od+2));
    end
    indexph=find(MATData(:,2)==Allphase(ph) &  MATData(:,5)~=0);
    MeanVarOnFix(ph)=nanmean(MATData(indexph,4)./MATData(indexph,5));
    stdVarOnFix(ph)=stdError(MATData(indexph,4)./MATData(indexph,5));
end

% % time around each type of odor
labelX=[(1:length(OrderLabel))-0.2;(1:length(OrderLabel));(1:length(OrderLabel))+0.2]';
subplot(2,3,4)
bar(MeanMatOdor), colormap bone
legend(PhaseLabel,'Location','NorthWest')
hold on, errorbar(labelX,MeanMatOdor,stdMatOdor,'+k')
set(gca,'XTick',[1:length(OrderLabel)])
set(gca,'XTickLabel',OrderLabel)
ylabel('% time around odor')
title(['Exploration of odor locations (n=',num2str(length(AllMouse)),')'])

% ratio VAR/FIX, bar plot for each phase, mice pooled
subplot(2,3,5), bar(MeanVarOnFix),
hold on, errorbar(1:length(Allphase),MeanVarOnFix,stdVarOnFix,'+k')
set(gca,'XTick',[1:length(Allphase)])
set(gca,'XTickLabel',PhaseLabel)
title(['Ratio VARIANT/FIXED (n=',num2str(length(AllMouse)),')'])
line([0,length(Allphase)],)

%% DISPLAY DISTANCE TRAVELED

Matd=NaN(length(AllMouse),length(Allphase));
for ph=1:length(Allphase)
    for mi=1:length(AllMouse)
        try Matd(mi,ph)=MATData(MATData(:,2)==Allphase(ph) & MATData(:,1)==AllMouse(mi),6);end
        nameMi{mi}=num2str(AllMouse(mi));
    end
    MeanMatd(ph)=nanmean(Matd(mi,ph));
    stdMatd(ph)=stdError(Matd(mi,ph));
end

% ------------------------------------------------------------------------
% stacked bar for every mouse and phase
subplot(2,3,6)
bar(1:length(AllMouse) ,Matd,'stacked')
ylim([0 3*max(max(Matd))])
legend(PhaseLabel,'Location','NorthEast')
ylabel('% time around odor')
title(['Traveled distance (first ',num2str(AnalyTimeRestrict),'s)'])
set(gca,'XTick',[1:length(AllMouse)])
set(gca,'XTickLabel',nameMi)
xlabel('Mouse number')

% -------------------------------------------------------------------------
% distance plot for each phase, mice pooled 
subplot(2,3,3)
bar(MeanMatd), colormap bone
hold on, errorbar(1:length(Allphase),MeanMatd,stdMatd,'+k')
set(gca,'XTick',1:length(Allphase))
set(gca,'XTickLabel',PhaseLabel)
ylabel('distance (ua)')
title(['Traveled distance (first ',num2str(AnalyTimeRestrict),'s) (n=',num2str(length(AllMouse)),')'])



%% SAVE ANALYSIS AND FIGURES

choice=questdlg('Do you want to save Analysis and Figures? ','SAVE','Yes','No','Yes');
switch choice
    case 'Yes'
        defAns={['Analysis_',NameExperimentFolder,num2str(AnalyTimeRestrict),'s_',NameInFiles]};
        prompt = {'Name of the folder to create in this path'};
        dlg_title = 'Save in...';
        options.resize='on';
        answer = inputdlg(prompt,dlg_title,1,defAns,options);
        
        while exist(answer{1},'dir')
            temp=answer{1};
            answer{1}=[temp,'A'];
        end
        try 
            rename(['Temp_',NameExperimentFolder,'_',NameInFiles],answer{1}) 
        catch
            mkdir(answer{1});
        end
        saveFigure(numF,['Figure_',NameExperimentFolder,num2str(AnalyTimeRestrict),'s_',NameInFiles],answer{1})
        save([answer{1},mark,'OdorAnalysis_',NameExperimentFolder,num2str(AnalyTimeRestrict),'s_',NameInFiles],'MATData','OrderLabel','MatName','AnalyTimeRestrict','NameExperimentFolder','NameInFiles');

    case 'No'
        savetemp=1;
        rmdir(['Temp_',NameExperimentFolder,'_',NameInFiles],'s');
end





