%% Comodulation in three states : REM, SWS, Locomotion
clear all


Files=PathForExperimentsEmbReact('UMazeCond');
% Params
LowFreqRg=[2 15];
HighFreqRg=[30 250];
LowFreqBW=[1 1];
LowFreqStep=1;
HighFreqStep=4;
BinNumbers=18;
NumSurrogates=200;
Struc={'HPC','OB','PFCx'};
DidntWork={};d=1;
LowFreqVals=[LowFreqRg(1):LowFreqStep:LowFreqRg(2)];
for pp=1:length(Files.path)

    pp
    for c=1:length(Files.path{pp})
        try
            cd(Files.path{pp}{c})
            
                load('behavResources.mat')
                load('StateEpochSB.mat','TotalNoiseEpoch')
                RemovEpoch=or(or(StimEpoch,SleepyEpoch),TotalNoiseEpoch);
                LitEp{1}=and(FreezeEpoch,or(ZoneEpoch{2},ZoneEpoch{5}))-RemovEpoch;
                LitEp{2}=and(FreezeEpoch,ZoneEpoch{1})-RemovEpoch;
                
            try
                load('ChannelsToAnalyse/dHPC_deep.mat')
                Channel.HPC=channel;
            catch
                
                load('ChannelsToAnalyse/dHPC_rip.mat')
                Channel.HPC=channel;
            end
            load('ChannelsToAnalyse/Bulb_deep.mat')
            Channel.OB=channel;
            load('ChannelsToAnalyse/PFCx_deep.mat')
            Channel.PFCx=channel;

            for z=1:2
                LitEptemp=intervalSet(Start(LitEp{z})+1e4,Stop((LitEp{z}))+1e4);
                LitEptemp=CleanUpEpoch(LitEptemp);
                for ss=1:length(Struc)
                    load(['LFPData/LFP',num2str(eval(['Channel.',Struc{ss}])),'.mat']);
                    temp=FilterRangeOfBdWidths(Restrict(LFP,LitEptemp),LowFreqRg,LowFreqStep,LowFreqBW,1);
                    for k=1:size(temp.FilLFP,2)
                        temp.FilLFP{k}=Restrict(temp.FilLFP{k},LitEptemp);
                    end
                    eval(['MultiFilLFP.',Struc{ss},'.Low=temp;']);
   
                    for ff=1:length(LowFreqVals)
                        temp=FilterRangeOfBdWidths(Restrict(LFP,LitEptemp),HighFreqRg,HighFreqStep,[LowFreqVals(ff) LowFreqVals(ff)],1);
                        eval(['MultiFilLFP.',Struc{ss},'.High.FilLFP{',num2str(ff),'}=temp.FilLFP;']);
                        eval(['MultiFilLFP.',Struc{ss},'.High.FreqRange{',num2str(ff),'}=temp.FreqRange;']);
                    end
                end
                
                Epoch=intervalSet(0,max(Range(LFP)));
                
                for ss=1:3
                    ss
                    for sss=1:3
                        [LowFreqVals,HighFreqVals,Dkl{ss,sss},DklSurr,Prc99]=ComoduloPreFiltered(eval(['MultiFilLFP.',Struc{ss},'.Low.FilLFP']), eval(['MultiFilLFP.',Struc{sss},'.High.FilLFP']),...
                            LowFreqRg,HighFreqRg,LowFreqStep,HighFreqStep,BinNumbers,1,0);
                    end
                end
            end
            
            save('CoModulo3StrucWhit.mat','Dkl')
            clear Dkl MultiFilLFP
        catch
            DidntWork{d}=Files.path{pp}{c};
            disp([Files.path{pp}{c},' fail'])
            d=d+1;
        end
    end
end

figure
for ss=1:3
    ss
    for sss=1:3
        subplot(3,3,(ss-1)*3+sss)
        imagesc(LowFreqVals,HighFreqVals,(Dkl{ss,sss})'), axis xy,
    end
end




