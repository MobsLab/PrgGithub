%PETHSpindlesRipplesMLv2
function PETHSpindlesRipplesMLv2

% display mean LFP at Delta, Ripples and Spindles
%
disp('PETHSpindlesRipplesMLv2.m')
load NREMepochsML.mat op NamesOp Dpfc Epoch noise
[Rip,RipEp,numChRip]=GetRipplesML(Epoch,op{6});
[SpiTot,SpiHsup,SpiLsup,SpiULow,chsup]=GetSpindlesML('PFCx_sup',Epoch,op{6});
[SpiTot,SpiHdp,SpiLdp,SpiULow,chdp]=GetSpindlesML('PFCx_deep',Epoch,op{6});
[tDelta,DeltaEpoch]=GetDeltaML('PFCx',Epoch,op{6});

% plot based on PETHSpindlesRipplesMLSB
figure('Color',[1 1 1],'Unit','Normalized','Position',[0.2 0.2 0.3 0.6]),
load('LFPData/InfoLFP.mat')
disp('Plotting mean LFPs... WAIT...')

%% LOADING HIPPOCAMPAL LFPs
if ~isempty(Rip)
    chHPC=InfoLFP.channel(find(strcmp(InfoLFP.structure,'dHPC')));
    
    for hpc=1:length(chHPC)
        clear LFP
        disp(['   Loading LFP',num2str(chHPC(hpc)),'.mat (Hippocampus channel ',num2str(hpc),')...'])
        eval(['load([''LFPData/LFP',num2str(chHPC(hpc)),'.mat''],''LFP'');'])
        LFPhpc{hpc}=LFP;
        % loading ripples generated by FindRipplesKarimSB.m
    end
    Rtimes=Restrict(tsd(Rip(:,2)*1e4,Rip(:,4)),op{6});
    
    %plot
    linWid=[1 1 1]; linWid(find(chHPC==numChRip))=2;
    colori={'k','b','r','k'}; leg=[];
    subplot(2,3,1), hold on,
    for i=1:3
        try
            M1hr=PlotRipRaw(LFPhpc{i},Range(Rtimes)/1e4,80); close;
            plot(M1hr(:,1),M1hr(:,2),'Color',colori{i},'LineWidth',linWid(i));
            leg=[leg,{sprintf('ch%d',chHPC(i))}];
        end
    end
    legend(leg); xlabel('Time (s)'); title('HPC channels at Ripples SWS')
else
    subplot(2,3,1), title('No ripples')
end

%% LOADING CORTICAL LFPs
load('ChannelsToAnalyse/PFCx_deep.mat')
chCTX=channel;
load('ChannelsToAnalyse/PFCx_sup.mat')
chCTX=[chCTX,channel];
for ctx=1:length(chCTX)
    clear LFP
    disp(['   Loading LFP',num2str(chCTX(ctx)),'.mat (PFCx channel ',num2str(ctx),')...'])
    eval(['load([''LFPData/LFP',num2str(chCTX(ctx)),'.mat''],''LFP'');'])
    LFPctx{ctx}=LFP;
end

%plot Spindles
nameSpi={'SpiHsup','SpiLsup','SpiHdp','SpiLdp'};numplot=[2 3 5 6];
linWid=[2 1];
for j=1:4
    eval(['Stimes=Restrict(tsd(',nameSpi{j},'(:,2)*1e4,',nameSpi{j},'(:,4)),op{6});']);
    leg=[];
    subplot(2,3,numplot(j)), hold on,
    for i=1:2
        try
            M1hr=PlotRipRaw(LFPctx{i},Range(Stimes)/1e4,500); close;
            plot(M1hr(:,1),M1hr(:,2),'Color',colori{2+i},'LineWidth',linWid(i));
        end
    end
    xlabel('Time (s)'); title(['PFCx channels at ',nameSpi{j},' SWS'])
    if j==3, title([{pwd},['PFCx channels at ',nameSpi{j},' SWS']]);end
end


%plot Delta
if ~isempty(tDelta)
    Dtimes=Restrict(ts(tDelta),op{6});
    subplot(2,3,4), hold on,
    for i=1:2
        try
            M1hr=PlotRipRaw(LFPctx{i},Range(Dtimes)/1e4,500); close;
            plot(M1hr(:,1),M1hr(:,2),'Color',colori{2+i},'LineWidth',linWid(i));
            leg=[leg,{sprintf('ch%d',chCTX(i))}];
        end
    end
    legend(leg); xlabel('Time (s)'); title('PFCx channels at Delta SWS')
else
    subplot(2,3,4), title('No Delta')
end