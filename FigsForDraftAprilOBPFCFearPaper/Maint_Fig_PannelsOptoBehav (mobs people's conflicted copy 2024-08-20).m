cd /home/vador/Dropbox/Mobs_member/SophieBagur/Figures/BehaviourOptoDurationEvents
load('DataFzingStatesopto_2.mat')
% This data is generated by GenerateProbaTransitionsOptoMice_SB

figure

Vals = {DurActEp_GFP(:,3);DurActEp_CHR2(:,3)};
XPos = [1.1,1.9];

Cols = [0.9,1,0.9;0.9,0.9,1];
for k = 1:2
    X = Vals{k};
    a=iosr.statistics.boxPlot(XPos(k),X,'boxColor',Cols(k,:),'lineColor',Cols(k,:),'medianColor','k','boxWidth',0.5,'showOutliers',false);
    a.handles.upperWhiskers.Visible='off';a.handles.upperWhiskerTips.Visible='off';
    a.handles.lowerWhiskers.Visible='off';a.handles.lowerWhiskerTips.Visible='off';
    a.handles.medianLines.LineWidth = 5;
    
    handlesplot=plotSpread(X,'distributionColors',[0 0 0],'xValues',XPos(k),'spreadWidth',0.4), hold on;
    set(handlesplot{1},'MarkerSize',22)
end 
xlim([0.5 2.4])
ylim([0 15])
set(gca,'FontSize',18,'XTick',XPos,'XTickLabel',{'GFP','CHR2'},'linewidth',1.5,'YTick',[0:5:15])
ylabel('Active bout duration (s)')


figure
Vals = {DurFzEp_GFP(:,3);DurFzEp_CHR2(:,3)};
XPos = [1.1,1.9];

Cols = [0.9,1,0.9;0.9,0.9,1];
for k = 1:2
    X = Vals{k};
    a=iosr.statistics.boxPlot(XPos(k),X,'boxColor',Cols(k,:),'lineColor',Cols(k,:),'medianColor','k','boxWidth',0.5,'showOutliers',false);
    a.handles.upperWhiskers.Visible='off';a.handles.upperWhiskerTips.Visible='off';
    a.handles.lowerWhiskers.Visible='off';a.handles.lowerWhiskerTips.Visible='off';
    a.handles.medianLines.LineWidth = 5;
    
    handlesplot=plotSpread(X,'distributionColors',[0 0 0],'xValues',XPos(k),'spreadWidth',0.4), hold on;
    set(handlesplot{1},'MarkerSize',22)
    handlesplot=plotSpread(X,'distributionColors',Cols(k,:)*0.8,'xValues',XPos(k),'spreadWidth',0.4), hold on;
    set(handlesplot{1},'MarkerSize',12)
    
end

xlim([0.5 2.4])
ylim([0 30])
set(gca,'FontSize',18,'XTick',XPos,'XTickLabel',{'GFP','CHR2'},'linewidth',1.5,'YTick',[0:5:30])
ylabel('Freezing bout duration (s)')


%% modified by SB tp put in number of freezing bouts in 120s
figure
Vals = {FreqInit_GFP(:,3)*121.18;FreqInit_CHR2(:,3)*121.18};
XPos = [1.1,1.9];

Cols = [0.9,1,0.9;0.9,0.9,1];
for k = 1:2
    X = Vals{k};
    a=iosr.statistics.boxPlot(XPos(k),X,'boxColor',Cols(k,:),'lineColor',Cols(k,:),'medianColor','k','boxWidth',0.5,'showOutliers',false);
    a.handles.upperWhiskers.Visible='off';a.handles.upperWhiskerTips.Visible='off';
    a.handles.lowerWhiskers.Visible='off';a.handles.lowerWhiskerTips.Visible='off';
    a.handles.medianLines.LineWidth = 5;
    
    handlesplot=plotSpread(X,'distributionColors',[0 0 0],'xValues',XPos(k),'spreadWidth',0.4), hold on;
    set(handlesplot{1},'MarkerSize',22)
    handlesplot=plotSpread(X,'distributionColors',Cols(k,:)*0.8,'xValues',XPos(k),'spreadWidth',0.4), hold on;
    set(handlesplot{1},'MarkerSize',12)
    
    
end

xlim([0.5 2.4])
ylim([0 00.15]*121)
set(gca,'FontSize',18,'XTick',XPos,'XTickLabel',{'GFP','CHR2'},'linewidth',1.5,'YTick',[0:5:15])
ylabel('Number of freezing bouts')


%% 
StepSizes = [0.5,1,1.5,2,3,4];
for st = 3%1:length(StepSizes)
    stepsize = StepSizes(st);
    
    load(['/home/vador/Dropbox/Mobs_member/SophieBagur/Figures/BehaviourOptoDurationEvents/SimulationFzOpto' num2str(stepsize),'.mat'])
    load(['/home/vador/Dropbox/Mobs_member/SophieBagur/Figures/BehaviourOptoDurationEvents/DataFzingStatesopto_' num2str(stepsize),'.mat'])
    cols = {'k','b','r'}
    
    for l = 2:size(DurFzEp_GFP,2)
        for k=1:size(DurFzEp_GFP,1)
            ErrMat = (DurFzEp-DurFzEp_GFP(k,l)).^2+(DurActEp-DurActEp_GFP(k,l)).^2;
            ErrMat = naninterp(ErrMat);
            ErrMat = SmoothDec(ErrMat,2);
            val = min(min(ErrMat));
            [row,col] = find(ErrMat == val);
%             ErrMat(isinf(ErrMat))=NaN;
%             imagesc(log(ErrMat))
%             pause
            Err_PercFz_GFP(st,k,l) = (PercFz_GFP(k,l)-PercFz(row,col)).^2;
            Err_FreqInit_GFP(st,k,l) = (FreqInit_GFP(k,l)-FreqInit(row,col)).^2;
            
        end
    end
    
    for l = 2:size(DurFzEp_GFP,2)
        for k=1:size(DurFzEp_GFP,1)
            ErrMat = (DurFzEp-DurFzEp_CHR2(k,l)).^2+(DurActEp-DurActEp_CHR2(k,l)).^2;
            ErrMat = naninterp(ErrMat);
            ErrMat = SmoothDec(ErrMat,2);
            val = min(min(ErrMat));
            [row,col] = find(ErrMat == val);
            Err_PercFz_CHR2(st,k,l) = (PercFz_CHR2(k,l)-PercFz(row,col)).^2;
%             ErrMat(isinf(ErrMat))=NaN;
%             imagesc(log(ErrMat))
%             pause
            Err_FreqInit_CHR2(st,k,l) = (FreqInit_CHR2(k,l)-FreqInit(row,col)).^2;
            
        end
    end
    
end

for l = 2:size(DurFzEp_GFP,2)
    for k=1:size(DurFzEp_GFP,1)
        ErrMat = (DurFzEp-DurFzEp_GFP(k,l)).^2+(DurActEp-DurActEp_GFP(k,l)).^2;
        ErrMat = naninterp(ErrMat);
        ErrMat = SmoothDec(ErrMat,2);
        val = min(min(ErrMat));
        [row,col] = find(ErrMat == val);
        
        subplot(2,2,l-1)
        plot(PercFz(row,col),PercFz_GFP(k,l),'.','color',[0.4 0.8 0.4],'MarkerSize',20),hold on
        Err_PercFz_GFP(st,k,l) = (PercFz_GFP(k,l)-PercFz(row,col)).^2;
        subplot(2,2,l+1)
        plot(FreqInit(row,col),FreqInit_GFP(k,l),'.','color',[0.4 0.8 0.4],'MarkerSize',20),hold on
        Err_FreqInit_GFP(st,k,l) = (FreqInit_GFP(k,l)-FreqInit(row,col)).^2;
        FreqInit_GFP_model(k,l) = FreqInit(row,col);
    end
end

for l = 2:size(DurFzEp_GFP,2)
    for k=1:size(DurFzEp_GFP,1)
        ErrMat = (DurFzEp-DurFzEp_CHR2(k,l)).^2+(DurActEp-DurActEp_CHR2(k,l)).^2;
        ErrMat = naninterp(ErrMat);
        ErrMat = SmoothDec(ErrMat,2);
        val = min(min(ErrMat));
        [row,col] = find(ErrMat == val);
        subplot(2,2,l-1)
        plot(PercFz(row,col),PercFz_CHR2(k,l),'.','color',[0.4 0.4 0.8],'MarkerSize',20),hold on
        Err_PercFz_CHR2(st,k,l) = (PercFz_CHR2(k,l)-PercFz(row,col)).^2;
        subplot(2,2,l+1)
        plot(FreqInit(row,col),FreqInit_CHR2(k,l),'.','color',[0.4 0.4 0.8],'MarkerSize',20),hold on
        Err_FreqInit_CHR2(st,k,l) = (FreqInit_CHR2(k,l)-FreqInit(row,col)).^2;
        FreqInit_CHR2_model(k,l) = FreqInit(row,col);

    end
end

OnlyChangeMaintenance = 1;

if OnlyChangeMaintenance
l = 2
for k=1:size(DurFzEp_GFP,1)
    ErrMat = (DurFzEp-DurFzEp_CHR2(k,l)).^2+(DurActEp-DurActEp_CHR2(k,l)).^2;
    ErrMat = naninterp(ErrMat);
    ErrMat = SmoothDec(ErrMat,2);
    val = min(min(ErrMat));
    [row,col] = find(ErrMat == val);
    RemRow_CHR2(k) = row;
    RemCol_CHR2(k) = col;
end


l = 3;
for k=1:size(DurFzEp_GFP,1)
    ErrMat = (DurFzEp-DurFzEp_CHR2(k,l)).^2+(DurActEp-DurActEp_CHR2(k,l)).^2;
    ErrMat = naninterp(ErrMat);
    ErrMat = SmoothDec(ErrMat,2);
    val = min(min(ErrMat));
    [row,col] = find(ErrMat == val);
    FreqInit_CHR2_model(k,l) = FreqInit(row,RemCol_CHR2(k));
end
end

%% modified by SB tp put in number of freezing bouts in 120s
figure
Vals = {FreqInit_GFP(:,3)*121.18;FreqInit_CHR2(:,3)*121.18;FreqInit_CHR2_model(:,3)*121.18};
XPos = [1.1,1.9,2.7];

Cols = [0.9,1,0.9;0.9,0.9,1;0.9,0.9,1];
for k = 1:3
    X = Vals{k};
    a=iosr.statistics.boxPlot(XPos(k),X,'boxColor',Cols(k,:),'lineColor',Cols(k,:),'medianColor','k','boxWidth',0.5,'showOutliers',false);
    a.handles.upperWhiskers.Visible='off';a.handles.upperWhiskerTips.Visible='off';
    a.handles.lowerWhiskers.Visible='off';a.handles.lowerWhiskerTips.Visible='off';
    a.handles.medianLines.LineWidth = 5;
    hold on
end
        plot([1.9,2.7],[Vals{2},Vals{3}],'color',[0.7 0.7 0.9],'linewidth',1.5);

for k = 1:3
    X = Vals{k};
    handlesplot=plotSpread(X,'distributionColors',[0 0 0],'xValues',XPos(k),'spreadWidth',0.4), hold on;
    set(handlesplot{1},'MarkerSize',22)
    handlesplot=plotSpread(X,'distributionColors',Cols(k,:)*0.8,'xValues',XPos(k),'spreadWidth',0.4), hold on;
    set(handlesplot{1},'MarkerSize',12)
    
    
end

xlim([0.5 3.3])
ylim([0 00.15]*121)
set(gca,'FontSize',18,'XTick',XPos,'XTickLabel',{'GFP','CHR2','CHR2-model'},'linewidth',1.5,'YTick',[0:5:15])
ylabel('Number of freezing bouts')


%% figure with both freezing durations
figure
Vals = {DurActEp_GFP(:,3);DurActEp_CHR2(:,3)};
XPos = [1.1,1.9];

Cols = [0.9,1,0.9;0.9,0.9,1];
for k = 1:2
    X = Vals{k};
    a=iosr.statistics.boxPlot(XPos(k),X,'boxColor',Cols(k,:),'lineColor',Cols(k,:),'medianColor','k','boxWidth',0.5,'showOutliers',false);
    a.handles.upperWhiskers.Visible='off';a.handles.upperWhiskerTips.Visible='off';
    a.handles.lowerWhiskers.Visible='off';a.handles.lowerWhiskerTips.Visible='off';
    a.handles.medianLines.LineWidth = 5;
    
    handlesplot=plotSpread(X,'distributionColors',[0 0 0],'xValues',XPos(k),'spreadWidth',0.4), hold on;
    set(handlesplot{1},'MarkerSize',22)
    handlesplot=plotSpread(X,'distributionColors',Cols(k,:)*0.8,'xValues',XPos(k),'spreadWidth',0.4), hold on;
    set(handlesplot{1},'MarkerSize',12)
    
end


Vals = {DurFzEp_GFP(:,3);DurFzEp_CHR2(:,3)};
XPos = [1.1,1.9]+2;

Cols = [0.9,1,0.9;0.9,0.9,1];
for k = 1:2
    X = Vals{k};
    a=iosr.statistics.boxPlot(XPos(k),X,'boxColor',Cols(k,:),'lineColor',Cols(k,:),'medianColor','k','boxWidth',0.5,'showOutliers',false);
    a.handles.upperWhiskers.Visible='off';a.handles.upperWhiskerTips.Visible='off';
    a.handles.lowerWhiskers.Visible='off';a.handles.lowerWhiskerTips.Visible='off';
    a.handles.medianLines.LineWidth = 5;
    
    handlesplot=plotSpread(X,'distributionColors',[0 0 0],'xValues',XPos(k),'spreadWidth',0.4), hold on;
    set(handlesplot{1},'MarkerSize',22)
    handlesplot=plotSpread(X,'distributionColors',Cols(k,:)*0.8,'xValues',XPos(k),'spreadWidth',0.4), hold on;
    set(handlesplot{1},'MarkerSize',12)
    
end

xlim([0.5 4.5])
ylim([0 30])
set(gca,'FontSize',18,'XTick',[1.1,1.9,3.1,3.9],'XTickLabel',{'GFP','CHR2','GFP','CHR2'},'linewidth',1.5,'YTick',[0:5:30])
ylabel('Bout duration (s)')



%%% distributions
clear Distrib_Act_GFP  Distrib_Fz_GFP Distrib_Act_CHR2 Distrib_Fz_CHR2
figure
for l = 2:size(DurFzEp_GFP,2)
    subplot(2,2,l-1)
      for k=1:size(DistribActEpisodes_GFP,1)
        [Y,X]=hist(DistribActEpisodes_GFP{k,l},[0:0.2:80]);
        plot(X,cumsum(Y)/sum(Y),'color',[0.4 0.8 0.4],'linewidth',1.5)
        Distrib_Act_GFP{l}(k,:)=cumsum(Y)/sum(Y);
        hold on
      end
      
      for k=1:size(DistribActEpisodes_CHR2,1)
        [Y,X]=hist(DistribActEpisodes_CHR2{k,l},[0:0.2:80]);
        plot(X,cumsum(Y)/sum(Y),'color',[0.4 0.4 0.8],'linewidth',1.5)
        Distrib_Act_CHR2{l}(k,:)=cumsum(Y)/sum(Y);
        hold on
    end
    
  
    
    subplot(2,2,l+1)
        for k=1:size(DistribFzEpisodes_GFP,1)
        [Y,X]=hist(DistribFzEpisodes_GFP{k,l},[0:0.2:80]);
        plot(X,cumsum(Y)/sum(Y),'color',[0.4 0.8 0.4],'linewidth',1.5)
        Distrib_Fz_GFP{l}(k,:)=cumsum(Y)/sum(Y);
        hold on
    end

    for k=1:size(DistribFzEpisodes_CHR2,1)
        [Y,X]=hist(DistribFzEpisodes_CHR2{k,l},[0:0.2:80]);
        plot(X,cumsum(Y)/sum(Y),'color',[0.4 0.4 0.8],'linewidth',1.5)
        Distrib_Fz_CHR2{l}(k,:)=cumsum(Y)/sum(Y);
        hold on
    end
    
    
end
