%AnalyseQuantifExploM07Day02032011


load behavResources
sav=0;
ComputeReversal=1;
NbICSS=2;
limitmaze=350;

%EpochT= %epoch pour l'explo dans un envireonement donnÃ©

%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------


figure('color',[1 1 1]), 
AllsessionFig=gcf;
L=length(Start(TrackingEpoch));
for l=1:L
      TrackEpoch=subset(TrackingEpoch,l);
      hold on, subplot(ceil(L/4),4,l), plot(Data(Restrict(X,TrackEpoch)),Data(Restrict(Y,TrackEpoch)),'k');xlim([0 300]);ylim([0 300]);
      title(namePos{l}(27:end-9)); 
      
      if ismember(Start(TrackEpoch),Start(ICSSEpoch))==1
          RgStim=Range(Restrict(stim,TrackEpoch));
          FirstStim=RgStim(1);
          LastStim=RgStim(end);
          PreStimEpoch=intervalSet(Start(TrackEpoch),FirstStim);
          RealStimEpoch=intervalSet(FirstStim,LastStim);
          ReversalEpoch=intervalSet(LastStim,Stop(TrackEpoch));
          hold on, subplot(ceil(L/4),4,l), plot(Data(Restrict(X,RealStimEpoch)),Data(Restrict(Y,RealStimEpoch)),'r');xlim([0 300]);ylim([0 300]);
          hold on, subplot(ceil(L/4),4,l), plot(Data(Restrict(X,ReversalEpoch)),Data(Restrict(Y,ReversalEpoch)),'b');xlim([0 300]);ylim([0 300]);

      end
      if NbICSS==0 & l==1
          i=5;
          Epoch1=intervalSet(Start(TrackEpoch)+(i-1)*120*1E4,Start(TrackEpoch)+i*120*1E4);
          EpochS=TrackEpoch;
          Epoch2=TrackEpoch;
      end
          
      if NbICSS==1 
          if l==2
          Epoch1=PreStimEpoch;
          EpochS=RealStimEpoch;
          Epoch2=ReversalEpoch;
          elseif l==3
              Epoch2=intervalSet(Start(Epoch2),Stop(ReversalEpoch));
          end
      elseif NbICSS==2 & l==3
          Epoch1=PreStimEpoch;
          EpochS=RealStimEpoch;
          Epoch2=ReversalEpoch;
%     elseif NbICSS==2 & l==3
%           Epoch1=intervalSet(FirstStim-120*1E4,FirstStim);
%           Epoch2=intervalSet(LastStim,LastStim+120*1E4);
%           EpochS=RealStimEpoch;
      elseif NbICSS==3
          if l==3
             Epoch1=intervalSet(Stop(ReversalEpoch)-120*1E4,Stop(ReversalEpoch));
          elseif l==4
              Epoch1=intervalSet(Start(Epoch1),Stop(PreStimEpoch));
              EpochS=RealStimEpoch;
          elseif l==5
              Epoch2=TrackEpoch;
          end            
              
      elseif NbICSS==4
          if l==5
             Epoch1=TrackEpoch;
          elseif l==6
             EpochS=TrackEpoch;
          elseif l==7
              Epoch2=TrackEpoch;
          elseif l==8
              Epoch2=intervalSet(Start(Epoch2),Stop(TrackEpoch));
          end
      end
          
end

%Epoch2=intervalSet(Start(Epoch2)+3*(Stop(TrackEpoch)-Start(Epoch2))/4,Stop(TrackEpoch));

figure('color',[1 1 1]), hold on,
subplot(1,3,1), hold on, scatter(Data(Restrict(X,Epoch1)),Data(Restrict(Y,Epoch1)),5,Range(Restrict(X,Epoch1))/1E4,'filled');xlim([0 300]);ylim([0 300]);
title('PRE explo'); 
subplot(1,3,2), plot(Data(Restrict(X,EpochS)),Data(Restrict(Y,EpochS)),'k');xlim([0 300]);ylim([0 300]);
title('ICSS session'); 
%title('ICSS-4 session');
subplot(1,3,3), hold on, scatter(Data(Restrict(X,Epoch2)),Data(Restrict(Y,Epoch2)),5,Range(Restrict(X,Epoch2))/1E4,'filled');xlim([0 300]);ylim([0 300]);
title('POST explo'); 
%subplot(1,2,2), plot(Data(Restrict(X,Epoch2)),Data(Restrict(Y,Epoch2)),'k');xlim([0 300]);ylim([0 300]);
%title('POST explo 4/4');
      
      
smo=2;
sizeMap=50;
tpsTh=0.75*1E4;
Limdist=30;
Vth=20;
        legend{1}='Pre';
        legend{2}='Post';
        legend{3}='Pre';
        legend{4}='Post';

%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
        
X1=Restrict(X,Epoch1);
Y1=Restrict(Y,Epoch1);
Y2=Restrict(Y,Epoch2);
X2=Restrict(X,Epoch2);


Mvt=thresholdIntervals(V,Vth,'Direction','Above');
XS=Restrict(X,EpochS);
YS=Restrict(Y,EpochS);
stimS=Restrict(stim,EpochS);

%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
[mapS,mapSs,statsS,pxS,pyS,Fr,si,PF,centre]=PlaceField(stimS,XS,YS,'size',sizeMap,'limitmaze',[0 limitmaze]);


kk=GravityCenter(PF);

m=mapS.rate;
m(PF==0)=0;
SE=strel('square',6);
PFb=imdilate(PF,SE);
mb=mapS.rate;
mb(PFb==0)=0;


[Oc1,OcS1,OcR1,OcRS1]=OccupancyMapKB(X1,Y1,'axis',[0 15],'smoothing',smo,'size',si,'limitmaze',[0 limitmaze]);close
[Oc2,OcS2,OcR2,OcRS2]=OccupancyMapKB(X2,Y2,'axis',[0 15],'smoothing',smo,'size',si,'limitmaze',[0 limitmaze]);close
[OcS,OcSS,OcRS,OcRSS]=OccupancyMapKB(XS,YS,'axis',[0 15],'smoothing',smo,'size',si,'limitmaze',[0 limitmaze]);close

try
[OcT,OcST,OcRT,OcRST]=OccupancyMapKB(Restrict(X,EpochT),Restrict(X,EpochT),'axis',[0 15],'smoothing',0.5,'size',si,'limitmaze',[0 limitmaze]);close
catch
[OcT,OcST,OcRT,OcRST]=OccupancyMapKB(X,Y,'axis',[0 15],'smoothing',0.5,'size',si,'limitmaze',[0 limitmaze]);close    
end

m1=OcR1;
m1(PF==0)=0;
m2=OcR2;
m2(PF==0)=0;
mS=OcRS;
mS(PF==0)=0;

m1S=OcRS1;
m1S(PF==0)=0;
m2S=OcRS2;
m2S(PF==0)=0;
mSS=OcRSS;
mSS(PF==0)=0;

SE=strel('square',6);
PFb=imdilate(PF,SE);

mb=mapS.rate;
mb(PFb==0)=0;
m1b=OcR1;
m1b(PFb==0)=0;
m2b=OcR2;
m2b(PFb==0)=0;
mSb=OcRS;
mSb(PFb==0)=0;

m1Sb=OcRS1;
m1Sb(PFb==0)=0;
m2Sb=OcRS2;
m2Sb(PFb==0)=0;
mSSb=OcRSS;
mSSb(PFb==0)=0;


%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------

% compute Instantaneous Angle
Angl = ComputeInstantaneuousAngle(Data(X),Data(Y));
Ang=tsd(Range(X),Angl);
Ang=Restrict(Ang,Mvt);



% homogeneity

BW=OcT;
BW(BW>0)=1;
[B,L,N,A] = bwboundaries(BW);
BW(L>0)=1;



VOcR1=OcRS1;
VOcR1(find(BW==0))=[];

VOcR2=OcRS2(:);
VOcR2(find(BW==0))=[];

MO1=mean(mean(VOcR1))*ones(size(VOcR1,1),size(VOcR1,2));
MO2=mean(mean(VOcR2))*ones(size(VOcR2,1),size(VOcR2,2));
MOCR1=VOcR1-MO1;
MOCR2=VOcR2-MO2;
homogeneity(1,1)=1-sum(abs(MOCR1(:)))/(100+length(VOcR1)*mean(MO1));
homogeneity(2,1)=1-sum(abs(MOCR2(:)))/(100+length(VOcR1)*mean(MO2));



% df   = dimsizes(bin1) - 1               % degrees of freedom
% chi2 = sum( (bin1-bin2)^2/bin2 )        % chi-square statistic
% prob = 1. - gammainc( 0.5*chi2, df*0.5) % technically, the complementary gamma function
% 

chi(1,1)=sum((VOcR1(:)-MO1(:)).^2./MO1(:).^2);
p(1,1)=1-gammainc(chi(1,1)/2,(length(MO1(:))-1)/2);

chi(2,1)=sum((VOcR2(:)-MO2(:)).^2./MO2(:).^2);
p(2,1)=1-gammainc(chi(2,1)/2,(length(MO2(:))-1)/2);

homogeneity(1,2)=chi(1,1);
homogeneity(1,3)=p(1,1);
homogeneity(2,2)=chi(2,1);
homogeneity(2,3)=p(2,1);

% 
% 
% chiB=sum((OcR1(:)-OcR2(:)).^2./OcR2(:).^2);
% PBimod=1-gammainc(chiB/2,(length(OcR2(:))-1)/2);
% 



%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%--------------------------------------------------------------------------


Gstim(1)=mean(pxS);
Gstim(2)=mean(pyS);

dis=tsd(Range(X),sqrt((Data(X)-Gstim(1)).*(Data(X)-Gstim(1))+(Data(Y)-Gstim(2)).*(Data(Y)-Gstim(2))));

%plot dis

figure('color',[1 1 1]), 
plot(Range(Restrict(dis,Epoch1),'s'),Data(Restrict(dis,Epoch1)),'k','linewidth',4)
hold on,  plot(Range(Restrict(dis,EpochS),'s'),Data(Restrict(dis,EpochS)),'linewidth',4)
hold on,  plot(Range(Restrict(dis,Epoch2),'s'),Data(Restrict(dis,Epoch2)),'k','linewidth',4)
hold on, plot(Range(Restrict(stim,EpochS),'s'), ones(length(Range(Restrict(stim,EpochS)))),'ro','markerfacecolor','r','linewidth',5)







%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
% Compute exploration in quadrant (8 zones of 3hours)
      
ce=[round((max([Data(X1);Data(X2)])-min([Data(X1);Data(X2)]))/2),round((max([Data(Y1);Data(Y2)])-min([Data(Y1);Data(Y2)]))/2)];

%-----------------------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------

% Compute time spent in the stimulation area
% Compute correlation coeff between explo and StimExplo
r=corrcoef(mapS.rate(find(BW==1)),OcRSS(find(BW==1)));
efficiency

val=mapS.rate(find(BW==1));
val1=OcRS1(find(BW==1));
val2=OcRS1(find(BW==1));
level=max(val)/5;
level1=max(val1)/5;
level2=max(val2)/5;

[r1corrected,p1corrected]=corrcoef(val(find(val>level|val1>level1)),val1(find(val>level|val1>level1)));
[r2corrected,p2corrected]=corrcoef(val(find(val>level|val2>level2)),val2(find(val>level|val2>level2)));

figure,imagesc(OcRS1);
figure,imagesc(OcRS2);

r1=corrcoef(mapS.rate(find(BW==1)),OcRS1(find(BW==1)));
r2=corrcoef(mapS.rate(find(BW==1)),OcRS2(find(BW==1)));

CorrelationCoef(1,:)=r1(1,2);
CorrelationCoef(2,:)=r2(1,2);
CorrelationCoefCorrected(1,:)=r1corrected(1,2);
CorrelationCoefCorrected(2,:)=r2corrected(1,2);

durEpoch1=sum(End(Epoch1,'s')-Start(Epoch1,'s'));
durEpoch2=sum(End(Epoch2,'s')-Start(Epoch2,'s'));
TimeInStimArea(1,1)=sum(sum(m1S))/durEpoch1;
TimeInStimArea(2,1)=sum(sum(m2S))/durEpoch2;

TimeInLargeStimArea(1,1)=sum(sum(m1Sb))/durEpoch1;
TimeInLargeStimArea(2,1)=sum(sum(m2Sb))/durEpoch2;

DistanceToStimZone(1,1)=sum(Data(Restrict(dis,Epoch1)))/length(Data(Restrict(dis,Epoch1)));
DistanceToStimZone(2,1)=sum(Data(Restrict(dis,Epoch2)))/length(Data(Restrict(dis,Epoch2)));

Ang1=Restrict(Ang,Epoch1);
Ang2=Restrict(Ang,Epoch2);
try
    int1=thresholdIntervals(Restrict(dis,Epoch1),Limdist,'Direction','Below');
    int1r=dropShortIntervals(int1,tpsTh);
    rg1=Start(int1r,'s');
    ref1=Range(Restrict(dis,Epoch1),'s');
    tps1=rg1(1)-ref1(1);
    trajdir1=intervalSet(ref1(1)*1E4,rg1(1)*1E4);
    StdAngle(1,1)=std(Data(Restrict(Ang1,trajdir1)));
    
catch
    tps1=durEpoch1;
end
try
    int2=thresholdIntervals(Restrict(dis,Epoch2),Limdist,'Direction','Below');
    int2r=dropShortIntervals(int2,tpsTh);
    rg2=Start(int2r,'s');
    ref2=Range(Restrict(dis,Epoch2),'s');
    tps2=rg2(1)-ref2(1);
    trajdir2=intervalSet(ref2(1)*1E4,rg2(1)*1E4);
    StdAngle(2,1)=std(Data(Restrict(Ang2,trajdir2)));
catch
    tps2=durEpoch2;
end

tps1(tps1>durEpoch1)=durEpoch1;
tps2(tps2>durEpoch2)=durEpoch2;

DelayToStimZone(1,1)=tps1;
DelayToStimZone(2,1)=tps2;

zone1=thresholdIntervals(X,ce(1),'Direction','Above');
zone2=thresholdIntervals(X,ce(1),'Direction','Below');
zone3=thresholdIntervals(Y,ce(2),'Direction','Above');
zone4=thresholdIntervals(Y,ce(2),'Direction','Below');

zoneNE=and(zone1,zone3);
zoneSE=and(zone1,zone4);
zoneNW=and(zone2,zone3);
zoneSW=and(zone2,zone4);
% 1+5 NE, 2+6 SE, 3+7 NW, 4+8 SW
QuadrantTime(1,1)=length(Data(Restrict(X1,zoneNE)))/30;
QuadrantTime(1,2)=length(Data(Restrict(X1,zoneSE)))/30;
QuadrantTime(1,3)=length(Data(Restrict(X1,zoneNW)))/30;
QuadrantTime(1,4)=length(Data(Restrict(X1,zoneSW)))/30;
QuadrantTime(2,1)=length(Data(Restrict(X2,zoneNE)))/30;
QuadrantTime(2,2)=length(Data(Restrict(X2,zoneSE)))/30;
QuadrantTime(2,3)=length(Data(Restrict(X2,zoneNW)))/30;
QuadrantTime(2,4)=length(Data(Restrict(X2,zoneSW)))/30;



if sav==1
    c=cd;

    save('ICSS-Mouse-07-02032011-AnalyseResources-ICSS2-120s-Rev4','TimeInStimArea','TimeInLargeStimArea','CorrelationCoef','DistanceToStimZone','StdAngle','DelayToStimZone','QuadrantTime');
end


%legend('Trial 1','Trial 2','Trial 3','Trial 4','Trial 5','Trial 6','Trial 7','Trial 8')      

%---------------------------
%---------- plot -----------


figure('color',[1 1 1]), 
subplot(2,3,1:2)
bar([sum(sum(m1S))/durEpoch1 sum(sum(m2S))/durEpoch2 sum(sum(m1Sb))/durEpoch1 sum(sum(m2Sb))/durEpoch2],'k')
ylabel('Time spent in  Stimulation area')
            set(gca,'xtick',1:4)
            set(gca,'xticklabel',legend)
            
numfig=gcf;

subplot(2,3,3)

r1=corrcoef(mapS.rate(:),OcRS1(:));
r2=corrcoef(mapS.rate(:),OcRS2(:));
r1=r1(1,2);
r2=r2(1,2);
bar([r1 r2],'k')
ylabel('Correlation Occ. Map vs Stim. area')
            set(gca,'xtick',1:2)
            set(gca,'xticklabel',legend)            


%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------

figure('color',[1 1 1]),
subplot(2,4,1), imagesc(mapS.rate), axis xy, title('ICSS'), hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')
subplot(2,4,5), imagesc(m),axis xy, hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')

subplot(2,4,4), imagesc(OcRS2),axis xy, caS1=caxis; title('Explo Post'), hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')
subplot(2,4,2), imagesc(OcRS1),axis xy,caxis(caS1); title('Explo Pre'), hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')
subplot(2,4,3), imagesc(OcRSS),axis xy,caxis(caS1); title('Explo ICSS'), hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')

subplot(2,4,8), imagesc(OcRS2+2*m2S), axis xy,caS2=caxis; hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')
subplot(2,4,6), imagesc(OcRS1+2*m1S), axis xy,caxis(caS2), hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')




figure('color',[1 1 1]),
subplot(2,3,1), imagesc(mapS.rate), axis xy, title('ICSS'), hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')
subplot(2,3,4), imagesc(mb),axis xy, hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')

subplot(2,3,3), imagesc(OcRS2),axis xy, caS1=caxis; title('Explo Post'), hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')
subplot(2,3,2), imagesc(OcRS1),axis xy,caxis(caS1); title('Explo Pre'), hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')
subplot(2,3,6), imagesc(OcRS2+2*m2Sb), axis xy,caS2=caxis; hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')
subplot(2,3,5), imagesc(OcRS1+2*m1Sb), axis xy,caxis(caS2), hold on, plot(kk(1),kk(2),'ko','markerFaceColor','w')
%--------------------------------------------------------------------------



if length(Start(Epoch1))==1
    dis1=Restrict(dis,Epoch1);
    dis2=Restrict(dis,Epoch2);
    figure('color',[1 1 1]), hold on
    plot(pxS,pyS,'.','Color',[0.7 0.7 0.7])
    plot(Data(Restrict(X,Epoch1)),Data(Restrict(Y,Epoch1)))
    plot(Data(Restrict(X,Epoch2)),Data(Restrict(Y,Epoch2)),'r');
    st1=Start(Epoch1);
    st2=Start(Epoch2);
    plot(Data(Restrict(X,st1)),Data(Restrict(Y,st1)),'bo','markerfacecolor','b')
    plot(Data(Restrict(X,st2)),Data(Restrict(Y,st2)),'ro','markerfacecolor','r')
    numfig2=gcf;
    
    
    D1=sum(Data(dis1))/length(Data(dis1));
    D2=sum(Data(dis2))/length(Data(dis2));
    
    figure(numfig), subplot(2,3,4)
    bar([D1,D2],'k'), xlim([0 3])
    ylabel('Cumulative distance to Stim area (s)')
    set(gca,'xtick',1:2)
    set(gca,'xticklabel',legend)
    
    
    
    figure(numfig2), hold on
    
    try
        epoghAng=Restrict(Ang,Epoch1);
        %    scatter(Data(Restrict(X1,dis1)),Data(Restrict(Y1,dis1)),30,Data(Restrict(Ang,dis1)),'filled'), title(num2str(mean(Data(Restrict(Ang,dis1)))))
        %scatter(Data(Restrict(X1,epoghAng)),Data(Restrict(Y1,epoghAng)),30,Data(Restrict(Ang,Epoch1)),'filled'), title(num2str(mean(Data(Restrict(Ang,Epoch1)))))
        plot(Data(Restrict(X1,trajdir1)),Data(Restrict(Y1,trajdir1)),'b','linewidth',2)
    end
    
    try
        plot(Data(Restrict(X2,trajdir2)),Data(Restrict(Y2,trajdir2)),'r','linewidth',2)
    end
    xlim([0 300])
    ylim([0 300])
    
    
    figure(numfig),
    subplot(2,3,5)
    bar([tps1, tps2],'k'), %xlim([0 3])
    ylabel('Time delay to Stim area (s)')
    set(gca,'xtick',1:2)
    set(gca,'xticklabel',legend)
    
    
    
    subplot(2,3,6), hold on, %legend('Pre','Post');
    bar([StdAngle(1,1), StdAngle(2,1)],'k'), xlim([0 3])
    ylabel('Cumulative angle to Stim area (deg)')
    set(gca,'xtick',1:2)
    set(gca,'xticklabel',legend)
else
    
    
    
    for i=1:length(Start(Epoch1))
        
        Ep1=subset(Epoch1,i);
        Ep2=subset(Epoch2,i);
        
        Dis1=Restrict(dis,Ep1);
        Dis2=Restrict(dis,Ep2);
        
        D1(i)=sum(Data(Dis1))/length(Data(Dis1));
        D2(i)=sum(Data(Dis2))/length(Data(Dis2));
        
            
    end
%     
%     tps1(tps1>limTemp)=limTemp;
%     tps2(tps2>limTemp)=limTemp;
%     
%     
    [Df1,Sf1,Ef1]=MeanDifNan(D1');
    [Df2,Sf2,Ef2]=MeanDifNan(D2');
    
    %keyboard
    figure(numfig),
    subplot(2,3,4),hold on,
    errorbar([Df1,Df2],[Ef1,Ef2],'k+')
    bar([Df1,Df2],'k'), xlim([0 3])
    ylabel('Cumulative distance to Stim area (s)')
    set(gca,'xtick',1:2)
    set(gca,'xticklabel',legend)
    
    [tm1,ts1,te1]=MeanDifNan(tps1');
    [tm2,ts2,te2]=MeanDifNan(tps2');
    
    subplot(2,3,5), hold on, %legend('Pre','Post');
    errorbar([tm1, tm2],[te1, te2],'k+')
    bar([tm1, tm2],'k'), xlim([0 3])
    ylabel('Time delay to Stim area (s)')
    set(gca,'xtick',1:2)
    set(gca,'xticklabel',legend)
    
    
    
    [am1,as1,ae1]=MeanDifNan(ang1');
    [am2,as2,ae2]=MeanDifNan(ang2');
    
    subplot(2,3,6), hold on, %legend('Pre','Post');
    errorbar([am1, am2],[ae1, ae2],'k+')
    bar([am1, am2],'k'), xlim([0 3])
    ylabel('Cumulative angle to Stim area (deg)')
    set(gca,'xtick',1:2)
    set(gca,'xticklabel',legend)
    
end


%----------------------------
% Reversal Periods

F=floor((Stop(Epoch2)-Start(Epoch2))/(60*1E4));
Fpre=floor((Stop(Epoch1)-Start(Epoch1))/(60*1E4));
if ComputeReversal==1
    if Fpre>=1
        for f=1:min(Fpre,3)
            I=intervalSet(Stop(Epoch1)-f*(60*1E4),Stop(Epoch1)-(f-1)*(60*1E4));
            durEpochI=sum(End(I,'s')-Start(I,'s'));
            X1=Restrict(X,I);
            Y1=Restrict(Y,I);
            [Oc1,OcS1,OcR1,OcRS1]=OccupancyMapKB(X1,Y1,'axis',[0 15],'smoothing',smo,'size',si,'limitmaze',[0 350]);close
            
            m1S=OcRS1;
            m1S(PF==0)=0;
            m1Sb=OcRS1;
            m1Sb(PFb==0)=0;
            
            r=corrcoef(mapS.rate(find(BW==1)),OcRS1(find(BW==1)));
            val1=mapS.rate(find(BW==1));
            val2=OcRS1(find(BW==1));
            level1=max(val1)/5;
            level2=max(val2)/5;
            [rcorrected,p1corrected]=corrcoef(val1(find(val1>level1|val2>level2)),val2(find(val1>level1|val2>level2)));
            
            figure,
            imagesc(OcRS);
            RevCorrelationCoef(1,f)=r(1,2);
            RevCorrelationCoefCorrected(1,f)=rcorrected(1,2);
            
            RevTimeInStimArea(1,f)=sum(sum(m1S));
            RevTimeInLargeStimArea(1,f)=sum(sum(m1Sb));
            
            RevDistanceToStimZone(1,f)=sum(Data(Restrict(dis,I)))/length(Data(Restrict(dis,I)));
            Ang1=Restrict(Ang,I);
            try
                int1=thresholdIntervals(Restrict(dis,I),Limdist,'Direction','Below');
                int1r=dropShortIntervals(int1,tpsTh);
                rg1=Start(int1r,'s');
                ref1=Range(Restrict(dis,I),'s');
                tps1=rg1(1)-ref1(1);
                trajdir1=intervalSet(ref1(1)*1E4,rg1(1)*1E4);
                RevStdAngle(1,f)=std(Data(Restrict(Ang1,trajdir1)));
                
            catch
                tps1=durEpochI;
            end

        tps1(tps1>durEpochI)=durEpochI;
        RevDelayToStimZone(1,f)=tps1;
        end
    end
            
    for f=1:F
        I=intervalSet(Start(Epoch2)+(f-1)*(60*1E4),Start(Epoch2)+f*(60*1E4));
        durEpochI=sum(End(I,'s')-Start(I,'s'));
        X1=Restrict(X,I);
        Y1=Restrict(Y,I);
        [Oc1,OcS1,OcR1,OcRS1]=OccupancyMapKB(X1,Y1,'axis',[0 15],'smoothing',smo,'size',si,'limitmaze',[0 350]);close
        
        m1S=OcRS1;
        m1S(PF==0)=0;

        m1Sb=OcRS1;
        m1Sb(PFb==0)=0;
        
        r=corrcoef(mapS.rate(find(BW==1)),OcRS1(find(BW==1)));
        val1=mapS.rate(find(BW==1));
        val2=OcRS1(find(BW==1));
        level1=max(val1)/5;
        level2=max(val2)/5;
        [rcorrected,p1corrected]=corrcoef(val1(find(val1>level1|val2>level2)),val2(find(val1>level1|val2>level2)));
        
        figure,
        imagesc(OcRS);
        RevCorrelationCoef(2,f)=r(1,2);
        RevCorrelationCoefCorrected(2,f)=rcorrected(1,2);
          
        RevTimeInStimArea(2,f)=sum(sum(m1S));        
        RevTimeInLargeStimArea(2,f)=sum(sum(m1Sb));
        
        RevDistanceToStimZone(2,f)=sum(Data(Restrict(dis,I)))/length(Data(Restrict(dis,I)));
        Ang1=Restrict(Ang,I);
        
        try
            int1=thresholdIntervals(Restrict(dis,I),Limdist,'Direction','Below');
            int1r=dropShortIntervals(int1,tpsTh);
            rg1=Start(int1r,'s');
            ref1=Range(Restrict(dis,I),'s');
            tps1=rg1(1)-ref1(1);
            trajdir1=intervalSet(ref1(1)*1E4,rg1(1)*1E4);
            RevStdAngle(2,f)=std(Data(Restrict(Ang1,trajdir1)));
            
        catch
            tps1=durEpochI;
        end

        tps1(tps1>durEpochI)=durEpochI;
        RevDelayToStimZone(2,f)=tps1;
    end
end