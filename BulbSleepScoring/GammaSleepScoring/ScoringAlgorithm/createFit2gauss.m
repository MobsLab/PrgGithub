function [cf_,goodness]=createFit2gauss(X,Y,st_)
%CREATEFIT Create plot of data sets and fits
%   CREATEFIT(X,Y)
%   Creates a plot, similar to the plot in the main Curve Fitting Tool,
%   using the data that you provide as input.  You can
%   use this function with the same data you used with CFTOOL
%   or with different data.  You may want to edit the function to
%   customize the code and this help message.
%
%   Number of data sets:  1
%   Number of fits:  1

% Data from data set "Y vs. X":
%     X = X:
%     Y = Y:
%     Unweighted

% Auto-generated by MATLAB on 07-Apr-2014 13:19:45
% 
% % Set up figure to receive data sets and fits
% f_ = clf;
% figure(f_);
% set(f_,'Units','Pixels','Position',[2082 333 688 490]);
% % Line handles and text for the legend.
% legh_ = [];
% legt_ = {};
% % Limits of the x-axis.
% xlim_ = [Inf -Inf];
% % Axes for the plot.
% ax_ = axes;
% set(ax_,'Units','normalized','OuterPosition',[0 0 1 1]);
% set(ax_,'Box','on');
% axes(ax_);
% hold on;
% 
% % --- Plot data that was originally in data set "Y vs. X"
X = X(:);
Y = Y(:);
% h_ = line(X,Y,'Parent',ax_,'Color',[0.333333 0 0.666667],...
%     'LineStyle','none', 'LineWidth',1,...
%     'Marker','.', 'MarkerSize',12);
% xlim_(1) = min(xlim_(1),min(X));
% xlim_(2) = max(xlim_(2),max(X));
% legh_(end+1) = h_;
% legt_{end+1} = 'Y vs. X';
% 
% % Nudge axis limits beyond data limits
% if all(isfinite(xlim_))
%     xlim_ = xlim_ + [-1 1] * 0.01 * diff(xlim_);
%     set(ax_,'XLim',xlim_)
% else
%     set(ax_, 'XLim',[6.8972883472563575324, 14.869846162885663077]);
% end
% --- Create fit "fit 1"
fo_ = fitoptions('method','NonlinearLeastSquares','Lower',[0 0 0 0 0  0]);
ok_ = isfinite(X) & isfinite(Y);
if ~all( ok_ )
    warning( 'GenerateMFile:IgnoringNansAndInfs',...
        'Ignoring NaNs and Infs in data.' );
end

if exist('st_')
set(fo_,'Startpoint',st_);
% SB added this 2018 for better fitting with little data
if not(isempty(st_) )
    DiffXAx = abs(st_(2) - st_(5));
    set(fo_,'Lower',[0  st_(2)-DiffXAx 0 0 st_(5)-DiffXAx   0],'Upper',[Inf  st_(2)+DiffXAx Inf Inf st_(5)+DiffXAx  Inf]);
end
end
ft_ = fittype('gauss2');
% Fit this model using new data
[cf_,goodness]  = fit(X(ok_),Y(ok_),ft_,fo_);
