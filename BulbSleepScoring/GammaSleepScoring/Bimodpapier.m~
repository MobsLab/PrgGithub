%% Evaluate bimodality of distribution
struc={'B','H','PF','Pa'};
clear chan filename2
m=1;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M60/20130415/';
chan(m,:)=[1,10,4,13];
m=2;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M82/20130730/';
chan(m,:)=[2,9,10,7];
m=3;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M83/20130729/';
chan(m,:)=[6,10,5,13];
m=4;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M123/LPSD1/';
chan(m,:)=[15,6,4,9];
m=5;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M51/09112012/';
chan(m,:)=[17,9,12,3];
m=6;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M61/20130415/';
chan(m,:)=[7,8,3,4];
m=7;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M147/';
chan(m,:)=[2,13,8,14];
m=8;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M148/20140828/';
chan(m,:)=[4,11,8,14];
m=9;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M243/01042015/';
chan(m,:)=[16,17,26,18];
m=10;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M244/09042015/';
chan(m,:)=[41,48,57,44];
m=11;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M251/21052015/';
todo(m,:)=[1,1,1,1];
chan(m,:)=[12,22,11,25];
m=12;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M252/21052015/';
chan(m,:)=[46,55,62,57];
m=13;
filename2{m}='/media/DataMOBSSlSc/SleepScoringMice/M177178/M177178-Sleep-22102014/M178/';
chan(m,:)=[26,31,21,NaN];

smrange=[0.1,0.5,1,2,3,4,5];
%smrange=[0.1,1,1.5,3,4.5];

cc=jet(length(smrange));

for file=1:13
    %Getting the right Epochs
    file
    cd(filename2{file})
    load('StateEpochSB.mat','NoiseEpoch','GndNoiseEpoch','Epoch');
    clear X Y
    
    for st=1:4
        if not(isnan(chan(file,st)))
            load(strcat('LFPData/LFP',num2str(chan(file,st)),'.mat'));
            rg=Range(LFP);
            TotalEpoch=intervalSet(0,rg(end))-NoiseEpoch-GndNoiseEpoch;
            
            % Generate the data of varying smoothness
            clear Hilgamma
            try 
                load(strcat('Hilgamma', num2str(st), '.mat'))
            catch
            Filgamma=FilterLFP(LFP,[50 70],1024);
            Restrict(Filgamma,TotalEpoch);
            Hilgamma=hilbert(Data(Filgamma));
            Hilgamma=tsd(Range(Filgamma),abs(Hilgamma));
            smfact=floor(smrange/median(diff(Range(Hilgamma,'s'))));
            save(strcat('Hilgamma', num2str(st), '.mat'),'Hilgamma','-v7.3')
            end
            clear smooth_ghi_hil
            for i=1:length(smfact)
                i
                smooth_ghi_hil{i}=tsd(Range(Hilgamma),runmean(Data(Hilgamma),smfact(i)));
            end
            
            for i=1:length(smfact)
                [Y{i,st},X{i,st}]=hist(log(Data(smooth_ghi_hil{i})),700);
                st_ = [1.0e-2 X{i,st}(find(Y{i,st}==max(Y{i,st}))) 0.101 5e-3 X{i,st}(find(Y{i,st}==max(Y{i,st})))+1 0.21];
                [cf2,goodness2]=createFit2gauss(X{i,st},Y{i,st}/sum(Y{i,st}),st_);
                [cf1,goodness1]=createFit1gauss(X{i,st},Y{i,st}/sum(Y{i,st}));
                
                % goodness of fits
                rms{file,st}(i,1)=goodness1.sse;
                rms{file,st}(i,2)=goodness2.sse;
                rms{file,st}(i,3)=goodness1.rsquare;
                rms{file,st}(i,4)=goodness2.rsquare;
                rms{file,st}(i,5)=goodness1.adjrsquare;
                rms{file,st}(i,6)=goodness2.adjrsquare;
                rms{file,st}(i,7)=goodness1.rmse;
                rms{file,st}(i,8)=goodness2.rmse;
                % distance between peaks
                a= coeffvalues(cf2);
                dist{file,st}(i,1)=abs(a(2)-a(5));
                b=(a(3)-a(6))^2/(a(3)^2+a(6)^2);
                dist{file,st}(i,2)=1-sqrt(2*a(3)*a(6)/(a(3)^2+a(6)^2))*exp(-0.25*b);
                % overlap
                d=([min(X{i,st}):max(X{i,st})/1000:max(X{i,st})]);
                Y1=normpdf(d,a(2),max(a(3)/sqrt(2),mean(diff(d))));
                Y2=normpdf(d,a(5),max(a(6)/sqrt(2),mean(diff(d))));
                dist{file,st}(i,3)=sum(min(Y1,Y2)*mean(diff(d)));
                dist{file,st}(i,4)=sqrt(2)*abs(a(2)-a(5))/sqrt(a(3).^2+a(6).^2);
                coeff{file,st}(i,1:6)=a;
                coeff{file,st}(i,7:8)=intersect_gaussians(a(2), a(5), a(3), a(6));
                %                   clf
                %                   sqrt(2)*abs(a(2)-a(5))/sqrt(a(3).^2+a(6).^2)
                %                   sum(min(Y1,Y2)/sum(Y2))
                %                 plot(X{i,st},Y{i,st}/sum(Y{i,st}))
                                hold on
                                h_ = plot(cf2,'fit',0.95);
                %                 keyboard
            end
        end
    end
    save('BimdodPapierData.mat','X','Y')
end
save('/media/DataMOBSSlSc/SleepScoringMice/AnalysisResults/ResultsPapier/BimodalityPapierResults.mat','rms','dist','coeff')

figure
file=1
st=1
for st=1:4
    dat{st}=[];
    for file=1:13
        try
            
dat{st}=[dat{st},rms{file,st}(:,4)-rms{file,st}(:,3)];
%dat{st}=[dat{st},dist{file,st}(:,3)];
%dat{st}=[dat{st},coeff{file,st}(:,2)];


        end
    end
end
cols=jet(4);
for st=1:4
  %  g=shadedErrorBar([1:7],nanmean(dat{st}'),[stdError(dat{st}');stdError(dat{st}')])
   % set(g.patch,'FaceColor',cols(st,:))
    plot(nanmean(dat{st}'),'color',cols(st,:))
    hold on
end