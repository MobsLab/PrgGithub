function [cf_,goodness]=FitDiffusionEMG(time,y)
%CREATEFIT Create plot of data sets and fits
%   CREATEFIT(TIME,Y)
%   Creates a plot, similar to the plot in the main Curve Fitting Tool,
%   using the data that you provide as input.  You can
%   use this function with the same data you used with CFTOOL
%   or with different data.  You may want to edit the function to
%   customize the code and this help message.
%
%   Number of data sets:  3
%   Number of fits:  1

% Data from data set "y vs. time":
%     X = time:
%     Y = y:
%     Unweighted

% Data from data set "y vs. time (2 )":
%     X = time:
%     Y = y:
%     Unweighted

% Data from data set "y vs. time (3 )":
%     X = time:
%     Y = y:
%     Unweighted

% Auto-generated by MATLAB on 04-Dec-2015 18:18:31

if (sum(isnan(y)))~=length(y)

% --- Plot data that was originally in data set "y vs. time"
time = time(:);
y = y(:);

% --- Create fit "fit 1"
fo_ = fitoptions('method','NonlinearLeastSquares','Lower',[-Inf    0]);
ok_ = isfinite(time) & isfinite(y);
if ~all( ok_ )
    warning( 'GenerateMFile:IgnoringNansAndInfs',...
        'Ignoring NaNs and Infs in data.' );
end
st_ = [y(find(time>1,1,'first')) 2];
set(fo_,'Startpoint',st_);
ft_ = fittype('2*a*x^b',...
    'dependent',{'y'},'independent',{'x'},...
    'coefficients',{'a', 'b'});

% Fit this model using new data
[cf_,goodness] = fit(time(ok_),y(ok_),ft_,fo_);
else
   cf_.coeffValues=[];
   goodness.rsquare=NaN;
end
% Alternatively uncomment the following lines to use coefficients from the
% original fit. You can use this choice to plot the original fit against new
% data.
%    cv_ = { 1.4342289806721835935e-05, 1.8549683958131624184};
%    cf_ = cfit(ft_,cv_{:});

