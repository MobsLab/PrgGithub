function [cf_,goodness]=createFit2gauss(X,Y,st_)
%CREATEFIT Create plot of data sets and fits
%   CREATEFIT(X,Y)
%   Creates a plot, similar to the plot in the main Curve Fitting Tool,
%   using the data that you provide as input.  You can
%   use this function with the same data you used with CFTOOL
%   or with different data.  You may want to edit the function to
%   customize the code and this help message.
%
%   Number of data sets:  1
%   Number of fits:  1

% Data from data set "Y vs. X":
%     X = X:
%     Y = Y:
%     Unweighted

% Auto-generated by MATLAB on 07-Apr-2014 13:19:45
% 
% % Set up figure to receive data sets and fits
% f_ = clf;
% figure(f_);
% set(f_,'Units','Pixels','Position',[2082 333 688 490]);
% % Line handles and text for the legend.
% legh_ = [];
% legt_ = {};
% % Limits of the x-axis.
% xlim_ = [Inf -Inf];
% % Axes for the plot.
% ax_ = axes;
% set(ax_,'Units','normalized','OuterPosition',[0 0 1 1]);
% set(ax_,'Box','on');
% axes(ax_);
% hold on;
% 
% % --- Plot data that was originally in data set "Y vs. X"
X = X(:);
Y = Y(:);
% h_ = line(X,Y,'Parent',ax_,'Color',[0.333333 0 0.666667],...
%     'LineStyle','none', 'LineWidth',1,...
%     'Marker','.', 'MarkerSize',12);
% xlim_(1) = min(xlim_(1),min(X));
% xlim_(2) = max(xlim_(2),max(X));
% legh_(end+1) = h_;
% legt_{end+1} = 'Y vs. X';
% 
% % Nudge axis limits beyond data limits
% if all(isfinite(xlim_))
%     xlim_ = xlim_ + [-1 1] * 0.01 * diff(xlim_);
%     set(ax_,'XLim',xlim_)
% else
%     set(ax_, 'XLim',[6.8972883472563575324, 14.869846162885663077]);
% end

% --- Create fit "fit 1"
fo_ = fitoptions('method','NonlinearLeastSquares','Lower',[-Inf -Inf    0 -Inf -Inf    0]);
ok_ = isfinite(X) & isfinite(Y);
if ~all( ok_ )
    warning( 'GenerateMFile:IgnoringNansAndInfs',...
        'Ignoring NaNs and Infs in data.' );
end
set(fo_,'Startpoint',st_);
ft_ = fittype('gauss2');

% Fit this model using new data
[cf_,goodness]  = fit(X(ok_),Y(ok_),ft_,fo_);
% Alternatively uncomment the following lines to use coefficients from the
% original fit. You can use this choice to plot the original fit against new
% data.
%    cv_ = { 0.0072400898571056936104, 9.4670454125414256197, 0.64735077386967909696, 0.00087803716456525684412, 11.612509273751978611, 1.8881348260536843231};
%    cf_ = cfit(ft_,cv_{:});
% 
% % Plot this fit
% h_ = plot(cf_,'fit',0.95);
% set(h_(1),'Color',[1 0 0],...
%     'LineStyle','-', 'LineWidth',2,...
%     'Marker','none', 'MarkerSize',6);
% % Turn off legend created by plot method.
% legend off;
% % Store line handle and fit name for legend.
% legh_(end+1) = h_(1);
% legt_{end+1} = 'fit 1';
% 
% % --- Finished fitting and plotting data. Clean up.
% hold off;
% % Display legend
% leginfo_ = {'Orientation', 'vertical', 'Location', 'NorthEast'};
% h_ = legend(ax_,legh_,legt_,leginfo_{:});
% set(h_,'Interpreter','none');
% % Remove labels from x- and y-axes.
% xlabel(ax_,'');
% ylabel(ax_,'');
