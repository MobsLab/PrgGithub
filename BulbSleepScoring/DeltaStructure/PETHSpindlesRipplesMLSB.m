function [M1hr,M2hr,M3hr,M1s,M2s,M3s,M1l,M2l,M3l,M1pr,M2pr,M3pr]=PETHSpindlesRipplesMLSB(res,filetosave,EpofInt)
% inputs:
% res (optional) = directory

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% %%%%%%%%%%%%%%%%%%%%%%%%%%% INITIATE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if ~exist('res','var')
    res=pwd;
end


if nargin==1
    eval('load([res,''/StateEpoch.mat''],''SWSEpoch'');')
    EpofInt{1}=SWSEpoch;
end
infoDepth={'Sup','Deep'};
structureName={'PFCx','PaCx'};

scrsz = get(0,'ScreenSize');
disp(' ')
disp(res)
Epnum=length(EpofInt);
fignum=1;
norip=0;
for mm=1:Epnum
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %% %%%%%%%%%%%%%%%%%%%% LOADING HIPPOCAMPAL LFPs %%%%%%%%%%%%%%%%%%%%%%%%%%
    
    eval('tempload=load([res,''/LFPData/InfoLFP.mat''],''InfoLFP'');')
    chHPC=tempload.InfoLFP.channel(find(strcmp(tempload.InfoLFP.structure,'dHPC')));
    
    MRip={};
    Rtimes=[];
    if ~isempty(chHPC)
        
        try
            LFPhpc;
            disp('Hpc already loaded')
        catch
            try
                % loading LFPs
                for hpc=1:length(chHPC)
                    clear temploadLFP
                    disp(['   Loading LFP',num2str(chHPC(hpc)),'.mat (Hippocampus channel ',num2str(hpc),')...'])
                    eval(['temploadLFP=load([res,''/LFPData/LFP',num2str(chHPC(hpc)),'.mat''],''LFP'');'])
                    LFPhpc{hpc}=temploadLFP.LFP;
                    % loading ripples generated by FindRipplesKarimSB.m
                    try
                       eval('tempload=load([res,''/RipplesdHPC25.mat''],''dHPCrip'',''chHPC'',''EpochRip'');') 
                       disp('   Loading RipplesdHPC25.mat (!!!change by ML 3/10/2015)')
                    catch
                        disp('   Loading RipplesdHPC.mat')
                        eval('tempload=load([res,''/RipplesdHPC.mat''],''dHPCrip'',''chHPC'',''EpochRip'');')
                    end

                    Rip=tempload.dHPCrip;
                    numChRip=find(chHPC==tempload.chHPC);
                    RipEp=tempload.EpochRip;
                    
                end
                dt=median(diff(Range(LFPhpc{hpc},'s')));
                Filsp=FilterLFP(LFPhpc{1},[120 200],256);
                HilRip=hilbert(Data(Filsp));
                HRip=tsd(Range(Filsp),abs(HilRip));
            catch
                norip=1
            end
        end
        
        if norip==0
        % Construct matrices
        Rtimes=Restrict(tsd(Rip(:,2)*1e4,Rip(:,4)),EpofInt{mm});
        Rtbeg=Restrict(tsd(Rip(:,2)*1e4,Rip(:,1)),EpofInt{mm});
        Rtend=Restrict(tsd(Rip(:,2)*1e4,Rip(:,3)),EpofInt{mm});
        
        try M1hr=PlotRipRaw(LFPhpc{1},Range(Rtimes)/1e4,80); close; catch, M1hr=[]; end
        try M2hr=PlotRipRaw(LFPhpc{2},Range(Rtimes)/1e4,80); close; catch, M2hr=[]; end
        try M3hr=PlotRipRaw(LFPhpc{3},Range(Rtimes)/1e4,80); close; catch, M3hr=[]; end
        MRip={M1hr M2hr M3hr};
        
        Ripinfo(1,mm)=size(Range(Rtimes),1)/(dt*size(Data(Restrict(LFPhpc{hpc},and(EpofInt{mm},RipEp))),1));
        Ripinfo(2,mm)=nanmean(Data(Rtimes));
        Ripinfo(3,mm)=nanmean(Data(Rtend)-Data(Rtbeg));
        Ripinfo(4,mm)=nanstd(Data(Rtimes));
        Ripinfo(5,mm)=nanstd(Data(Rtend)-Data(Rtbeg));
        else
            Rtimes=tsd(0,0);
            Ripinfo(1:5,1)=0;
        end
        
    else
        disp('   No HPC channel !!!')
    end
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %% %%%%%%%%%%%%%%%%%%%%%% LOADING CORTICAL LFPs %%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    MSpindles={};
    MDel={};
    MCtxOnRip={};
    Stimes={};
    Dtimes={};
    % loading ripples generated by FindRipplesKarimSB.m
    for nn=1:length(structureName)
        
        try
            LFPctx;
            disp('Ctx already loaded')
            
        catch
            eval('tempload=load([res,''/LFPData/InfoLFP.mat''],''InfoLFP'');')
            chCTX=tempload.InfoLFP.channel(find(strcmp(tempload.InfoLFP.structure,structureName{nn})));
            savechCTX{nn}=chCTX;
            % loading LFPs
            
            for ctx=1:length(chCTX)
                clear temploadLFP
                disp(['   Loading LFP',num2str(chCTX(ctx)),'.mat (',structureName{nn},' channel ',num2str(ctx),')...'])
                eval(['temploadLFP=load([res,''/LFPData/LFP',num2str(chCTX(ctx)),'.mat''],''LFP'');'])
                LFPctx{ctx}=temploadLFP.LFP;
                dt=median(diff(Range(LFPctx{ctx},'s')));
            end
        end
        if                norip==0

        % Ripples
        try M1pr=PlotRipRaw(LFPctx{1},Range(Rtimes)/1e4,500);close; catch, M1pr=[]; end
        try M2pr=PlotRipRaw(LFPctx{2},Range(Rtimes)/1e4,500);close; catch, M2pr=[]; end
        try M3pr=PlotRipRaw(LFPctx{3},Range(Rtimes)/1e4,500);close; catch, M3pr=[]; end
        MCtxOnRip{nn}={M1pr M2pr M3pr};
        else
                    MCtxOnRip{nn}={[] [] []};
        end
        
        % Spindles
        for id=1:length(infoDepth)
            clear tempload SpiH SpiL
            disp(['   Loading Spindles',structureName{nn},infoDepth{id},'.mat'])
            try
                eval(['tempload=load([res,''/Spindles',structureName{nn},infoDepth{id},'.mat''],''SpiLow'',''SpiHigh'');'])
                SpiH=tempload.SpiHigh;
                SpiL=tempload.SpiLow;
            catch
                disp(' -> problem')
            end
            
            Stimes{nn,id,1}=Restrict(tsd(SpiH(:,2)*1e4,SpiH(:,4)),EpofInt{mm});
            Stimes{nn,id,2}=Restrict(tsd(SpiL(:,2)*1e4,SpiL(:,4)),EpofInt{mm});
            Stimes2={Restrict(tsd(SpiH(:,2)*1e4,SpiH(:,1)),EpofInt{mm}),Restrict(tsd(SpiL(:,2)*1e4,SpiL(:,1)),EpofInt{mm})};
            Stimes3={Restrict(tsd(SpiH(:,2)*1e4,SpiH(:,3)),EpofInt{mm}),Restrict(tsd(SpiL(:,2)*1e4,SpiL(:,3)),EpofInt{mm})};
            
            % Construct matrices
            % high Spindles
            try M1s=PlotRipRaw(LFPctx{1},Range(Stimes{nn,id,1})/1e4,500);close; catch, M1s=[]; end
            try M2s=PlotRipRaw(LFPctx{2},Range(Stimes{nn,id,1})/1e4,500);close; catch, M2s=[]; end
            try M3s=PlotRipRaw(LFPctx{3},Range(Stimes{nn,id,1})/1e4,500);close; catch, M3s=[]; end
            % low Spindles
            try M1l=PlotRipRaw(LFPctx{1},Range(Stimes{nn,id,2})/1e4,500);close; catch, M1l=[]; end
            try M2l=PlotRipRaw(LFPctx{2},Range(Stimes{nn,id,2})/1e4,500);close; catch, M2l=[]; end
            try M3l=PlotRipRaw(LFPctx{3},Range(Stimes{nn,id,2})/1e4,500);close; catch, M3l=[]; end
            
            MSpindles{nn,id}={M1s M2s M3s ; M1l M2l M3l};
            Spiinfo{nn,1}(id,mm)=size(Range(Stimes{nn,id,1}),1)/(dt*size(Data(Restrict(LFPctx{1},EpofInt{mm})),1));
            Spiinfo{nn,2}(id,mm)=nanmean(Data(Stimes{nn,id,1}));
            Spiinfo{nn,3}(id,mm)=nanmean(Data(Stimes3{1})-Data(Stimes2{1}));
            Spiinfo{nn,4}(id,mm)=nanstd(Data(Stimes{nn,id,1}));
            Spiinfo{nn,5}(id,mm)=nanstd(Data(Stimes3{1})-Data(Stimes2{1}));
            
            Spiinfo{nn,6}(id,mm)=size(Range(Stimes{nn,id,2}),1)/(dt*size(Data(Restrict(LFPctx{1},EpofInt{mm})),1));
            Spiinfo{nn,7}(id,mm)=nanmean(Data(Stimes{nn,id,2}));
            Spiinfo{nn,8}(id,mm)=nanmean(Data(Stimes3{2})-Data(Stimes2{2}));
            Spiinfo{nn,9}(id,mm)=nanstd(Data(Stimes{nn,id,2}));
            Spiinfo{nn,10}(id,mm)=nanstd(Data(Stimes3{2})-Data(Stimes2{2}));
            
        end
        
        %Delta
        clear tempload SpiH SpiL
        disp(['   Loading DeltaWaves',structureName{nn},'.mat'])
        try
            eval(['tempload=load([res,''/Delta',structureName{nn},'.mat''],''tDeltaT2'');'])
            Del=tempload.tDeltaT2;
        catch
            disp(' -> problem')
        end
        Del=Restrict(Del,EpofInt{mm});
        % Construct matrices
        try Md1=PlotRipRaw(LFPctx{1},Range(Del)/1e4,500);close; catch, Md1=[]; end
        try Md2=PlotRipRaw(LFPctx{2},Range(Del)/1e4,500);close; catch, Md2=[]; end
        try Md3=PlotRipRaw(LFPctx{3},Range(Del)/1e4,500);close; catch, Md3=[]; end
        MDel{nn}={Md1 Md2 Md3};
        Dtimes{nn}=Range(Del)/1e4;
        Delinfo(nn,mm)=size(Range(Del),1)/(dt*size(Data(Restrict(LFPctx{1},EpofInt{mm})),1));
        
    end
    
    
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %% %%%%%%%%%%%%%%%%%%%%%%%%%%% Look at the events %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    
    Ev=figure('color',[1 1 1],'Position',[1 1 scrsz(3)/2 scrsz(4)]);
    leg=[];
    linew=[1 1 1];
    if norip==0
         linew(numChRip)=2;
    ChRipLeg={'','',''}; ChRipLeg{numChRip}=' (detection)';
    % Hippocampal LFPs on Ripples events
    subplot(4,4,1), hold on,
    try plot(M1hr(:,1),M1hr(:,2),'k','LineWidth',linew(1)); end
    try plot(M1hr(:,1),M2hr(:,2),'b','LineWidth',linew(2)); end
    try plot(M1hr(:,1),M3hr(:,2),'r','LineWidth',linew(3)); end
    title('Hippocampal LFPs on Ripples events')
    line([0 0],ylim,'Color',[0.5 0.5 0.5])
    xlabel('Time (s)')
    
    % re Hippocampal LFPs on Ripples events
    subplot(4,4,13), hold on,
    try plot(M1hr(:,1),M1hr(:,2),'k','LineWidth',linew(1)); leg=[leg,{['Ch ',num2str(chHPC(1)),ChRipLeg{1}]}];end
    try plot(M1hr(:,1),M2hr(:,2),'b','LineWidth',linew(2)); leg=[leg,{['Ch ',num2str(chHPC(2)),ChRipLeg{2}]}];end
    try plot(M1hr(:,1),M3hr(:,2),'r','LineWidth',linew(3)); leg=[leg,{['Ch ',num2str(chHPC(3)),ChRipLeg{3}]}];end
    title('Hippocampal LFPs on Ripples events')
    line([0 0],ylim,'Color',[0.5 0.5 0.5])
    xlabel('Time (s)')
    legend(leg)
    
    % Cortical LFPs on Ripples event
    subplot(4,4,5), hold on,
    leg=[];
    tempM=MCtxOnRip{1};
    M1pr=tempM{1};
    M2pr=tempM{2};
    M3pr=tempM{3};
    try plot(M1pr(:,1),M1pr(:,2),'k');leg=[leg,{['Ch ',num2str(savechCTX{1}(1))]}];end
    try plot(M1pr(:,1),M2pr(:,2),'b');leg=[leg,{['Ch ',num2str(savechCTX{1}(2))]}];end
    try plot(M1pr(:,1),M3pr(:,2),'r');leg=[leg,{['Ch ',num2str(savechCTX{1}(3))]}];end
    title([structureName{1},' LFPs on Ripples events'])
    line([0 0],ylim,'Color',[0.5 0.5 0.5])
    xlabel('Time (s)')
    legend(leg)
    
    % Cortical LFPs on Ripples event
    subplot(4,4,9), hold on,
    leg=[];
    tempM=MCtxOnRip{2};
    M1pr=tempM{1};
    M2pr=tempM{2};
    M3pr=tempM{3};
    try plot(M1pr(:,1),M1pr(:,2),'k');leg=[leg,{['Ch ',num2str(savechCTX{2}(1))]}];end
    try plot(M1pr(:,1),M2pr(:,2),'b');leg=[leg,{['Ch ',num2str(savechCTX{2}(2))]}];end
    try plot(M1pr(:,1),M3pr(:,2),'r');leg=[leg,{['Ch ',num2str(savechCTX{2}(3))]}];end
    title([structureName{2},' LFPs on Ripples events'])
    line([0 0],ylim,'Color',[0.5 0.5 0.5])
    xlabel('Time (s)')
    legend(leg)
    end
    
    for nn=1:length(structureName)
        for id=1:length(infoDepth)
            
            clear tempM M1s M2s M3s M1l M2l M3l
            tempM=MSpindles{nn,id,1};
            M1s=tempM{1,1};
            M2s=tempM{1,2};
            M3s=tempM{1,3};
            M1l=tempM{2,1};
            M2l=tempM{2,2};
            M3l=tempM{2,3};
            
            % Cortical LFPs on High Spindles events
            subplot(4,4,8*(nn-1)+1+id), hold on,
            leg=[];
            try plot(M1s(:,1),M1s(:,2),'k'); leg=[leg,{['Ch ',num2str(savechCTX{nn}(1))]}];end
            try plot(M1s(:,1),M2s(:,2),'b'); leg=[leg,{['Ch ',num2str(savechCTX{nn}(2))]}];end
            try plot(M1s(:,1),M3s(:,2),'r'); leg=[leg,{['Ch ',num2str(savechCTX{nn}(3))]}];end
            title(['Cortical LFPs on High ',structureName{nn},infoDepth{id},'Spindles events'])
            line([0 0],ylim,'Color',[0.5 0.5 0.5])
            xlabel('Time (s)')
            legend(leg)
            
            % Cortical LFPs on Low 'Spindles events
            subplot(4,4,8*(nn-1)+5+id), hold on,
            leg=[];
            try plot(M1l(:,1),M1l(:,2),'k'); leg=[leg,{['Ch ',num2str(savechCTX{nn}(1))]}];end
            try plot(M1l(:,1),M2l(:,2),'b'); leg=[leg,{['Ch ',num2str(savechCTX{nn}(2))]}];end
            try plot(M1l(:,1),M3l(:,2),'r'); leg=[leg,{['Ch ',num2str(savechCTX{nn}(3))]}];end
            title(['Cortical LFPs on Low ',structureName{nn},infoDepth{id},'Spindles events'])
            line([0 0],ylim,'Color',[0.5 0.5 0.5])
            xlabel('Time (s)')
            legend(leg)
            
            
        end
        % Cortical LFPs on DeltaWaves
        subplot(4,4,4*(nn)), hold on,
        leg=[];
        clear Md1 Md2 Md3 tempD
        tempD=MDel{nn};
        Md1=tempD{1};
        Md2=tempD{2};
        Md3=tempD{3};
        
        try plot(Md1(:,1),Md1(:,2),'k'); leg=[leg,{['Ch ',num2str(savechCTX{nn}(1))]}];end
        try plot(Md1(:,1),Md2(:,2),'b'); leg=[leg,{['Ch ',num2str(savechCTX{nn}(2))]}];end
        try plot(Md1(:,1),Md3(:,2),'r'); leg=[leg,{['Ch ',num2str(savechCTX{nn}(3))]}];end
        title(['Cortical LFPs on ',structureName{nn},'Delta events'])
        line([0 0],ylim,'Color',[0.5 0.5 0.5])
        xlabel('Time (s)')
        legend(leg)
    end
    try subplot(4,4,15), text(-1, -2000, pwd);end
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %% %%%%%%%%%%%%%%%%%%%%%%%%%%% Cross Correlograms %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    try
    Cor=figure('color',[1 1 1],'Position',[1 1 scrsz(3)/2 scrsz(4)]);
    minmaxDel=[+Inf,-Inf];
    minmaxRip=[+Inf,-Inf];
    minmaxDR=[+Inf,-Inf];
    minmaxRPow=[+Inf,-Inf];
    for nn=1:length(structureName)
        for id=1:length(infoDepth)
            clear Sptemp
            Sptemp{1}=Stimes{nn,id,1};
            Sptemp{2}=Stimes{nn,id,2};
            
            % Delta to Spindles
            subplot(3,10,(nn-1)*4+id)
            [C, B] = CrossCorr(Range(Sptemp{1}), Dtimes{nn}*1e4, 1500, 40);
            plot(B/1E3,C,'b')
            xlim([-30 30])
            a=ylim;
            minmaxDel=[min(a(1),minmaxDel(1)),max(a(2),minmaxDel(2))];
            
            subplot(3,10,(nn-1)*4+id+2)
            [C, B] = CrossCorr(Range(Sptemp{2}), Dtimes{nn}*1e4, 1500, 40);
            plot(B/1E3,C,'b')
            xlim([-30 30])
            a=ylim;
            minmaxDel=[min(a(1),minmaxDel(1)),max(a(2),minmaxDel(2))];
            
            if norip==0
            %Ripples to Spindles
            subplot(3,10,(nn-1)*4+id+10)
            [C, B] = CrossCorr(Range(Sptemp{1}), Range(Rtimes), 1500, 40);
            plot(B/1E3,C,'b')
            xlim([-30 30])
            a=ylim;
            minmaxRip=[min(a(1),minmaxRip(1)),max(a(2),minmaxRip(2))];
            
            subplot(3,10,(nn-1)*4+id+2+10)
            [C, B] = CrossCorr(Range(Sptemp{2}), Range(Rtimes), 1500, 40);
            plot(B/1E3,C,'b')
            xlim([-30 30])
            a=ylim;
            minmaxRip=[min(a(1),minmaxRip(1)),max(a(2),minmaxRip(2))];
            
            %Ripple Power
            subplot(3,10,(nn-1)*4+id+20)
            MRSp=PlotRipRaw(HRip,Range(Sptemp{1})/1e4,400);close;
            plot(MRSp(:,1),MRSp(:,2),'k')
            hold on
            a=[min(MRSp(:,2)),max(MRSp(:,2))];
            tempM=MSpindles{nn,id};
            M1s=tempM{1,1};
            plot(M1s(:,1),(M1s(:,2)*(a(2)-a(1))/(max(M1s(:,2))-min(M1s(:,2))))+a(1)-(a(2)-a(1)),'b');
            xlim([-0.4 0.4])
            a=ylim;
            minmaxRPow=[min(a(1),minmaxRPow(1)),max(a(2),minmaxRPow(2))];
            
            subplot(3,10,(nn-1)*4+id+2+20)
            MRSp=PlotRipRaw(HRip,Range(Sptemp{2})/1e4,400);close;
            plot(MRSp(:,1),MRSp(:,2),'k')
            hold on
            a=[min(MRSp(:,2)),max(MRSp(:,2))];
            tempM=MSpindles{nn,id};
            M1s=tempM{2,1};
            plot(M1s(:,1),(M1s(:,2)*(a(2)-a(1))/(max(M1s(:,2))-min(M1s(:,2))))+a(1)-(a(2)-a(1)),'b');
            xlim([-0.4 0.4])
            a=ylim;
            minmaxRPow=[min(a(1),minmaxRPow(1)),max(a(2),minmaxRPow(2))];
            end
        end
        if norip==0
        %Ripples to Delta
        subplot(3,10,nn*10)
        [C, B] = CrossCorr(Dtimes{nn}*1e4, Range(Rtimes), 1500, 40);
        plot(B/1E3,C,'b')
        xlim([-30 30])
        a=ylim;
        minmaxDR=[min(a(1),minmaxDR(1)),max(a(2),minmaxDR(2))];
        end
        
    end
    
    for nn=1:length(structureName)
        for id=1:length(infoDepth)
            clear Sptemp
            Sptemp=Stimes{nn,id};
            
            % Delta to Spindles
            subplot(3,10,(nn-1)*4+id)
            ylim(minmaxDel)
            hold on
            line([0 0],[minmaxDel(1) minmaxDel(2)],'LineStyle','--','color','k','linewidth',2)
            title(['Del rel HiSpindles',structureName{nn},infoDepth{id}])
            
            subplot(3,10,(nn-1)*4+id+2)
            ylim(minmaxDel)
            hold on
            line([0 0],[minmaxDel(1) minmaxDel(2)],'LineStyle','--','color','k','linewidth',2)
            title(['Del rel LoSpindles',structureName{nn},infoDepth{id}])
            if norip==0
            %Ripples to Spindles
            subplot(3,10,(nn-1)*4+id+10)
            ylim(minmaxRip)
            hold on
            line([0 0],[minmaxRip(1) minmaxRip(2)],'LineStyle','--','color','k','linewidth',2)
            title(['Rip rel HiSpindles',structureName{nn},infoDepth{id}])
            
            subplot(3,10,(nn-1)*4+id+2+10)
            ylim(minmaxRip)
            hold on
            line([0 0],[minmaxRip(1) minmaxRip(2)],'LineStyle','--','color','k','linewidth',2)
            title(['Rip rel LoSpindles',structureName{nn},infoDepth{id}])
            
            %Ripple Power
            subplot(3,10,(nn-1)*4+id+20)
            ylim(minmaxRPow)
            hold on
            line([0 0],[minmaxRPow(1) minmaxRPow(2)],'LineStyle','--','color',[0.7 0.7 0.7],'linewidth',2)
            title(['RipPow rel HiSpindles',structureName{nn},infoDepth{id}])
            
            subplot(3,10,(nn-1)*4+id+2+20)
            ylim(minmaxRPow)
            hold on
            line([0 0],[minmaxRPow(1) minmaxRPow(2)],'LineStyle','--','color',[0.7 0.7 0.7],'linewidth',2)
            title(['RipPow rel LoSpindles',structureName{nn},infoDepth{id}])
            end
            
        end
        if norip==0
        subplot(3,10,nn*10)
        ylim(minmaxDR)
        hold on
        line([0 0],[minmaxDR(1) minmaxDR(2)],'LineStyle','--','color',[0.7 0.7 0.7],'linewidth',2)
        title(['Rip rel Del',structureName{nn},infoDepth{id}])
        end
    end
    saveFigure(Ev,['Events_',num2str(fignum)],filetosave)
    saveFigure(Cor,['CrossCorr_',num2str(fignum)],filetosave)
        close all

    fignum=fignum+1;
    catch
    disp('couldn''t sdisplay correlograms')    
    end
end

if Epnum>1
    compstats=figure('color',[1 1 1],'Position',[1 1 scrsz(3)/2 scrsz(4)]);
    for nn=1:length(structureName)
        for id=1:length(infoDepth)
            %number
            subplot(3,10,(nn-1)*4+id)
            bar([1:Epnum],Spiinfo{nn,1}(id,:))
            title(['HiSpindles',structureName{nn},infoDepth{id}])
            xlim([0.5 Epnum+0.5])
            %size
            subplot(3,10,(nn-1)*4+id+10)
            bar([1:Epnum],Spiinfo{nn,2}(id,:))
            hold on
            errorbar([1:Epnum],Spiinfo{nn,2}(id,:),Spiinfo{nn,4}(id,:))
            xlim([0.5 Epnum+0.5])
            %duration
            subplot(3,10,(nn-1)*4+id+20)
            bar([1:Epnum],Spiinfo{nn,3}(id,:))
            hold on
            errorbar([1:Epnum],Spiinfo{nn,3}(id,:),Spiinfo{nn,5}(id,:))
            xlim([0.5 Epnum+0.5])
            
            %number
            subplot(3,10,(nn-1)*4+id+2)
            bar([1:Epnum],Spiinfo{nn,6}(id,:))
            title(['LoSpindles',structureName{nn},infoDepth{id}])
            xlim([0.5 Epnum+0.5])
            %size
            subplot(3,10,(nn-1)*4+id+12)
            bar([1:Epnum],Spiinfo{nn,7}(id,:))
            hold on
            errorbar([1:Epnum],Spiinfo{nn,7}(id,:),Spiinfo{nn,9}(id,:))
            xlim([0.5 Epnum+0.5])
            %duration
            subplot(3,10,(nn-1)*4+id+22)
            bar([1:Epnum],Spiinfo{nn,8}(id,:))
            hold on
            errorbar([1:Epnum],Spiinfo{nn,8}(id,:),Spiinfo{nn,10}(id,:))
            xlim([0.5 Epnum+0.5])
            
        end
    end
    
    if norip==0
    %number
    subplot(3,10,9)
    bar([1:Epnum],Ripinfo(1,:))
    title('Ripples')
    xlim([0.5 Epnum+0.5])
    %size
    subplot(3,10,19)
    bar([1:Epnum],Ripinfo(2,:))
    hold on
    errorbar([1:Epnum],Ripinfo(2,:),Ripinfo(4,:))
    xlim([0.5 Epnum+0.5])
    %duration
    subplot(3,10,29)
    bar([1:Epnum],Ripinfo(3,:))
    hold on
    errorbar([1:Epnum],Ripinfo(3,:),Ripinfo(5,:))
    xlim([0.5 Epnum+0.5])
    Ripinfo=[];
    end
    
    %number
    subplot(3,10,10)
    bar([1:Epnum],Delinfo(1,:))
    title(['No Del',structureName{1}])
    xlim([0.5 Epnum+0.5])
    %number
    subplot(3,10,20)
    bar([1:Epnum],Delinfo(2,:))
    title(['No Del',structureName{2}])
    xlim([0.5 Epnum+0.5])
    
    subplot(3,10,1)
    ylabel('Numbers')
    subplot(3,10,11)
    ylabel('Amplitude')
    subplot(3,10,21)
    ylabel('Duration')
    
    saveFigure(compstats,['StatsByEpoch',num2str(fignum)],filetosave)
    close all
    save([filetosave,'OscillInfo.mat'],'Spiinfo','Ripinfo','Delinfo','EpofInt')
end


