%% File and Data info

% Delta Wave analysis
% channels{1,1}={'B','H','PF','Pi','Am','Pa'};
% channels{1,2}={11,2,8,12,14,4};
%
% files{1}='/media/DataMobs15/OB_behaviour/ProjetLPS/Mouse124/LPSD1/LPSD1-Mouse-124-31032014/';
% files{2}='/media/DataMobs15/OB_behaviour/ProjetLPS/Mouse124/LPSD2/LPSD2-Mouse-124-01042014/';
% files{3}='/media/DataMobs15/OB_behaviour/ProjetLPS/Mouse124/LPSD3/LPSD3-Mouse-124-02042014/';
%

channels{1,1}={'B','H','PF','Pi','Am','Pa'};
channels{1,2}={15,6,4,0,3,9};

files{1}='/media/DataMobs15/OB_behaviour/ProjetLPS/Mouse123/LPS_D1/LPSD1-Mouse-123-31032014/';
files{2}='/media/DataMobs15/OB_behaviour/ProjetLPS/Mouse123/LPS_D2/LPSD2-Mouse-123-01042014/';
files{3}='/media/DataMobs15/OB_behaviour/ProjetLPS/Mouse123/LPS_D3/LPSD3-Mouse-123-02042014/';

%% Compute Cohero-grams

% params.tapers=[3,5];
params.fpass=[0 25];
params.err=[2,0.05];
params.pad=0;
params.tapers=[3,5];
movingwin=[3,0.5];
ass=[1,2;1,3;1,4;1,5;1,6;2,3;2,4;2,5;2,6;3,4;3,5;3,6;4,5;4,6];

for file=1:3
    cd(files{file});
    load('LFPData/LFP0.mat');
    params.Fs=1/median(diff(Range(LFP,'s')));
    
    load('StateEpochSB.mat')
    
    for z=1:length(ass)
        load(strcat('LFPData/LFP',num2str(channels{1,2}{ass(z,1)})));
        LFP1=LFP;
        load(strcat('LFPData/LFP',num2str(channels{1,2}{ass(z,2)})));
        LFP2=LFP;
        [Ctemp,phi,S12,S1temp,S2temp,t,f,confC,phitemp,Cerr]=cohgramc(Data(Restrict(LFP1,Epoch)),Data(Restrict(LFP2,Epoch)),movingwin,params);
        save(strcat('Coh_',num2str(channels{1,2}{ass(z,1)}),'_',num2str(channels{1,2}{ass(z,2)}),'.mat'),'Ctemp','phi','S12','S1temp','S2temp','t','f','confC','phitemp','Cerr')
    end
end


%% Look at small periods of time in relation to sleep stage throughout the day
freqrg=[1 4; 2 4;3 5;4 6;6 8;6 10;1 5];

Epdur=10*1e4; %10sec
for file=1:3
    cd(files{file});
    load('StateEpochSB.mat')
    Sl_W=[];
    Sl_R=[];
    
    %Epoching
    stpSWS=Stop(SWSEpoch);
    stSWS=Start(bef_cell{2,1});
    SWSEpoch=And(SWSEpoch,Epoch);SWSEpoch=CleanUpEpoch(SWSEpoch);
    REMEpoch=And(REMEpoch,Epoch);REMEpoch=CleanUpEpoch(REMEpoch);
    Wake=And(Wake,Epoch);Wake=CleanUpEpoch(Wake);
    St=Start(REMEpoch);
    RSt=[RSt,[1:length(RSt)]'];
    WSt=Start(Wake);
    WSt=[WSt,[1:length(WSt)]'];
    RStp=Stop(REMEpoch);
    RStp=[RStp,[1:length(RStp)]'];
    WStp=Stop(Wake);
    WStp=[WStp,[1:length(WStp)]'];
    SSt=Start(SW_R);
    SSt=[SSt,[1:length(SSt)]'];
    SStp=Stop(SW_R);
    SStp=[SStp,[1:length(SStp)]'];
    % REM
    [aft_cell_R,bef_cell_R]=transEpoch(SWSEpoch,REMEpoch);
    SW_R=bef_cell_R{1,2}; %SWS after REM
    R_SW=aft_cell_R{2,1}; %REM before SWS
    %Wake
    [aft_cell_W,bef_cell_W]=transEpoch(SWSEpoch,Wake);
    SW_W=bef_cell_W{1,2}; %SWS after REM
    W_SW=aft_cell_W{2,1}; %REM before SWS
    St=length(Start(SW_R));
    
    for w=1:length(freqrg)
        for t=1:6
            load(strcat('LFPData/LFP',num2str(channels{1,2}{t}),'.mat'))
            FilDel=FilterLFP(LFP,freqrg(w,:),1024);
            HilDel=hilbert(Data(FilDel));
            HilDel=abs(HilDel);
            Del{t,w}=Restrict(tsd(Range(LFP),runmean(HilDel,2000)),Epoch);
        end
    end
    
    num=1;
    for g=1:St
        litEp=subset(SW_R,g);
        litREP=subset(R_SW,g);
        litST=Start(litEp);
        litSTP=Stop(litEp);
        subST=litST;
        subSTP=Epdur+litST;
        for w=1:length(freqrg)
            for t=1:6
                localDel(t,w)=mean(Data(Restrict(Del{t},litEp)));
            end
        end
        
        while subSTP<litSTP
            subEp=intervalSet(subST,subSTP);
            for w=1:length(freqrg)
                for t=1:6
                    Sl_R(num,t+(w-1)*6)=mean(Data(Restrict(Del{t,w},subEp)));
                end
            end
            gotto=6*length(freqrg);
            
            RStin=RSt(RSt(:,1)>=subST,:);
            RStpin=RStp(RStp(:,1)<=subST,:);
            WStin=WSt(WSt(:,1)>=subST,:);
            WStpin=WStp(WStp(:,1)<=subST,:);
            % last Wake end and duration
            [C,I]=min(subST-WStpin(:,1));
            if size(C,1)==0
                Sl_R(num,gotto+1)=NaN;
                Sl_R(num,gotto+2)=NaN;
            else
                Sl_R(num,gotto+1)=C;
                [Sl_R(num,gotto+2),~,~]=EpochInfo(subset(Wake,WStpin(I,2)));
            end
            % next Wake beginning and duraton
            [C,I]=min(WStin(:,1)-subST);
            if size(C,1)==0
                Sl_R(num,gotto+3)=NaN;
                Sl_R(num,gotto+4)=NaN;
            else
                Sl_R(num,gotto+3)=C;
                [Sl_R(num,gotto+4),~,~]=EpochInfo(subset(Wake,WStin(I,2)));
            end
            % last REM end and duration
            [C,I]=min(subST-RStpin(:,1));
            if size(C,1)==0
                Sl_R(num,gotto+5)=NaN;
                Sl_R(num,gotto+6)=NaN;
            else
                Sl_R(num,gotto+5)=C;
                [Sl_R(num,gotto+6),~,~]=EpochInfo(subset(REMEpoch,RStpin(I,2)));
            end
            % next REM beginning and duraton
            [C,I]=min(RStin(:,1)-subST);
            if size(C,1)==0
                Sl_R(num,gotto+7)=NaN;
                Sl_R(num,gotto+8)=NaN;
            else  Sl_R(num,gotto+7)=C;
                [Sl_R(num,gotto+8),~,~]=EpochInfo(subset(REMEpoch,RStin(I,2)));
            end
            % duration of current SWSEpoch
            [Sl_R(num,gotto+9),~,~]=EpochInfo(subset(SW_R,g));
            % time since beginning of day
            Sl_R(num,gotto+10)=subST;
            for w=1:length(freqrg)
                for t=1:6
                    Sl_R(num,gotto+10+t+(w-1)*6)=localDel(t,w);
                end
            end
            subSTP=subSTP+Epdur;
            subST=subST+Epdur;
            num=num+1;
        end
    end
    
    SSt=Start(SW_W);
    SSt=[SSt,[1:length(SSt)]'];
    SStp=Stop(SW_W);
    SStp=[SStp,[1:length(SStp)]'];
    
    St=length(Start(SW_W));
    num=1;
    for g=1:St
        litEp=subset(SW_W,g);
        litREP=subset(W_SW,g);
        litST=Start(litEp);
        litSTP=Stop(litEp);
        subST=litST;
        subSTP=Epdur+litST;
        for w=1:length(freqrg)
            for t=1:6
                localDel(t,w)=mean(Data(Restrict(Del{t},litEp)));
            end
        end
        
        while subSTP<litSTP
            subEp=intervalSet(subST,subSTP);
            for w=1:length(freqrg)
                for t=1:6
                    Sl_W(num,t+(w-1)*6)=mean(Data(Restrict(Del{t,w},subEp)));
                end
            end
            gotto=6*length(freqrg);
            
            RStin=RSt(RSt(:,1)>=subST,:);
            RStpin=RStp(RStp(:,1)<=subST,:);
            WStin=WSt(WSt(:,1)>=subST,:);
            WStpin=WStp(WStp(:,1)<=subST,:);
            % last Wake end and duration
            [C,I]=min(subST-WStpin(:,1));
            if size(C,1)==0
                Sl_W(num,gotto+1)=NaN;
                Sl_W(num,gotto+2)=NaN;
            else
                Sl_W(num,gotto+1)=C;
                [Sl_W(num,gotto+2),~,~]=EpochInfo(subset(Wake,WStpin(I,2)));
            end
            % next Wake beginning and duraton
            [C,I]=min(WStin(:,1)-subST);
            if size(C,1)==0
                Sl_W(num,gotto+3)=NaN;
                Sl_W(num,gotto+4)=NaN;
            else
                Sl_W(num,gotto+3)=C;
                [Sl_W(num,gotto+4),~,~]=EpochInfo(subset(Wake,WStin(I,2)));
            end
            % last REM end and duration
            [C,I]=min(subST-RStpin(:,1));
            if size(C,1)==0
                Sl_W(num,gotto+5)=NaN;
                Sl_W(num,gotto+6)=NaN;
            else
                Sl_W(num,gotto+5)=C;
                [Sl_W(num,gotto+6),~,~]=EpochInfo(subset(REMEpoch,RStpin(I,2)));
            end
            % next REM beginning and duraton
            [C,I]=min(RStin(:,1)-subST);
            if size(C,1)==0
                Sl_W(num,gotto+7)=NaN;
                Sl_W(num,gotto+8)=NaN;
            else  Sl_W(num,gotto+7)=C;
                [Sl_W(num,gotto+8),~,~]=EpochInfo(subset(REMEpoch,RStin(I,2)));
            end
            % duration of current SWSEpoch
            [Sl_W(num,gotto+9),~,~]=EpochInfo(subset(SW_W,g));
            % time since beginning of day
            Sl_W(num,gotto+10)=subST;
            for w=1:length(freqrg)
                for t=1:6
                    Sl_W(num,gotto+10+t+(w-1)*6)=localDel(t,w);
                end
            end
            subSTP=subSTP+Epdur;
            subST=subST+Epdur;
            num=num+1;
        end
    end
    
    
    saveas('DeltaInfo.mat','Sl_W','Sl_R','Del')
    
end



%% Plot figures


% Evolution of Hilbert in different bands (10 subEp) (all strct)
% Evolution of Spectrogram Power in different bands (10 subEp) (all strct)
% Spectra superposed REM/SWS/Wake (all strct)
% Spectra throughout day (all strct, sleep types separate)
cc= copper(3);
cc2=summer(length(div));
div=10;
for file=1:3
    clear valS valW valR
    cd(files{file});
    load('StateEpochSB.mat')
    
    %Epoching
    stpSWS=Stop(SWSEpoch);
    stSWS=Start(SWSEpoch);
    SWSEpoch=And(SWSEpoch,Epoch);SWSEpoch=CleanUpEpoch(SWSEpoch);
    REMEpoch=And(REMEpoch,Epoch);REMEpoch=CleanUpEpoch(REMEpoch);
    Wake=And(Wake,Epoch);Wake=CleanUpEpoch(Wake);
    load('15_Spectrum.mat')
    f=Spectro{3};
    Sptsd=tsd(Spectro{2}*1e4,log(smooth2a(Spectro{1}',1,11))');dat=Data(Sptsd);
    DelPow=tsd(Range(Sptsd),mean(dat(:,find(f>1,1,'first'):find(f<4,1,'last'))')');
    threS1=mean(Data(Restrict(DelPow,SWSEpoch)))+std(Data(Restrict(DelPow,SWSEpoch)));
    threS2=mean(Data(Restrict(DelPow,SWSEpoch)))+2*std(Data(Restrict(DelPow,SWSEpoch)));
    threR1=mean(Data(Restrict(DelPow,REMEpoch)))+std(Data(Restrict(DelPow,REMEpoch)));
    threR2=mean(Data(Restrict(DelPow,REMEpoch)))+2*std(Data(Restrict(DelPow,REMEpoch)));
    threW1=mean(Data(Restrict(DelPow,Wake)))+std(Data(Restrict(DelPow,Wake)));
    threW2=mean(Data(Restrict(DelPow,Wake)))+2*std(Data(Restrict(DelPow,Wake)));
    EpS1=And(SWSEpoch,thresholdIntervals(DelPow,threS1));
    EpS2=And(SWSEpoch,thresholdIntervals(DelPow,threS2));
    EpR1=And(REMEpoch,thresholdIntervals(DelPow,threR1));
    EpR2=And(REMEpoch,thresholdIntervals(DelPow,threR2));
    EpW1=And(Wake,thresholdIntervals(DelPow,threW1));
    EpW2=And(Wake,thresholdIntervals(DelPow,threW2));
    lsS=(stpSWS(end)-stSWS(1))/div;
    stpREM=Stop(REMEpoch);
    stREM=Start(REMEpoch);
    lsR=(stpREM(end)-stREM(1))/div;
    stpW=Stop(Wake);
    stW=Start(Wake);
    lsW=(stpW(end)-stW(1))/div;
    
    figchoS=figure;
    figchoR=figure;
    figchoW=figure;
    for w=1:length(freqrg)
        beg(w)=find(f>freqrg(w,1),1,'first');
        endin(w)=find(f<freqrg(w,2),1,'last');
        evolfig(w)=figure;

    end
    
    for z=1:length(ass)
        
        load(strcat('Coh_',num2str(channels{1,2}{ass(z,1)}),'_',num2str(channels{1,2}{ass(z,2)}),'.mat'))
        Ctsd=tsd((t+movingwin(2)/2)*1E4,Ctemp);
        % Coherence depending on delta power +  Coherence superposed REM/SWS/Wake (strct by strct)
        h=figure
        subplot(141)
        plot(f,smooth(mean(Data(Restrict(Ctsd,Wake))),3),'color',cc(1,:),'linewidth',2)
        hold on
        plot(f,smooth(mean(Data(Restrict(Ctsd,EpW1))),3),'color',cc(2,:),'linewidth',2)
        plot(f,smooth(mean(Data(Restrict(Ctsd,EpW2))),3),'color',cc(3,:),'linewidth',2)
        ax(1)=gca;
        legend('Tot','High delta act','V High delta act')
        title('Wake')
        % ylim([0.35 0.8])
        subplot(142)
        plot(f,smooth(mean(Data(Restrict(Ctsd,SWSEpoch))),3),'color',cc(1,:),'linewidth',2)
        hold on
        plot(f,smooth(mean(Data(Restrict(Ctsd,EpS1))),3),'color',cc(2,:),'linewidth',2)
        plot(f,smooth(mean(Data(Restrict(Ctsd,EpS2))),3),'color',cc(3,:),'linewidth',2)
        ax(2)=gca;
        title('SWS')
        % ylim([0.35 0.8])
        subplot(143)
        plot(f,smooth(mean(Data(Restrict(Ctsd,REMEpoch))),3),'color',cc(1,:),'linewidth',2)
        hold on
        plot(f,smooth(mean(Data(Restrict(Ctsd,EpR1))),3),'color',cc(2,:),'linewidth',2)
        plot(f,smooth(mean(Data(Restrict(Ctsd,EpR2))),3),'color',cc(3,:),'linewidth',2)
        ax(3)=gca;
        title('REM')
        % ylim([0.35 0.8])
        subplot(144)
        plot(f,smooth(mean(Data(Restrict(Ctsd,REMEpoch))),3),'color',[0.8 0.2 0.1],'linewidth',2)
        hold on
        plot(f,smooth(mean(Data(Restrict(Ctsd,SWSEpoch))),3),'color',[0 0.8 1],'linewidth',2)
        plot(f,smooth(mean(Data(Restrict(Ctsd,Wake))),3),'color',[0.2 0.2 0.2],'linewidth',2)
        ax(4)=gca;
        legend('REM','SWS','Wake')
        % ylim([0.35 0.8])
        b=[get(ax(1),'Ylim');get(ax(2),'Ylim');get(ax(3),'Ylim');get(ax(4),'Ylim')];
        set(ax,'Ylim',[min(b(:,1)) max(b(:,2))])
        saveas(h,strcat('Cohercomp_',num2str(channels{1,2}{ass(z,1)}),'_',num2str(channels{1,2}{ass(z,2)}),'.png'))
        saveas(h,strcat('Cohercomp_',num2str(channels{1,2}{ass(z,1)}),'_',num2str(channels{1,2}{ass(z,2)}),'.fig'))
        close all
        
        % Coherence throughout day (all strct, sleep types separate)
        % Evolution of coherence in different bands (10 subEp) (all strct)

        figure(figchoS)
        subplot(3,5,z)
        for g=1:div
            subEp=And(intervalSet((g-1)*lsS,g*lsS),SWSEpoch);
            hold on
            plot(f,mean(Data(Restrict(Ctsd,subEp))),'Color',cc2(g,:),'linewidth',2)
            int=mean(Data(Restrict(Ctsd,subEp)));
            for w=1:length(freqrg)
                valS{w}(g,z)=sum(int(beg(w):endin(w)));
            end
        end
        
        figure(figchoW)
        subplot(3,5,z)
        for g=1:div
            subEp=And(intervalSet((g-1)*lsW,g*lsW),Wake);
            hold on
            plot(f,mean(Data(Restrict(Ctsd,subEp))),'Color',cc2(g,:),'linewidth',2)
            int=mean(Data(Restrict(Ctsd,subEp)));
            for w=1:length(freqrg)
                valW{w}(g,z)=sum(int(beg(w):endin(w)));
            end
        end
        
        figure(figchoW)
        subplot(3,5,z)
        for g=1:div
            subEp=And(intervalSet((g-1)*lsR,g*lsR),REMEpoch);
            hold on
            plot(f,mean(Data(Restrict(Ctsd,subEp))),'Color',cc2(g,:),'linewidth',2)
            int=mean(Data(Restrict(Ctsd,subEp)));
            for w=1:length(freqrg)
                valR{w}(g,z)=sum(int(beg(w):endin(w)));
            end
        end
        
        for w=1:length(freqrg)
        figure(evolfig(w))
        subplot(3,5,z)
        plot(valR{w}(:,z),'color',[0.8 0.2 0.1])
        hold on
        plot(valS{w}(:,z),'color',[0 0.8 1])
        plot(valW{w}(:,z),'color',[0.2 0.2 0.2])        
        end
        
    end
    
    
    save valR valS valW
    save figs
    
end




