function [M1hr,M2hr,M3hr,M1s,M2s,M3s,M1l,M2l,M3l,M1pr,M2pr,M3pr]=CountSpindlesRipplesSB(res,filetosave,EpofInt,plo)
% inputs:
% res (optional) = directory

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% %%%%%%%%%%%%%%%%%%%%%%%%%%% INITIATE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if ~exist('res','var')
    res=pwd;
end

eval('load([res,''/StateEpoch.mat''],''SWSEpoch'');')
if nargin==1
    EpofInt{1}=SWSEpoch;
end
infoDepth={'Sup','Deep'};
structureName={'PFCx','PaCx'};

scrsz = get(0,'ScreenSize');
disp(' ')
disp(res)
Epnum=length(EpofInt);
fignum=1;
norip=0;
dt=8e-4;


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% %%%%%%%%%%%%%%%%%%%% LOADING HIPPOCAMPAL LFPs %%%%%%%%%%%%%%%%%%%%%%%%%%

eval('tempload=load([res,''/LFPData/InfoLFP.mat''],''InfoLFP'');')
chHPC=tempload.InfoLFP.channel(find(strcmp(tempload.InfoLFP.structure,'dHPC')));

Rtimes=[];
if ~isempty(chHPC)
    
    try
        LFPhpc;
        disp('Hpc already loaded')
    catch
        try
            % loading LFPs
            for hpc=1:length(chHPC)
                clear temploadLFP
                disp(['   Loading LFP',num2str(chHPC(hpc)),'.mat (Hippocampus channel ',num2str(hpc),')...'])
                eval(['temploadLFP=load([res,''/LFPData/LFP',num2str(chHPC(hpc)),'.mat''],''LFP'');'])
                LFPhpc{hpc}=temploadLFP.LFP;
                % loading ripples generated by FindRipplesKarimSB.m
                disp('   Loading RipplesdHPC.mat')
                eval('tempload=load([res,''/RipplesdHPC.mat''],''dHPCrip'',''chHPC'',''EpochRip'');')
                Rip=tempload.dHPCrip;
                numChRip=find(chHPC==tempload.chHPC);
                RipEp=tempload.EpochRip;
                
            end
            dt=median(diff(Range(LFPhpc{hpc},'s')));
            Filsp=FilterLFP(LFPhpc{1},[120 200],256);
            HilRip=hilbert(Data(Filsp));
            HRip=tsd(Range(Filsp),abs(HilRip));
        catch
            norip=1
        end
    end
    
    for mm=1:Epnum
        
        if norip==0
            % Construct matrices
            Rtimes=Restrict(tsd(Rip(:,2)*1e4,Rip(:,4)),EpofInt{mm});
            Rtbeg=Restrict(tsd(Rip(:,2)*1e4,Rip(:,1)),EpofInt{mm});
            Rtend=Restrict(tsd(Rip(:,2)*1e4,Rip(:,3)),EpofInt{mm});
            
            
            Ripinfo(1,mm)=size(Range(Rtimes),1)/(dt*size(Data(Restrict(LFPhpc{hpc},and(EpofInt{mm},RipEp))),1));
            Ripinfo(2,mm)=nanmean(Data(Rtimes));
            Ripinfo(3,mm)=nanmean(Data(Rtend)-Data(Rtbeg));
            Ripinfo(4,mm)=nanstd(Data(Rtimes));
            Ripinfo(5,mm)=nanstd(Data(Rtend)-Data(Rtbeg));
        else
            Rtimes=tsd(0,0);
            Ripinfo(1:5,mm)=0;
        end
    end
    
else
    disp('   No HPC channel !!!')
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% %%%%%%%%%%%%%%%%%%%%%% LOADING CORTICAL LFPs %%%%%%%%%%%%%%%%%%%%%%%%%%%
PowerMod=cell(1,2);
MSpindles={};
MDel={};
MCtxOnRip={};
Stimes={};
Dtimes={};
% loading ripples generated by FindRipplesKarimSB.m
for nn=1:length(structureName)
    
    
    eval('tempload=load([res,''/LFPData/InfoLFP.mat''],''InfoLFP'');')
    chCTX=tempload.InfoLFP.channel(find(strcmp(tempload.InfoLFP.structure,structureName{nn})));
    savechCTX{nn}=chCTX;
    % loading LFPs
    
    ctx=1;
    clear temploadLFP
    disp(['   Loading LFP',num2str(chCTX(ctx)),'.mat (',structureName{nn},' channel ',num2str(ctx),')...'])
    eval(['temploadLFP=load([res,''/LFPData/LFP',num2str(chCTX(ctx)),'.mat''],''LFP'');'])
    LFPctx{nn}=temploadLFP.LFP;
    dt=median(diff(Range(LFPctx{nn},'s')));
    
end

for nn=1:length(structureName)
    
    % Spindles
    for id=1:length(infoDepth)
        clear tempload SpiH SpiL
        disp(['   Loading Spindles',structureName{nn},infoDepth{id},'.mat'])
        try
            eval(['tempload=load([res,''/Spindles',structureName{nn},infoDepth{id},'.mat''],''SpiLow'',''SpiHigh'',''HiEpoch'',''LowEpoch'');'])
            SpiH=tempload.SpiHigh;
            SpiL=tempload.SpiLow;
            try  HiEpoch=tempload.HiEpoch; catch HiEpoch=SWSEpoch;end
            try LowEpoch=tempload.LowEpoch; catch LowEpoch=SWSEpoch; end
        catch
            disp(' -> problem')
        end
        
        for mm=1:Epnum
            
            Stimes{nn,id,1}=Restrict(tsd(SpiH(:,2)*1e4,SpiH(:,4)),EpofInt{mm});
            Stimes{nn,id,2}=Restrict(tsd(SpiL(:,2)*1e4,SpiL(:,4)),EpofInt{mm});
            Stimes2={Restrict(tsd(SpiH(:,2)*1e4,SpiH(:,1)),EpofInt{mm}),Restrict(tsd(SpiL(:,2)*1e4,SpiL(:,1)),EpofInt{mm})};
            Stimes3={Restrict(tsd(SpiH(:,2)*1e4,SpiH(:,3)),EpofInt{mm}),Restrict(tsd(SpiL(:,2)*1e4,SpiL(:,3)),EpofInt{mm})};
            
            Spiinfo{nn,1}(id,mm)=size(Range(Stimes{nn,id,1}),1)/(dt*size(Data(Restrict(LFPctx{1},and(HiEpoch,EpofInt{mm}))),1));
            Spiinfo{nn,2}(id,mm)=nanmean(Data(Stimes{nn,id,1}));
            Spiinfo{nn,3}(id,mm)=nanmean(Data(Stimes3{1})-Data(Stimes2{1}));
            Spiinfo{nn,4}(id,mm)=nanstd(Data(Stimes{nn,id,1}));
            Spiinfo{nn,5}(id,mm)=nanstd(Data(Stimes3{1})-Data(Stimes2{1}));
            
            Spiinfo{nn,6}(id,mm)=size(Range(Stimes{nn,id,2}),1)/(dt*size(Data(Restrict(LFPctx{1},and(EpofInt{mm},LowEpoch))),1));
            Spiinfo{nn,7}(id,mm)=nanmean(Data(Stimes{nn,id,2}));
            Spiinfo{nn,8}(id,mm)=nanmean(Data(Stimes3{2})-Data(Stimes2{2}));
            Spiinfo{nn,9}(id,mm)=nanstd(Data(Stimes{nn,id,2}));
            Spiinfo{nn,10}(id,mm)=nanstd(Data(Stimes3{2})-Data(Stimes2{2}));
            
        end
    end
    
    %Delta
    clear tempload SpiH SpiL
    disp(['   Loading DeltaWaves',structureName{nn},'.mat'])
    try
        eval(['tempload=load([res,''/Delta',structureName{nn},'.mat''],''tDeltaT2'');'])
        Del2=tempload.tDeltaT2;
    catch
        disp(' -> problem')
    end
    
    for mm=1:Epnum
        
        Del=Restrict(Del2,EpofInt{mm});
        Dtimes{nn}=Range(Del)/1e4;
        Delinfo(nn,mm)=size(Range(Del),1)/(dt*size(Data(Restrict(LFPctx{1},EpofInt{mm})),1));
    end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Ã¹
%%%% Make beautiful figures %%%%%%%%%%%%%%%%%%%%%%%%%%

if plo==1
    
    if Epnum>1
        compstats=figure('color',[1 1 1],'Position',[1 1 scrsz(3)/2 scrsz(4)]);
        for nn=1:length(structureName)
            for id=1:length(infoDepth)
                %number
                subplot(3,10,(nn-1)*4+id)
                bar([1:Epnum],Spiinfo{nn,1}(id,:))
                title(['HiSpindles',structureName{nn},infoDepth{id}])
                xlim([0.5 Epnum+0.5])
                %size
                subplot(3,10,(nn-1)*4+id+10)
                bar([1:Epnum],Spiinfo{nn,2}(id,:))
                hold on
                errorbar([1:Epnum],Spiinfo{nn,2}(id,:),Spiinfo{nn,4}(id,:))
                xlim([0.5 Epnum+0.5])
                %duration
                subplot(3,10,(nn-1)*4+id+20)
                bar([1:Epnum],Spiinfo{nn,3}(id,:))
                hold on
                errorbar([1:Epnum],Spiinfo{nn,3}(id,:),Spiinfo{nn,5}(id,:))
                xlim([0.5 Epnum+0.5])
                
                %number
                subplot(3,10,(nn-1)*4+id+2)
                bar([1:Epnum],Spiinfo{nn,6}(id,:))
                title(['LoSpindles',structureName{nn},infoDepth{id}])
                xlim([0.5 Epnum+0.5])
                %size
                subplot(3,10,(nn-1)*4+id+12)
                bar([1:Epnum],Spiinfo{nn,7}(id,:))
                hold on
                errorbar([1:Epnum],Spiinfo{nn,7}(id,:),Spiinfo{nn,9}(id,:))
                xlim([0.5 Epnum+0.5])
                %duration
                subplot(3,10,(nn-1)*4+id+22)
                bar([1:Epnum],Spiinfo{nn,8}(id,:))
                hold on
                errorbar([1:Epnum],Spiinfo{nn,8}(id,:),Spiinfo{nn,10}(id,:))
                xlim([0.5 Epnum+0.5])
                
            end
        end
        
        if norip==0
            %number
            subplot(3,10,9)
            bar([1:Epnum],Ripinfo(1,:))
            title('Ripples')
            xlim([0.5 Epnum+0.5])
            %size
            subplot(3,10,19)
            bar([1:Epnum],Ripinfo(2,:))
            hold on
            errorbar([1:Epnum],Ripinfo(2,:),Ripinfo(4,:))
            xlim([0.5 Epnum+0.5])
            %duration
            subplot(3,10,29)
            bar([1:Epnum],Ripinfo(3,:))
            hold on
            errorbar([1:Epnum],Ripinfo(3,:),Ripinfo(5,:))
            xlim([0.5 Epnum+0.5])
        end
        
        %number
        subplot(3,10,10)
        bar([1:Epnum],Delinfo(1,:))
        title(['No Del',structureName{1}])
        xlim([0.5 Epnum+0.5])
        %number
        subplot(3,10,20)
        bar([1:Epnum],Delinfo(2,:))
        title(['No Del',structureName{2}])
        xlim([0.5 Epnum+0.5])
        
        subplot(3,10,1)
        ylabel('Numbers')
        subplot(3,10,11)
        ylabel('Amplitude')
        subplot(3,10,21)
        ylabel('Duration')
        
        saveFigure(compstats,'StatsByEpochv5',filetosave)
        close all
        save([filetosave,'OscillInfov5.mat'],'Spiinfo','Ripinfo','Delinfo','EpofInt')
    end
    
else
    save([filetosave,'OscillInfov5.mat'],'Spiinfo','Ripinfo','Delinfo','EpofInt')
end
