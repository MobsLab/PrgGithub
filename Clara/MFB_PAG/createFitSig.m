function cf_=createFitSig(X_253,NPDUR_253)
%CREATEFIT Create plot of data sets and fits
%   CREATEFIT(X_253,NPDUR_253)
%   Creates a plot, similar to the plot in the main Curve Fitting Tool,
%   using the data that you provide as input.  You can
%   use this function with the same data you used with CFTOOL
%   or with different data.  You may want to edit the function to
%   customize the code and this help message.
%
%   Number of data sets:  1
%   Number of fits:  1

% Data from data set "NPDUR_253 vs. X_253":
%     X = X_253:
%     Y = NPDUR_253:
%     Unweighted

% Auto-generated by MATLAB on 03-Nov-2015 14:34:32

% Set up figure to receive data sets and fits
f_ = clf;
figure(f_);
set(f_,'Units','Pixels','Position',[1041 349 674 473]);
% Line handles and text for the legend.
legh_ = [];
legt_ = {};
% Limits of the x-axis.
xlim_ = [Inf -Inf];
% Axes for the plot.
ax_ = axes;
set(ax_,'Units','normalized','OuterPosition',[0 0 1 1]);
set(ax_,'Box','on');
axes(ax_);
hold on;

% --- Plot data that was originally in data set "NPDUR_253 vs. X_253"
X_253 = X_253(:);
NPDUR_253 = NPDUR_253(:);
h_ = line(X_253,NPDUR_253,'Parent',ax_,'Color',[0.333333 0 0.666667],...
    'LineStyle','none', 'LineWidth',1,...
    'Marker','.', 'MarkerSize',12);
xlim_(1) = min(xlim_(1),min(X_253));
xlim_(2) = max(xlim_(2),max(X_253));
legh_(end+1) = h_;
legt_{end+1} = 'NPDUR_253 vs. X_253';

% Nudge axis limits beyond data limits
if all(isfinite(xlim_))
    xlim_ = xlim_ + [-1 1] * 0.01 * diff(xlim_);
    set(ax_,'XLim',xlim_)
else
    set(ax_, 'XLim',[-0.040000000000000000833, 4.0400000000000000355]);
end

% --- Create fit "fit 1"
fo_ = fitoptions('method','NonlinearLeastSquares','Lower',[0 0 0]);
ok_ = isfinite(X_253) & isfinite(NPDUR_253);
if ~all( ok_ )
    warning( 'GenerateMFile:IgnoringNansAndInfs',...
        'Ignoring NaNs and Infs in data.' );
end
st_ = [1 5 3 ];
set(fo_,'Startpoint',st_);
ft_ = fittype('a./(1+exp((x-d)*c))',...
    'dependent',{'y'},'independent',{'x'},...
    'coefficients',{'a', 'c', 'd'});

% Fit this model using new data
cf_ = fit(X_253(ok_),NPDUR_253(ok_),ft_,fo_);
% Alternatively uncomment the following lines to use coefficients from the
% original fit. You can use this choice to plot the original fit against new
% data.
%    cv_ = { 0.41096887932947334665, 4.0489813818704440962, 1.1759309820169354666};
%    cf_ = cfit(ft_,cv_{:});

% Plot this fit
h_ = plot(cf_,'fit',0.95);
set(h_(1),'Color',[1 0 0],...
    'LineStyle','-', 'LineWidth',2,...
    'Marker','none', 'MarkerSize',6);
% Turn off legend created by plot method.
legend off;
% Store line handle and fit name for legend.
legh_(end+1) = h_(1);
legt_{end+1} = 'fit 1';

% --- Finished fitting and plotting data. Clean up.
hold off;
% Display legend
leginfo_ = {'Orientation', 'vertical', 'Location', 'NorthEast'};
h_ = legend(ax_,legh_,legt_,leginfo_{:});
set(h_,'Interpreter','none');
% Remove labels from x- and y-axes.
xlabel(ax_,'');
ylabel(ax_,'');
