delay_generated = figure_res.ripples_bef{p};
delays = delay_generated(randperm(length(delay_generated)));
while ~isempty(delays)
idx = randsample(1:length(st_upno),1);
min_tmp = st_upno(idx);
duree  = end_upno(idx)-st_upno(idx);
if delays(1)<duree
sham_tmp = [sham_tmp min_tmp+delays(1)];
delays = delays(2:end);
end
end
while ~isempty(delays)
idx = randsample(1:length(st_upno),1);
min_tmp = st_upno(idx);
duree  = end_upno(idx)-st_upno(idx);
if delays(1)<duree
sham_tmp = [sham_tmp min_tmp+delays(1)];
delays = delays(2:end);
end
end
st_upno = Start(UpNo);
end_upno = End(UpNo);
sham_tmp = [];
delay_generated = figure_res.ripples_bef{p};
delays = delay_generated(randperm(length(delay_generated)));
while ~isempty(delays)
idx = randsample(1:length(st_upno),1);
min_tmp = st_upno(idx);
duree  = end_upno(idx)-st_upno(idx);
if delays(1)<duree
sham_tmp = [sham_tmp min_tmp+delays(1)];
delays = delays(2:end);
else
disp('no')
end
end
%% Create sham
st_upno = Start(UpNo);
end_upno = End(UpNo);
durations_no = End(UpNo)-Start(UpNo);
sham_tmp = [];
delay_generated = figure_res.ripples_bef{p};
delays = delay_generated(randperm(length(delay_generated)));
while ~isempty(delays)
idx = randsample(find(durations_no>delays(1)),1);
min_tmp = st_upno(idx);
duree  = end_upno(idx)-st_upno(idx);
if delays(1)<duree
sham_tmp = [sham_tmp min_tmp+delays(1)];
delays = delays(2:end);
else
disp('no')
end
end
find(durations_no>delays(1));
delays(1)
clear
Dir=PathForExperimentsBasalSleepSpike;
Dir=RestrictPathForExperiment(Dir, 'nMice', [243,244,403,451]);
sham_distrib = 1;
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p figure_res sham_res sham_distrib
figure_res.path{p}   = Dir.path{p};
figure_res.manipe{p} = Dir.manipe{p};
figure_res.name{p}   = Dir.name{p};
figure_res.date{p}   = Dir.date{p};
sham_res.path{p}   = Dir.path{p};
sham_res.manipe{p} = Dir.manipe{p};
sham_res.name{p}   = Dir.name{p};
sham_res.date{p}   = Dir.date{p};
%params
binsize_mua = 2;
maxDuration = 10e4;
t_start     =  -2e4; %1s
t_end       = 2e4; %1s
%SWSEpoch
load('SleepScoring_OBGamma.mat', 'SWSEpoch')
%Down
load('DownState.mat', 'down_PFCx')
st_down = Start(down_PFCx);
end_down = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
up_PFCx = dropLongIntervals(up_PFCx, maxDuration); %10sec
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
%ripples
load('Ripples.mat', 'Ripples')
ripples_tmp = Ripples(:,2)*10;
RipplesEvent = ts(ripples_tmp);
%MUA & Down
MUA = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua); %2mS
%% Ripples/Sham in or out
%ripples in and out down states
RipplesIn = Restrict(RipplesEvent, up_PFCx);
%Up with or without
intv_up = [Start(up_PFCx) End(up_PFCx)];
[~,intv_with,~] = InIntervals(ripples_tmp, intv_up);
intv_with = unique(intv_with);
intv_with(intv_with==0) = [];
intv_without = setdiff(1:length(Start(up_PFCx)), intv_with);
UpRipples = intervalSet(intv_up(intv_with,1),intv_up(intv_with,2));
UpNo   = intervalSet(intv_up(intv_without,1),intv_up(intv_without,2));
%% Delay between ripples and down
%ripples in
ripplesin_tmp = Range(RipplesIn);
figure_res.ripples_bef{p} = nan(length(ripplesin_tmp), 1);
figure_res.ripples_aft{p} = nan(length(ripplesin_tmp), 1);
figure_res.ripples_post{p} = nan(length(ripplesin_tmp), 1);
for i=1:length(ripplesin_tmp)
try
st_bef = st_up(find(st_up<ripplesin_tmp(i),1,'last'));
figure_res.ripples_bef{p}(i) = ripplesin_tmp(i) - st_bef;
end
try
end_aft = end_up(find(end_up>ripplesin_tmp(i),1));
figure_res.ripples_aft{p}(i) = end_aft - ripplesin_tmp(i);
end
try
up_post = st_up(find(st_up>ripplesin_tmp(i),1));
figure_res.ripples_post{p}(i) = up_post - ripplesin_tmp(i);
end
end
p=2
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p figure_res sham_res sham_distrib
figure_res.path{p}   = Dir.path{p};
figure_res.manipe{p} = Dir.manipe{p};
figure_res.name{p}   = Dir.name{p};
figure_res.date{p}   = Dir.date{p};
sham_res.path{p}   = Dir.path{p};
sham_res.manipe{p} = Dir.manipe{p};
sham_res.name{p}   = Dir.name{p};
sham_res.date{p}   = Dir.date{p};
%params
binsize_mua = 2;
maxDuration = 10e4;
t_start     =  -2e4; %1s
t_end       = 2e4; %1s
%SWSEpoch
load('SleepScoring_OBGamma.mat', 'SWSEpoch')
%Down
load('DownState.mat', 'down_PFCx')
st_down = Start(down_PFCx);
end_down = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
up_PFCx = dropLongIntervals(up_PFCx, maxDuration); %10sec
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
%ripples
load('Ripples.mat', 'Ripples')
ripples_tmp = Ripples(:,2)*10;
RipplesEvent = ts(ripples_tmp);
%MUA & Down
MUA = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua); %2mS
%% Ripples/Sham in or out
%ripples in and out down states
RipplesIn = Restrict(RipplesEvent, up_PFCx);
%Up with or without
intv_up = [Start(up_PFCx) End(up_PFCx)];
[~,intv_with,~] = InIntervals(ripples_tmp, intv_up);
intv_with = unique(intv_with);
intv_with(intv_with==0) = [];
intv_without = setdiff(1:length(Start(up_PFCx)), intv_with);
UpRipples = intervalSet(intv_up(intv_with,1),intv_up(intv_with,2));
UpNo   = intervalSet(intv_up(intv_without,1),intv_up(intv_without,2));
%% Delay between ripples and down
%ripples in
ripplesin_tmp = Range(RipplesIn);
figure_res.ripples_bef{p} = nan(length(ripplesin_tmp), 1);
figure_res.ripples_aft{p} = nan(length(ripplesin_tmp), 1);
figure_res.ripples_post{p} = nan(length(ripplesin_tmp), 1);
for i=1:length(ripplesin_tmp)
try
st_bef = st_up(find(st_up<ripplesin_tmp(i),1,'last'));
figure_res.ripples_bef{p}(i) = ripplesin_tmp(i) - st_bef;
end
try
end_aft = end_up(find(end_up>ripplesin_tmp(i),1));
figure_res.ripples_aft{p}(i) = end_aft - ripplesin_tmp(i);
end
try
up_post = st_up(find(st_up>ripplesin_tmp(i),1));
figure_res.ripples_post{p}(i) = up_post - ripplesin_tmp(i);
end
end
%% Create sham
st_upno = Start(UpNo);
end_upno = End(UpNo);
durations_no = End(UpNo)-Start(UpNo);
sham_tmp = [];
delay_generated = figure_res.ripples_bef{p};
delays = delay_generated(randperm(length(delay_generated)));
while ~isempty(delays)
idx = randsample(find(durations_no>delays(1)),1);
min_tmp = st_upno(idx);
duree  = end_upno(idx)-st_upno(idx);
if delays(1)<duree
sham_tmp = [sham_tmp min_tmp+delays(1)];
delays = delays(2:end);
else
disp('no')
end
end
%% Create sham
st_upno = Start(UpNo);
end_upno = End(UpNo);
durations_no = End(UpNo)-Start(UpNo);
sham_tmp = [];
delay_generated = figure_res.ripples_bef{p};
delays = delay_generated(randperm(length(delay_generated)));
while ~isempty(delays)
idx = randsample(find(durations_no>delays(1)),1);
min_tmp = st_upno(idx);
duree  = end_upno(idx)-st_upno(idx);
sham_tmp = [sham_tmp min_tmp+delays(1)];
delays = delays(2:end);
end
%% Create sham
st_upno = Start(UpNo);
end_upno = End(UpNo);
durations_no = End(UpNo)-Start(UpNo);
sham_tmp = [];
delay_generated = repmat(figure_res.ripples_bef{p}, [1 1]);
delays = delay_generated(randperm(length(delay_generated)));
while ~isempty(delays)
idx = randsample(find(durations_no>delays(1)),1);
min_tmp = st_upno(idx);
duree  = end_upno(idx)-st_upno(idx);
sham_tmp = [sham_tmp min_tmp+delays(1)];
delays = delays(2:end);
end
FiguresRipplesInUpPerRecord
Fig4RipplesInUpEffect
FiguresRipplesInUpPerRecord
Fig4RipplesInUpEffect
load(fullfile(FolderDeltaDataKJ,'FiguresRipplesInUpPerRecord_2.mat'))
Fig4RipplesInDownEffect
FiguresRipplesInUpPerRecord
DownUpTransitionsSpikesMetrics2_Plot
save FiguresRipplesInUpPerRecord_2.mat -v2.7 figure_res sham_res binsize_mua maxDuration t_start t_end
save FiguresRipplesInUpPerRecord_2.mat -v7.3 figure_res sham_res binsize_mua maxDuration t_start t_end
Fig4RipplesInUpEffect
FiguresRipplesInUpPerRecord
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
%load
clear
load(fullfile(FolderDeltaDataKJ,'DownUpTransitionsSpikesMetrics1.mat'))
p=6;
speth = transit_res.speth{p};
%params
%%
first_endo = -transit_res.endo.first{p}/10;
mean_endo  = -transit_res.endo.meansp{p}/10;
first_indu = -transit_res.indu.first{p}/10;
mean_indu  = -transit_res.indu.meansp{p}/10;
size(first_endo,2)
size(first_endo,1)/2
halfsize = int(size(first_endo,1)/2);
halfsize = floor(size(first_endo,1)/2);
FirstSecondhalfNightSpikeMetrics
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MethodPaper/
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
FirstSecondhalfNightSpikeMetrics
edit AssessToneEffectTransitionsPlot
edit AssessToneEffectMUAtypePlot.m
AssessToneEffectMUAtypePlot
Fig4RipplesInUpEffect
%-- 02/08/2018 17:02:25 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
edit AssessToneEffectMUAtypePlot.m
%load
clear
load(fullfile(FolderDeltaDataKJ,'DownUpTransitionsSpikesMetrics1.mat'))
p=6;
speth = transit_res.speth{p};
%tone impact
load(fullfile(transit_res.path{p},'NeuronTones.mat'), 'Ctones', 'xtones', 'Csham', 'xsham', 'NumNeurons', 'neuronsLayers')
%neuron info
load(fullfile(transit_res.path{p},'InfoNeuronsPFCx.mat'), 'MatInfoNeurons', 'InfoNeurons')
%% responding neurons
Cdiff = Ctones.out - Csham;
Ct_std = std(Ctones.out,[],2);
idt = xtones.out>0 & xtones.out<100;
for i=1:length(neuronsLayers)
effect_peak(i,1) = max(Cdiff(i,idt));
effect_mean(i,1) = mean(Cdiff(i,idt));
t_peak(i,1) = max(Ctones.out(i,idt));
t_mean(i,1) = mean(Ctones.out(i,idt));
end
idn_excit = effect_peak>4 & t_peak>3*Ct_std;
idn_inhib = effect_mean<-1 & t_mean <-1;
idn_neutral = (effect_mean>-0.5 & effect_peak<3.5) | (t_mean>0 & t_peak<3*Ct_std);
responses = nan(length(NumNeurons),1);
responses(idn_excit) = 1;
responses(idn_inhib) = -1;
responses(idn_neutral) = 0;
excited_neurons = NumNeurons(responses==1);
neutral_neurons = NumNeurons(responses==0);
inhibit_neurons = NumNeurons(responses==-1);
%%
first_endo = -transit_res.endo.first{p}/10;
mean_endo  = -transit_res.endo.meansp{p}/10;
first_indu = -transit_res.indu.first{p}/10;
mean_indu  = -transit_res.indu.meansp{p}/10;
halfsize = floor(size(first_endo,1)/2);
for i=1:size(first_endo,2)
begin.first(i) = nanmean(first_endo(1:halfsize,i));
ending.first(i) = nanmean(first_endo(halfsize:end,i));
indu.first(i) = nanmean(first_indu(:,i));
end
%% Plot
sz=25;
figure, hold on
subplot(2,2,1), hold on
scatter(begin.first,ending.first,sz,'filled'),
plot(0:300,0:300,'color',[0.7 0.7 0.7]),
xlabel('mean first spike / 1st half'),
ylabel('mean first spike / 2nd half'),
title('1st vs 2nd half of the night - endogeneous')
subplot(2,2,2), hold on
scatter(begin.first,indu.first,sz,'filled')
plot(0:300,0:300,'color',[0.7 0.7 0.7]),
xlabel('mean first spike / 1st half'),
ylabel('mean first spike / all induced'),
title('1st half endo vs all induced'),
subplot(2,2,4), hold on
scatter(ending.first,indu.first,sz,'filled'),
plot(0:300,0:300,'color',[0.7 0.7 0.7]),
xlabel('mean first spike / 2nd half'),
ylabel('mean first spike / all induced'),
title('2nd half endo vs all induced')
edit LFPlayerInfluenceOnDetection.m
LFPlayerInfluenceOnDetection
FirstSecondhalfNightSpikeMetrics
139/255
sz=25;
colori = {'r', 'g', 'm'};
colori = [1 0 0;0 0.55 0;0.55 0 0.55] ;
figure, hold on
subplot(2,2,1), hold on
scatter(begin.first,ending.first,sz,'filled'),
plot(0:300,0:300,'color',[0.7 0.7 0.7]),
xlabel('mean first spike / 1st half'),
ylabel('mean first spike / 2nd half'),
title('1st vs 2nd half of the night - endogeneous')
subplot(2,2,3), hold on
gscatter(begin.first,indu.first, responses, colori);
plot(0:300,0:300,'color',[0.7 0.7 0.7]),
xlabel('mean first spike / 1st half'),
ylabel('mean first spike / all induced'),
title('1st half endo vs all induced'),
subplot(2,2,3), hold on
scatter(begin.first,indu.first,sz,'filled')
plot(0:300,0:300,'color',[0.7 0.7 0.7]),
xlabel('mean first spike / 1st half'),
ylabel('mean first spike / all induced'),
title('1st half endo vs all induced'),
subplot(2,2,4), hold on
scatter(ending.first,indu.first,sz,'filled'),
plot(0:300,0:300,'color',[0.7 0.7 0.7]),
xlabel('mean first spike / 2nd half'),
ylabel('mean first spike / all induced'),
title('2nd half endo vs all induced')
FirstSecondhalfNightSpikeMetrics
FirstSecondhalfNightSpikeMetrics2
close all
FirstSecondhalfNightSpikeMetrics2
FirstSecondhalfNightSpikeMetrics
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
edit LFPlayerInfluenceOnDetection.m
%load
clear
load(fullfile(FolderDeltaDataKJ,'DownUpTransitionsSpikesMetrics1.mat'))
for p=1:length(transit_res.path)
clearvars -except transit_res p
speth = transit_res.speth{p};
%tone impact
load(fullfile(transit_res.path{p},'NeuronTones.mat'), 'Ctones', 'xtones', 'Csham', 'xsham', 'NumNeurons', 'neuronsLayers')
%neuron info
load(fullfile(transit_res.path{p},'InfoNeuronsPFCx.mat'), 'MatInfoNeurons', 'InfoNeurons')
%params
%% responding neurons
Cdiff = Ctones.out - Csham;
Ct_std = std(Ctones.out,[],2);
idt = xtones.out>0 & xtones.out<100;
for i=1:length(neuronsLayers)
effect_peak(i,1) = max(Cdiff(i,idt));
effect_mean(i,1) = mean(Cdiff(i,idt));
t_peak(i,1) = max(Ctones.out(i,idt));
t_mean(i,1) = mean(Ctones.out(i,idt));
end
idn_excit = effect_peak>4 & t_peak>3*Ct_std;
idn_inhib = effect_mean<-1 & t_mean <-1;
idn_neutral = (effect_mean>-0.5 & effect_peak<3.5) | (t_mean>0 & t_peak<3*Ct_std);
responses = zeros(length(NumNeurons),1);
responses(idn_excit) = 1;
responses(idn_inhib) = -1;
responses(idn_neutral) = 0;
excited_neurons = NumNeurons(responses==1);
neutral_neurons = NumNeurons(responses==0);
inhibit_neurons = NumNeurons(responses==-1);
%% firing rates
firingrates = transit_res.firingrate{p};
Matfr{p}{1} = firingrates(excited_neurons);
Matfr{p}{2} = firingrates(neutral_neurons);
Matfr{p}{3} = firingrates(inhibit_neurons);
end
%load
clear
load(fullfile(FolderDeltaDataKJ,'DownUpTransitionsSpikesMetrics1.mat'))
for p=1:length(transit_res.path)
clearvars -except transit_res p Matfr
speth = transit_res.speth{p};
%tone impact
load(fullfile(transit_res.path{p},'NeuronTones.mat'), 'Ctones', 'xtones', 'Csham', 'xsham', 'NumNeurons', 'neuronsLayers')
%neuron info
load(fullfile(transit_res.path{p},'InfoNeuronsPFCx.mat'), 'MatInfoNeurons', 'InfoNeurons')
%params
%% responding neurons
Cdiff = Ctones.out - Csham;
Ct_std = std(Ctones.out,[],2);
idt = xtones.out>0 & xtones.out<100;
for i=1:length(neuronsLayers)
effect_peak(i,1) = max(Cdiff(i,idt));
effect_mean(i,1) = mean(Cdiff(i,idt));
t_peak(i,1) = max(Ctones.out(i,idt));
t_mean(i,1) = mean(Ctones.out(i,idt));
end
idn_excit = effect_peak>4 & t_peak>3*Ct_std;
idn_inhib = effect_mean<-1 & t_mean <-1;
idn_neutral = (effect_mean>-0.5 & effect_peak<3.5) | (t_mean>0 & t_peak<3*Ct_std);
responses = zeros(length(NumNeurons),1);
responses(idn_excit) = 1;
responses(idn_inhib) = -1;
responses(idn_neutral) = 0;
excited_neurons = NumNeurons(responses==1);
neutral_neurons = NumNeurons(responses==0);
inhibit_neurons = NumNeurons(responses==-1);
%% firing rates
firingrates = transit_res.firingrate{p};
Matfr{p}{1} = firingrates(excited_neurons);
Matfr{p}{2} = firingrates(neutral_neurons);
Matfr{p}{3} = firingrates(inhibit_neurons);
end
FiringRatesNeuronTypes
labels = {'excited', 'neutral', 'inhibited'};
figure, hold on
for p=1:length(Matfr)
subplot(2,3,p), hold on
PlotErrorSpreadN_KJ(Matfr{p}, 'newfig',0, 'plotcolors',{'r','g','m'}, 'paired',0, 'ShowSigstar','sig');
set(gca,'xtick',1:length(labels),'XtickLabel',labels)
title([transit_res.name{p} ' - ' num2str(p)])
end
edit PlotErrorBarN_KJ.m
FiringRatesNeuronTypes
close all
FiringRatesNeuronTypes
close all
FiringRatesNeuronTypes
edit IsolationDistance.m
edit ParcoursToneEffectOnNeurons.m
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
samplingrate = 2e4;
load('SpikeData.mat', 'TT')
%tetrodes
load('SpikeData.mat', 'TT')
tetrodes = [];
for i=1:length(TT)
tetrodes = [tetrodes TT{i}(1)];
end
tetrodes = unique(tetrodes);
edit utils_ID_figure.m
filelist = dir('*.dat');
p=4
p=6
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%params
samplingrate = 2e4;
%tetrodes
load('SpikeData.mat', 'TT')
tetrodes = [];
for i=1:length(TT)
tetrodes = [tetrodes TT{i}(1)];
end
tetrodes = unique(tetrodes);
%features
filelist = dir('*.dat');
edit utils_ID_figure.m
length(filelist)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%params
samplingrate = 2e4;
%tetrodes
load('SpikeData.mat', 'TT')
tetrodes = [];
for i=1:length(TT)
tetrodes = [tetrodes TT{i}(1)];
end
tetrodes = unique(tetrodes);
%filename
filelist = dir('*.lfp');
filename = filelist(i).name;
filename = filename(1:end-4);
filelist = dir('*.lfp');
filename = filelist(i).name;
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%params
samplingrate = 2e4;
%tetrodes
load('SpikeData.mat', 'TT')
tetrodes = [];
for i=1:length(TT)
tetrodes = [tetrodes TT{i}(1)];
end
tetrodes = unique(tetrodes);
%filename
filelist = dir('*.lfp');
filename = filelist(1).name;
filename = filename(1:end-4);
filename
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%params
samplingrate = 2e4;
%tetrodes
load('SpikeData.mat', 'TT')
tetrodes = [];
for i=1:length(TT)
tetrodes = [tetrodes TT{i}(1)];
end
tetrodes = unique(tetrodes);
%filename
filelist = dir('*.lfp');
filename = filelist(1).name;
filename = fullefile(Dir.path{p}, filename(1:end-4));
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%params
samplingrate = 2e4;
%tetrodes
load('SpikeData.mat', 'TT')
tetrodes = [];
for i=1:length(TT)
tetrodes = [tetrodes TT{i}(1)];
end
tetrodes = unique(tetrodes);
%filename
filelist = dir('*.lfp');
filename = filelist(1).name;
filename = fullfile(Dir.path{p}, filename(1:end-4))
clear
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%params
samplingrate = 2e4;
%tetrodes
load('SpikeData.mat', 'TT')
tetrodes = [];
for i=1:length(TT)
tetrodes = [tetrodes TT{i}(1)];
end
tetrodes = unique(tetrodes);
%filename
filelist = dir('*.lfp');
filename = filelist(1).name;
filename = fullfile(Dir.path{p}, filename(1:end-4));
for i=1:length(tetrodes)
features{i} = LoadSpikeFeatures([filename '.clu.' num2str(i)],samplingrate);
end
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%params
samplingrate = 2e4;
%tetrodes
load('SpikeData.mat', 'TT')
tetrodes = [];
for i=1:length(TT)
tetrodes = [tetrodes TT{i}(1)];
end
tetrodes = unique(tetrodes);
filelist = dir('*.lfp');
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%params
samplingrate = 2e4;
%tetrodes
load('SpikeData.mat', 'TT')
tetrodes = [];
for i=1:length(TT)
tetrodes = [tetrodes TT{i}(1)];
end
tetrodes = unique(tetrodes);
%filename
filelist = dir('*.clu.1');
filename = filelist(1).name;
filename = fullfile(Dir.path{p}, filename(1:end-4));
for i=1:length(tetrodes)
features{i} = LoadSpikeFeatures([filename '.clu.' num2str(i)],samplingrate);
end
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%params
samplingrate = 2e4;
%tetrodes
load('SpikeData.mat', 'TT')
tetrodes = [];
for i=1:length(TT)
tetrodes = [tetrodes TT{i}(1)];
end
tetrodes = unique(tetrodes);
%filename
filelist = dir('*.clu.1');
filename = filelist(1).name;
filename = fullfile(Dir.path{p}, filename(1:end-6));
for i=1:length(tetrodes)
features{i} = LoadSpikeFeatures([filename '.clu.' num2str(i)],samplingrate);
end
%-- 03/08/2018 17:55:34 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
ParcoursIsolationDistanceTonesEffect
Fig4RipplesInUpEffect
edit Fig4RipplesCorrectedInUpEffect
FiguresRipplesInUpCorrectedPerRecord
FiguresRipplesInUpCorrectedPerRecord
FiguresRipplesInUpCorrectedPerRecord
DownUpTransitionsSpikesMetrics2
clear
edit DownUpTransitionsSpikesMetrics2_Plot.m
DownUpTransitionsSpikesMetrics2_Plot
FiringRatesNeuronTypes
FirstSecondhalfNightSpikeMetrics
FirstSecondhalfNightSpikeMetrics2
close all
DownUpTransitionsSpikesMetrics1
edit AssessToneEffectMUAtypePlot.m
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
%get data for each record
p=1;
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
load('SleepSubstages.mat', 'Epoch')
load('SleepSubstages.mat')
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
%get data for each record
p=1;
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
%% init
%params
binsize_met = 2;
nbBins_met  = 400;
binsize_mua = 2;
minDuration = 40;
intv_success_down = 1000; %100ms
intv_success_up = 500; %50ms
%tone impact
load('NeuronTones', 'Ctones', 'xtones', 'Csham', 'xsham', 'NumNeurons', 'neuronsLayers')
%neuron info
load('InfoNeuronsPFCx.mat', 'MatInfoNeurons', 'InfoNeurons')
%tones
load('DeltaSleepEvent.mat', 'TONEtime2')
tones_tmp = TONEtime2 + Dir.delay{p}*1E4;
ToneEvent = ts(tones_tmp);
%substages
load('SleepScoring_OBGamma.mat', 'SWSEpoch')
load('SleepSubstages.mat')
%% responding neurons
Cdiff = Ctones.out - Csham;
Ct_std = std(Ctones.out,[],2);
idt = xtones.out>0 & xtones.out<100;
for i=1:length(neuronsLayers)
effect_peak(i,1) = max(Cdiff(i,idt));
effect_mean(i,1) = mean(Cdiff(i,idt));
t_peak(i,1) = max(Ctones.out(i,idt));
t_mean(i,1) = mean(Ctones.out(i,idt));
end
idn_excit = effect_peak>4 & t_peak>3*Ct_std;
idn_inhib = effect_mean<-1 & t_mean <-1;
idn_neutral = (effect_mean>-0.5 & effect_peak<3.5) | (t_mean>0 & t_peak<3*Ct_std);
responses = nan(length(NumNeurons),1);
responses(idn_excit) = 1;
responses(idn_inhib) = -1;
responses(idn_neutral) = 0;
excited_neurons = NumNeurons(responses==1);
neutral_neurons = NumNeurons(responses==0);
inhibit_neurons = NumNeurons(responses==-1);
%% Tones
ToneNREM = Restrict(ToneEvent, SWSEpoch);
ToneDown = Restrict(ToneNREM, down_PFCx);
ToneUp   = Restrict(ToneNREM, up_PFCx);
% Down to Up ?
intv_post_tones = [Range(ToneDown) Range(ToneDown)+intv_success_up];
[~,intervals,~] = InIntervals(st_up, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneDownUp = subset(ToneDown, intervals);
ToneDownDown = subset(ToneDown, setdiff(1:length(ToneDown), intervals));
% Up to Down ?
intv_post_tones = [Range(ToneUp) Range(ToneUp)+intv_success_down];
[~,intervals,~] = InIntervals(st_down, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneUpDown = subset(ToneUp, intervals);
ToneUpUp = subset(ToneUp, setdiff(1:length(ToneUp), intervals));
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
%get data for each record
p=1;
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
%% init
%params
binsize_met = 2;
nbBins_met  = 400;
binsize_mua = 2;
minDuration = 40;
intv_success_down = 1000; %100ms
intv_success_up = 500; %50ms
%tone impact
load('NeuronTones', 'Ctones', 'xtones', 'Csham', 'xsham', 'NumNeurons', 'neuronsLayers')
%neuron info
load('InfoNeuronsPFCx.mat', 'MatInfoNeurons', 'InfoNeurons')
%tones
load('DeltaSleepEvent.mat', 'TONEtime2')
tones_tmp = TONEtime2 + Dir.delay{p}*1E4;
ToneEvent = ts(tones_tmp);
%substages
load('SleepScoring_OBGamma.mat', 'SWSEpoch')
load('SleepSubstages.mat')
%% responding neurons
Cdiff = Ctones.out - Csham;
Ct_std = std(Ctones.out,[],2);
idt = xtones.out>0 & xtones.out<100;
for i=1:length(neuronsLayers)
effect_peak(i,1) = max(Cdiff(i,idt));
effect_mean(i,1) = mean(Cdiff(i,idt));
t_peak(i,1) = max(Ctones.out(i,idt));
t_mean(i,1) = mean(Ctones.out(i,idt));
end
idn_excit = effect_peak>4 & t_peak>3*Ct_std;
idn_inhib = effect_mean<-1 & t_mean <-1;
idn_neutral = (effect_mean>-0.5 & effect_peak<3.5) | (t_mean>0 & t_peak<3*Ct_std);
responses = nan(length(NumNeurons),1);
responses(idn_excit) = 1;
responses(idn_inhib) = -1;
responses(idn_neutral) = 0;
excited_neurons = NumNeurons(responses==1);
neutral_neurons = NumNeurons(responses==0);
inhibit_neurons = NumNeurons(responses==-1);
%% MUA
%MUA
MUA  = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua);
%Down
down_PFCx = FindDownKJ(MUA, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
%% Tones
ToneNREM = Restrict(ToneEvent, SWSEpoch);
ToneDown = Restrict(ToneNREM, down_PFCx);
ToneUp   = Restrict(ToneNREM, up_PFCx);
% Down to Up ?
intv_post_tones = [Range(ToneDown) Range(ToneDown)+intv_success_up];
[~,intervals,~] = InIntervals(st_up, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneDownUp = subset(ToneDown, intervals);
ToneDownDown = subset(ToneDown, setdiff(1:length(ToneDown), intervals));
% Up to Down ?
intv_post_tones = [Range(ToneUp) Range(ToneUp)+intv_success_down];
[~,intervals,~] = InIntervals(st_down, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneUpDown = subset(ToneUp, intervals);
ToneUpUp = subset(ToneUp, setdiff(1:length(ToneUp), intervals));
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ts(ToneEvent),SleepSubstages{1}), -15000,+15000,'BinSize',50,'Markers',{ts(ToneEvent)},'MarkerTypes',{'ro','r'});
load('SpikeData.mat', 'S')
load('SpikeData.mat', 'S');
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ts(ToneEvent),SleepSubstages{1}), -15000,+15000,'BinSize',50,'Markers',{ts(ToneEvent)},'MarkerTypes',{'ro','r'});
which -all Diff
which -all fiff
which -all diff
which -all Diff
SleepSubstages
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
%get data for each record
p=1;
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
%% init
%params
binsize_met = 2;
nbBins_met  = 400;
binsize_mua = 2;
minDuration = 40;
intv_success_down = 1000; %100ms
intv_success_up = 500; %50ms
%tone impact
load('NeuronTones', 'Ctones', 'xtones', 'Csham', 'xsham', 'NumNeurons', 'neuronsLayers')
%neuron info
load('InfoNeuronsPFCx.mat', 'MatInfoNeurons', 'InfoNeurons')
%tones
load('DeltaSleepEvent.mat', 'TONEtime2')
tones_tmp = TONEtime2 + Dir.delay{p}*1E4;
ToneEvent = ts(tones_tmp);
%substages
load('SleepScoring_OBGamma.mat', 'SWSEpoch')
load('SleepSubstages.mat')
%% responding neurons
Cdiff = Ctones.out - Csham;
Ct_std = std(Ctones.out,[],2);
idt = xtones.out>0 & xtones.out<100;
for i=1:length(neuronsLayers)
effect_peak(i,1) = max(Cdiff(i,idt));
effect_mean(i,1) = mean(Cdiff(i,idt));
t_peak(i,1) = max(Ctones.out(i,idt));
t_mean(i,1) = mean(Ctones.out(i,idt));
end
idn_excit = effect_peak>4 & t_peak>3*Ct_std;
idn_inhib = effect_mean<-1 & t_mean <-1;
idn_neutral = (effect_mean>-0.5 & effect_peak<3.5) | (t_mean>0 & t_peak<3*Ct_std);
responses = nan(length(NumNeurons),1);
responses(idn_excit) = 1;
responses(idn_inhib) = -1;
responses(idn_neutral) = 0;
excited_neurons = NumNeurons(responses==1);
neutral_neurons = NumNeurons(responses==0);
inhibit_neurons = NumNeurons(responses==-1);
%% MUA
%MUA
MUA  = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua);
%Down
down_PFCx = FindDownKJ(MUA, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
%% Tones
ToneNREM = Restrict(ToneEvent, SWSEpoch);
ToneDown = Restrict(ToneNREM, down_PFCx);
ToneUp   = Restrict(ToneNREM, up_PFCx);
% Down to Up ?
intv_post_tones = [Range(ToneDown) Range(ToneDown)+intv_success_up];
[~,intervals,~] = InIntervals(st_up, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneDownUp = subset(ToneDown, intervals);
ToneDownDown = subset(ToneDown, setdiff(1:length(ToneDown), intervals));
% Up to Down ?
intv_post_tones = [Range(ToneUp) Range(ToneUp)+intv_success_down];
[~,intervals,~] = InIntervals(st_down, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneUpDown = subset(ToneUp, intervals);
ToneUpUp = subset(ToneUp, setdiff(1:length(ToneUp), intervals));
load('SpikeData.mat', 'S');
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ts(ToneEvent),SleepSubstages{1}), -15000,+15000,'BinSize',50,'MarkerTypes',{'ro','r'});
load('SleepSubstages.mat')
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ts(ToneEvent),Epoch{1}), -15000,+15000,'BinSize',50,'MarkerTypes',{'ro','r'});
S{excited_neurons(1)};
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ts(ToneEvent),Epoch{2}), -15000,+15000,'BinSize',50,'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(10)}, Restrict(ts(ToneEvent),Epoch{2}), -15000,+15000,'BinSize',50,'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(20)}, Restrict(ts(ToneEvent),Epoch{2}), -15000,+15000,'BinSize',50,'MarkerTypes',{'ro','r'});
Range(ToneEvent);
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(20)}, Restrict(ToneEvent,Epoch{2}), -15000,+15000,'BinSize',50,'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{2}), -15000,+15000,'BinSize',50,'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{1}), -15000,+15000,'BinSize',50,'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{3}), -15000,+15000,'BinSize',50,'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{4}), -15000,+15000,'BinSize',50,'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{5}), -15000,+15000,'BinSize',50,'MarkerTypes',{'ro','r'});
load('DeltaWaves.mat', 'deltas_PFCx')
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{3}), -15000,+15000,'BinSize',50,,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{3}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{2}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{1}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{4}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{2}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
clear
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
%get data for each record
p=2;
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
%% init
%params
binsize_met = 2;
nbBins_met  = 400;
binsize_mua = 2;
minDuration = 40;
intv_success_down = 1000; %100ms
intv_success_up = 500; %50ms
%tone impact
load('NeuronTones', 'Ctones', 'xtones', 'Csham', 'xsham', 'NumNeurons', 'neuronsLayers')
%neuron info
load('InfoNeuronsPFCx.mat', 'MatInfoNeurons', 'InfoNeurons')
%tones
load('DeltaSleepEvent.mat', 'TONEtime2')
tones_tmp = TONEtime2 + Dir.delay{p}*1E4;
ToneEvent = ts(tones_tmp);
%substages
load('SleepScoring_OBGamma.mat', 'SWSEpoch')
load('SleepSubstages.mat')
%% responding neurons
Cdiff = Ctones.out - Csham;
Ct_std = std(Ctones.out,[],2);
idt = xtones.out>0 & xtones.out<100;
for i=1:length(neuronsLayers)
effect_peak(i,1) = max(Cdiff(i,idt));
effect_mean(i,1) = mean(Cdiff(i,idt));
t_peak(i,1) = max(Ctones.out(i,idt));
t_mean(i,1) = mean(Ctones.out(i,idt));
end
idn_excit = effect_peak>4 & t_peak>3*Ct_std;
idn_inhib = effect_mean<-1 & t_mean <-1;
idn_neutral = (effect_mean>-0.5 & effect_peak<3.5) | (t_mean>0 & t_peak<3*Ct_std);
responses = nan(length(NumNeurons),1);
responses(idn_excit) = 1;
responses(idn_inhib) = -1;
responses(idn_neutral) = 0;
excited_neurons = NumNeurons(responses==1);
neutral_neurons = NumNeurons(responses==0);
inhibit_neurons = NumNeurons(responses==-1);
%% MUA
%MUA
MUA  = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua);
%Down
down_PFCx = FindDownKJ(MUA, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
%% Tones
ToneNREM = Restrict(ToneEvent, SWSEpoch);
ToneDown = Restrict(ToneNREM, down_PFCx);
ToneUp   = Restrict(ToneNREM, up_PFCx);
% Down to Up ?
intv_post_tones = [Range(ToneDown) Range(ToneDown)+intv_success_up];
[~,intervals,~] = InIntervals(st_up, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneDownUp = subset(ToneDown, intervals);
ToneDownDown = subset(ToneDown, setdiff(1:length(ToneDown), intervals));
% Up to Down ?
intv_post_tones = [Range(ToneUp) Range(ToneUp)+intv_success_down];
[~,intervals,~] = InIntervals(st_down, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneUpDown = subset(ToneUp, intervals);
ToneUpUp = subset(ToneUp, setdiff(1:length(ToneUp), intervals));
load('SpikeData.mat', 'S');
load('DeltaWaves.mat', 'deltas_PFCx')
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{2}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{5}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(1)}, Restrict(ToneEvent,Epoch{3}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(2)}, Restrict(ToneEvent,Epoch{3}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(2)}, Restrict(ToneEvent,Epoch{5}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(2)}, Restrict(ToneEvent,Epoch{2}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(2)}, Restrict(ToneEvent,Epoch{2}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx),'s')},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(2)}, Restrict(ToneEvent,Epoch{2}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx,'s'))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(2)}, Restrict(ToneEvent,Epoch{3}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(2)}, Restrict(ToneEvent,Epoch{2}), -15000,+95000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx,'s'))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(2)}, Restrict(ToneEvent,Epoch{2}), -15000,+95000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(2)}, Restrict(ToneEvent,Epoch{1}), -15000,+95000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(2)}, Restrict(ToneEvent,Epoch{1}), -95000,+95000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(2)}, Restrict(ToneEvent,Epoch{3}), -95000,+95000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
a=a+1; figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(a)}, Restrict(ToneEvent,Epoch{3}), -95000,+95000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
a=3;
a=a+1; figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(a)}, Restrict(ToneEvent,Epoch{3}), -95000,+95000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
a=a+1; figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(a)}, Restrict(ToneEvent,Epoch{3}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
a=a-2;
a=a+1; figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(a)}, Restrict(ToneEvent,Epoch{3}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(a)}, Restrict(ToneEvent,Epoch{3}), -15000,+15000,'BinSize',50,'Markers',{ts(End(deltas_PFCx))},'MarkerTypes',{'ro','r'});
a=a+1;figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(a)}, Restrict(ToneEvent,Epoch{3}), -15000,+15000,'BinSize',50,'Markers',{ts(End(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(a)}, Restrict(ToneEvent,Epoch{1}), -15000,+15000,'BinSize',50,'Markers',{ts(End(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(a)}, Restrict(ToneEvent,Epoch{2}), -15000,+15000,'BinSize',50,'Markers',{ts(End(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(a)}, Restrict(ToneEvent,Epoch{4}), -15000,+15000,'BinSize',50,'Markers',{ts(End(deltas_PFCx))},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(a)}, Restrict(ToneEvent,Epoch{5}), -15000,+15000,'BinSize',50,'Markers',{ts(End(deltas_PFCx))},'MarkerTypes',{'ro','r'});
a=a+1; figure, [fh,sq,sweeps] = RasterPETH(S{excited_neurons(a)}, Restrict(ToneEvent,Epoch{3}), -15000,+15000,'BinSize',50,'Markers',{ts(Start(deltas_PFCx))},'MarkerTypes',{'ro','r'});
help mjPETH
[A,B,C]=mjPETH(Range(S{excited_neurons(a)}),Range(Restrict(ToneEvent,Epoch{3})),Start(deltas_PFCx)),100,100,0.5,1);
[A,B,C]=mjPETH(Range(S{excited_neurons(a)}),Range(Restrict(ToneEvent,Epoch{3})),Start(deltas_PFCx),100,100,0.5,1);
[A,B,C]=mjPETH(Range(S{excited_neurons(1)}),Range(Restrict(ToneEvent,Epoch{3})),Start(deltas_PFCx),100,100,0.5,1);
a=1;
a=a+1;[A,B,C]=mjPETH(Range(S{excited_neurons(a)}),Range(Restrict(ToneEvent,Epoch{3})),Start(deltas_PFCx),100,100,0.5,1);
a=a+1;[A,B,C]=mjPETH(Range(S{excited_neurons(a)}),Range(Restrict(ToneEvent,Epoch{3})),Start(deltas_PFCx),10,200,0.5,1);
a=a;[A,B,C]=mjPETH(Start(deltas_PFCx),Range(S{excited_neurons(a)}),Range(Restrict(ToneEvent,Epoch{3})),10,200,0.5,1);
a=a;[A,B,C]=mjPETH(Start(deltas_PFCx),Range(S{a}),Range(Restrict(ToneEvent,Epoch{3})),10,200,0.5,1);
a=a+1;[A,B,C]=mjPETH(Start(deltas_PFCx),Range(S{a}),Range(Restrict(ToneEvent,Epoch{3})),10,200,0.5,1);
close all
a
a=a+1;[A,B,C]=mjPETH(Start(deltas_PFCx),Range(S{a}),Range(Restrict(ToneEvent,Epoch{3})),10,200,0.5,1);
a
a=a+1;[A,B,C]=mjPETH(Start(deltas_PFCx),Range(S{a}),Range(Restrict(ToneEvent,Epoch{3})),10,200,0.5,1);
edit mjPETH
a=39;
a=a+1;[A,B,C]=mjPETH(Start(deltas_PFCx),Range(S{a}),Range(Restrict(ToneEvent,Epoch{3})),10,200,0.5,1);
a=39;
a=a+1;[A,B,C]=mjPETH(Start(deltas_PFCx),Range(S{a}),Range(Restrict(ToneEvent,Epoch{3})),10,200,0.5,1);
a=39;
a=a+1;[A,B,C]=mjPETH(Start(deltas_PFCx),Range(S{a}),Range(Restrict(ToneEvent,Epoch{3})),10,200,0.5,1);
a=39;
a=a+1;[A,B,C]=mjPETH(Start(deltas_PFCx),Range(S{a}),Range(Restrict(ToneEvent,Epoch{3})),10,200,0.5,1);
a=39;
a=a+1;[A,B,C]=mjPETH(Start(deltas_PFCx),Range(Restrict(ToneEvent,Epoch{3})),Range(S{a}),10,200,0.5,1);
a=a+1;[A,B,C]=mjPETH(Range(S{a}),Start(deltas_PFCx),Range(Restrict(ToneEvent,Epoch{3})),10,200,0.5,1);
a=39;
a=a+1;[A,B,C]=mjPETH(Range(S{a}),Start(deltas_PFCx),Range(Restrict(ToneEvent,Epoch{3})),10,200,0.5,1);
[A,B,C]=mjPETH(Range(S{a}),Start(deltas_PFCx),Start(deltas_PFCx),10,200,0.5,1);
load('Ripples.mat')
[C,B]=CrossCorr(Range(S{a}),Start(deltas_PFCx),10,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],ylim,'color','r');
[C,B]=CrossCorr(Range(S{a}),Range(Restrict(ToneEvent,Epoch{3})),10,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],ylim,'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{3})),Range(S{a}),10,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],ylim,'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{3})),Ripples(:,2)*1E4,10,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],ylim,'color','r');
Ripples(1,:)
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{3})),Ripples(:,2),10,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],ylim,'color','r');
[C,B]=CrossCorr(Range(ToneEvent),Ripples(:,2),10,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],ylim,'color','r');
[C,B]=CrossCorr(Ripples(:,2),Range(S{a}),10,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],ylim,'color','r');
a=a+1; [C,B]=CrossCorr(Ripples(:,2),Range(S{a}),10,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],ylim,'color','r');
a=0;
[C,B]=CrossCorr(Ripples(:,2),Range(S{a}),10,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],ylim,'color','r');
a=a+1; [C,B]=CrossCorr(Ripples(:,2),Range(S{a}),10,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],ylim,'color','r');
a=a+1; [C,B]=CrossCorr(Range(ToneEvent),Range(S{a}),10,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],ylim,'color','r');
a=a+1; [C,B]=CrossCorr(Range(ToneEvent),Range(S{a}),20,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],ylim,'color','r');
a=a+1; [C,B]=CrossCorr(Range(ToneEvent),Range(S{a}),20,200); figure, plot(B/1E3,C,'k'), hold on, line([0 0 ],[0 ylim(2)],'color','r');
a=a+1; [C,B]=CrossCorr(Range(ToneEvent),Range(S{a}),20,200); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
a=a+1; [C,B]=CrossCorr(Range(ToneEvent),Ripples(:,1),20,200); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
length(Ripples)
a=a+1; [C,B]=CrossCorr(Range(ToneEvent),Ripples(:,1),20,200); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
a=a+1; [C,B]=CrossCorr(Start(deltas_PFCx),Ripples(:,1),20,200); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
a=a+1; [C,B]=CrossCorr(Start(deltas_PFCx),Ripples(:,1)*10,20,200); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
a=a+1; [C,B]=CrossCorr(Range(ToneEvent),Ripples(:,1)*10,20,200); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
a=a+1; [C,B]=CrossCorr(Range(ToneEvent),Ripples(:,1)*10,50,200); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{1})),Ripples(:,1)*10,50,200); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{2})),Ripples(:,1)*10,50,200); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{3})),Ripples(:,1)*10,50,200); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{3})),Ripples(:,1)*10,100,200); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{3})),Ripples(:,1)*10,200,200); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{3})),Ripples(:,1)*10,20,400); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{3})),Ripples(:,1)*10,100,400); figure, plot(B/1E3,C,'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{3})),Ripples(:,1)*10,100,400); figure, plot(B/1E3,SmoothDec(C,1),'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{4})),Ripples(:,1)*10,100,400); figure, plot(B/1E3,SmoothDec(C,1),'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,Epoch{5})),Ripples(:,1)*10,100,400); figure, plot(B/1E3,SmoothDec(C,1),'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
close all
[C,B]=CrossCorr(Range(Restrict(ToneEvent,or(Epoch{2},Epoch{3}))),Ripples(:,2)*10,100,400); figure, plot(B/1E3,SmoothDec(C,1),'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,or(Epoch{2},Epoch{3}))),Ripples(:,2)*10,100,400); figure, plot(B/1E3,SmoothDec(C,2),'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[C,B]=CrossCorr(Range(Restrict(ToneEvent,or(Epoch{2},Epoch{3}))),Ripples(:,2)*10,100,400); figure, plot(B/1E3,runmean(C,2),'k'), hold on, yl=ylim; line([0 0 ],[0 yl(2)],'color','r');
[M1,S1,t1]=AverageSpectrogram(StsdPfc,fPfc,ts(en(idc)),200,200,1,[],1);  title('End N3 - PFC')
[Sp,t,f]=LoadSpectrumML(16,pwd,'low');
SpPfc=Sp;
fPfc=f;
tPfc=t;
[M1,S1,t1]=AverageSpectrogram(StsdPfc,fPfc,ToneEvent,200,200,1,[],1);  title('Sound Hpc')
StsdPfc=tsd(tPfc*1E4,SpPfc);
[M1,S1,t1]=AverageSpectrogram(StsdPfc,fPfc,ToneEvent,200,200,1,[],1);  title('Sound Hpc')
[M1,S1,t1]=AverageSpectrogram(StsdPfc,fPfc,Restrict(ToneEvent,Epoch{3}),200,200,1,[],1);  title('Sound Hpc')
[M1,S1,t1]=AverageSpectrogram(StsdPfc,fPfc,Restrict(ToneEvent,Epoch{2}),200,200,1,[],1);  title('Sound Hpc')
[M1,S1,t1]=AverageSpectrogram(StsdPfc,fPfc,Restrict(ToneEvent,Epoch{1}),200,200,1,[],1);  title('Sound Hpc')
[M1,S1,t1]=AverageSpectrogram(StsdPfc,fPfc,Restrict(ToneEvent,Epoch{1}),200,20,1,[],1);  title('Sound Hpc')
[M1,S1,t1]=AverageSpectrogram(StsdPfc,fPfc,Restrict(ToneEvent,Epoch{1}),100,20,1,[],1);  title('Sound Hpc')
[M1,S1,t1]=AverageSpectrogram(StsdPfc,fPfc,Restrict(ToneEvent,Epoch{1}),150,20,1,[],1);  title('Sound Hpc')
[M1,S1,t1]=AverageSpectrogram(StsdPfc,fPfc,Restrict(ToneEvent,Epoch{1}),150,100,1,[],1);  title('Sound Hpc')
[M1,S1,t1]=AverageSpectrogram(StsdPfc,fPfc,Restrict(ToneEvent,Epoch{1}),200,100,1,[],1);  title('Sound Hpc')
[M1,S1,t1]=AverageSpectrogram(StsdPfc,fPfc,Restrict(ToneEvent,Epoch{5}),200,100,1,[],1);  title('Sound Hpc')
load('B_High_Spectrum.mat')
Stsd=tsd(Spectro{2}*1E4,Spectro{1});
RasterPlot(Restrict(S,Restrict(ToneEvent,subset(Epoch{5},1))));
RasterPlot(Restrict(S,Restrict(ts(ToneEvent),subset(Epoch{5},1))));
RasterPlot(Restrict(S,Restrict(subset(Epoch{5},1))));
RasterPlot(Restrict(S,subset(Epoch{5},1)));
RasterPlot(S);
S2=Restrict(S,Epoch{5});
Epoch
S2=Restrict(S{1},Epoch{5});
which -all Restrict
RasterPlot(Restrict(S,subset(Epoch{5},1)));
S2=Restrict(S,subset(Epoch{5},1));
for i=1:length(S)
S2{i}=Restrict(S{i},subset(Epoch{5},1));
end
clear S2
for i=1:length(S)
S2{i}=Restrict(S{i},subset(Epoch{5},1));
end
S2=tsdArraz(S2);
S2=tsdArray(S2);
RasterPlot(S2);
Epoc1=subset(Epoch{1},2);
Epoc=intervalSet(Start(Epoc1)-3E4,End(Epoc1)+3E4));
clear S2
for i=1:length(S)
S2{i}=Restrict(S{i},Epoc);
end
S2=tsdArray(S2);
RasterPlot(S2);
Epoc1=subset(Epoch{1},2);
Epoc=intervalSet(Start(Epoc1)-3E4,End(Epoc1)+3E4);
clear S2
for i=1:length(S)
S2{i}=Restrict(S{i},Epoc);
end
S2=tsdArray(S2);
RasterPlot(S2);
hold on
line([Start(Epoc)+3E4 Start(Epoc)+3E4],ylim,'color','r')
line([End(Epoc)-3E4 End(
line([End(Epoc)-3E4 End])
RasterPlot(S2);
hold on
line([Start(Epoc)+3E4 Start(Epoc)+3E4],ylim,'color','r')
line([End(Epoc)-3E4 End(Epoc)-3E4],ylim,'color','r')
a=2;
a=a+1;
Epoc1=subset(Epoch{1},a);
Epoc=intervalSet(Start(Epoc1)-3E4,End(Epoc1)+3E4);
clear S2
for i=1:length(S)
S2{i}=Restrict(S{i},Epoc);
end
S2=tsdArray(S2);
RasterPlot(S2);
figure, subplot(2,1,1), RasterPlot(S2);
[C,B]=CrossCorr(Range(S{a}),Start(Epoch{1}),100,100);
for a=1:length(S)
[C(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{1}),100,100);
end
clear C
for a=1:length(S)
[C(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{1}),100,100);
end
figure, plot(B/1E3,C)
figure, plot(B/1E3,zscore(C))
figure, plot(B/1E3,zscore(C')')
figure, plot(B/1E3,zscore(C))
figure, plot(B/1E3,zscore(C')')
hold on, plot(B/1E3,mean(zscore(C')'),'k','linewidth',2)
figure,imagesc(zscore(C')')
Cz=zscore(C')';[BE,id]=sort(mean(Cz(:,50:55)));
figure,imagesc(Cz(id,:))
Cz=zscore(C')';[BE,id]=sort(mean(Cz(50:55,:)));
size(Cz)
Cz=zscore(C')';[BE,id]=sort(mean(Cz(:,50:55),2));
figure,imagesc(Cz(id,:))
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{1}),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{2}),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{3}),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{4}),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{5}),100,100);
end
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{1}),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{2}),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{3}),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{4}),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{5}),100,100);
end
CzN1=zscore(CN1')';
CzN2=zscore(CN1')';
CzN3=zscore(CN1')';
CzRE=zscore(CN1')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(CzN1(idn1,:))
subplot(5,5,2), imagesc(CzN1(idn2,:))
subplot(5,5,3), imagesc(CzN1(idn3,:))
subplot(5,5,4), imagesc(CzN1(idre,:))
subplot(5,5,5), imagesc(CzN1(idwa,:))
subplot(5,5,6), imagesc(CzN2(idn1,:))
subplot(5,5,7), imagesc(CzN2(idn2,:))
subplot(5,5,8), imagesc(CzN2(idn3,:))
subplot(5,5,9), imagesc(CzN2(idre,:))
subplot(5,5,10), imagesc(CzN2(idwa,:))
subplot(5,5,11), imagesc(CzN3(idn1,:))
subplot(5,5,12), imagesc(CzN3(idn2,:))
subplot(5,5,13), imagesc(CzN3(idn3,:))
subplot(5,5,14), imagesc(CzN3(idre,:))
subplot(5,5,15), imagesc(CzN3(idwa,:))
subplot(5,5,16), imagesc(CzRE(idn1,:))
subplot(5,5,17), imagesc(CzRE(idn2,:))
subplot(5,5,18), imagesc(CzRE(idn3,:))
subplot(5,5,19), imagesc(CzRE(idre,:))
subplot(5,5,20), imagesc(CzRE(idwa,:))
subplot(5,5,21), imagesc(CzWA(idn1,:))
subplot(5,5,22), imagesc(CzWA(idn2,:))
subplot(5,5,23), imagesc(CzWA(idn3,:))
subplot(5,5,24), imagesc(CzWA(idre,:))
subplot(5,5,25), imagesc(CzNWA(idwa,:))
subplot(5,5,25), imagesc(CzWA(idwa,:))
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(CzN1(idn1,:))
subplot(5,5,2), imagesc(CzN1(idn2,:))
subplot(5,5,3), imagesc(CzN1(idn3,:))
subplot(5,5,4), imagesc(CzN1(idre,:))
subplot(5,5,5), imagesc(CzN1(idwa,:))
subplot(5,5,6), imagesc(CzN2(idn1,:))
subplot(5,5,7), imagesc(CzN2(idn2,:))
subplot(5,5,8), imagesc(CzN2(idn3,:))
subplot(5,5,9), imagesc(CzN2(idre,:))
subplot(5,5,10), imagesc(CzN2(idwa,:))
subplot(5,5,11), imagesc(CzN3(idn1,:))
subplot(5,5,12), imagesc(CzN3(idn2,:))
subplot(5,5,13), imagesc(CzN3(idn3,:))
subplot(5,5,14), imagesc(CzN3(idre,:))
subplot(5,5,15), imagesc(CzN3(idwa,:))
subplot(5,5,16), imagesc(CzRE(idn1,:))
subplot(5,5,17), imagesc(CzRE(idn2,:))
subplot(5,5,18), imagesc(CzRE(idn3,:))
subplot(5,5,19), imagesc(CzRE(idre,:))
subplot(5,5,20), imagesc(CzRE(idwa,:))
subplot(5,5,21), imagesc(CzWA(idn1,:))
subplot(5,5,22), imagesc(CzWA(idn2,:))
subplot(5,5,23), imagesc(CzWA(idn3,:))
subplot(5,5,24), imagesc(CzWA(idre,:))
subplot(5,5,25), imagesc(CzWA(idwa,:))
size(CN1,1)
figure,
subplot(5,5,1), imagesc(B/1E3, size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,2), imagesc(B/1E3, size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,3), imagesc(B/1E3, size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,4), imagesc(B/1E3, size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,5), imagesc(B/1E3, size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,6), imagesc(B/1E3, size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,7), imagesc(B/1E3, size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,8), imagesc(B/1E3, size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,9), imagesc(B/1E3, size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,10), imagesc(B/1E3, size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,11), imagesc(B/1E3, size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,12), imagesc(B/1E3, size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,13), imagesc(B/1E3, size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,14), imagesc(B/1E3, size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,15), imagesc(B/1E3, size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,16), imagesc(B/1E3, size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,17), imagesc(B/1E3, size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,18), imagesc(B/1E3, size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,19), imagesc(B/1E3, size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,20), imagesc(B/1E3, size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,21), imagesc(B/1E3, size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,22), imagesc(B/1E3, size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,23), imagesc(B/1E3, size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,24), imagesc(B/1E3, size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,25), imagesc(B/1E3, size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 42.5],'color',[0.8 0.8 0.8])
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 42.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 42.5],'color','k')
length(S)
load SpikeData
load SleepScoring_OBGamma
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{1}),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{2}),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{3}),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{4}),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{5}),100,100);
end
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
load('StateEpochSB.mat')
clear
load('StateEpochSB.mat')
load SpikeData
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{1}),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{2}),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{3}),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{4}),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{5}),100,100);
end
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{1}),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{2}),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{3}),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{4}),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{5}),100,100);
end
CN1=zeros(length(S),101);
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{1}),100,100);
end
load('NREMepochsML.mat')
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{1}),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{2}),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{3}),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{4}),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Epoch{5}),100,100);
end
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
load('NREMepochsML.mat', 'Epoch')
Epoch
Epoch{1}
[Wake,REM,N1,N2,N3]=RunSubstages;
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REMEpoch),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake}),100,100);
end
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REMEpoch),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
end
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
close all
edit ParcoursCohPlethy.m
edit ParcoursCreateData.m
edit ParcoursDown_KJ.m
edit PathForExperimentsBasalSleepSpike.m
edit PathForExperimentsBasalSleepRhythms.m
clear
Dir=PathForExperimentsBasalSleepRhythms;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
load SpikeData
[Wake,REM,N1,N2,N3]=RunSubstages;
try
N1;
S;
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REMEpoch),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
listMouse=[listMouse;listlocal];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
end
end
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150409/Breath-Mouse-243-244-09042015/Mouse244
load SpikeData
[Wake,REM,N1,N2,N3]=RunSubstages;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
listMouse=[];
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REMEpoch),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
listlocal(a)=p;
end
clear
close all
Dir=PathForExperimentsBasalSleepRhythms;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
load SpikeData
[Wake,REM,N1,N2,N3]=RunSubstages;
try
N1;
S;
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
listMouse=[listMouse;listlocal];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
catch
keyboard
end
end
clear
close all
Dir=PathForExperimentsBasalSleepRhythms;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
load SpikeData
[Wake,REM,N1,N2,N3]=RunSubstages;
try
N1;
S;
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
listMouse=[listMouse;listlocal];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
keyboard
end
end
return
dbquit
clear
close all
Dir=PathForExperimentsBasalSleepRhythms;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
load SpikeData
[Wake,REM,N1,N2,N3]=RunSubstages;
try
N1;
S;
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
listMouse=[listMouse;listlocal];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp('Problem  ',pwd])
disp(' ')
disp(' ')
end
end
Dir=PathForExperimentsBasalSleepRhythms;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
load SpikeData
[Wake,REM,N1,N2,N3]=RunSubstages;
try
N1;
S;
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
listMouse=[listMouse;listlocal];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
clear
load('SleepScoring_OBGamma.mat')
edit RunSubstages
edit FindNREMepochsML
edit FindSleepStageML
load('SleepSubstages.mat')
NameEpoch
clear
close all
Dir=PathForExperimentsBasalSleepRhythms;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
load SpikeData
load SleepSubstages
N1=Epoch{1};
N2=Epoch{2};
N3=Epoch{3};
REM=Epoch{4};
Wake=Epoch{5};
%[Wake,REM,N1,N2,N3]=RunSubstages;
try
N1;
S;
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
listMouse=[listMouse;listlocal];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
load SleepSubstages
N1=Epoch{1};
N2=Epoch{2};
N3=Epoch{3};
REM=Epoch{4};
Wake=Epoch{5};
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
listMouse=[listMouse;listlocal];
clear
close all
Dir=PathForExperimentsBasalSleepRhythms;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
load SpikeData
load SleepSubstages
N1=Epoch{1};
N2=Epoch{2};
N3=Epoch{3};
REM=Epoch{4};
Wake=Epoch{5};
%[Wake,REM,N1,N2,N3]=RunSubstages;
try
N1;
S;
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
close all
clear
Dir=PathForExperimentsBasalSleepRhythms;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
load SpikeData
load SleepSubstages
N1=Epoch{1};
N2=Epoch{2};
N3=Epoch{3};
REM=Epoch{4};
Wake=Epoch{5};
%[Wake,REM,N1,N2,N3]=RunSubstages;
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
figure, imagesc(CtRE)
figure, imagesc(zscore(CtRE))
figure, imagesc(zscore(CtRE')')
figure, imagesc(zscore(CtN1')')
figure, imagesc(zscore(CtN2')')
figure, imagesc(zscore(CtN3')')
figure, imagesc(zscore(CtWA')')
figure, imagesc(zscore(CWA')')
figure, imagesc(zscore(CRE')')
clear
close all
Dir=PathForExperimentsBasalSleepRhythms;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
load SpikeData
load SleepSubstages
N1=Epoch{1};
N2=Epoch{2};
N3=Epoch{3};
REM=Epoch{4};
Wake=Epoch{5};
%[Wake,REM,N1,N2,N3]=RunSubstages;
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
[CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),100,100);
[CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),100,100);
[CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),100,100);
[CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),100,100);
[CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),100,100);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
savetonesbehav
LoadPathMOBs
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
% Dir = CheckPathForExperiment_KJ(Dir);
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%tones
load('DeltaSleepEvent.mat', 'TONEtime2')
tones_tmp = TONEtime2 + Dir.delay{p}*1E4;
ToneEvent = ts(tones_tmp);
save behavResources.mat -append ToneEvent
end
%%AssignLayersToChannels_KJ
% 31.08.2018 KJ
%
%
% see
%   LinkNeuronsToLayers_KJ
%
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
% Dir = PathForExperimentsBasalSleepSpike;
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%     %% load clustering
%     load(fullfile(FolderDeltaDataKJ,'LFPonDownStatesLayer.mat'))
%
%     excluded_signals = [];
%     excluded_nights = [];
%
%     %feature extraction and clustering
%     meancurves = layer_res.down.meandown2;
%     nb_clusters = 5;
%     algo_clustering = 'manual';
%     method_features = 'adhoc';
%
%     [all_curves, night, X, clusterX, ~] = Clustering_Curves_KJ(meancurves, 'features',method_features,'algo_clustering',algo_clustering,'nb_clusters',nb_clusters, ...
%                                         'excluded_signals',excluded_signals, 'excluded_nights',excluded_nights);
%% LFP responses on down states
durations2   = [100 200] * 10;
binsize_met  = 5; %for mETAverage
nbBins_met   = 240; %for mETAverage
%LFP channels
try
load('ChannelsToAnalyse/PFCx_locations.mat','channels')
catch
channels = GetDifferentLocationStructure('PFCx');
save('ChannelsToAnalyse/PFCx_locations.mat','channels')
end
%LFP
Signals = cell(0); hemi_channel = cell(0);
load(fullfile(Dir.path{p}, 'LFPData', 'InfoLFP.mat'))
for ch=1:length(channels)
hemi_channel{ch} = InfoLFP.hemisphere(InfoLFP.channel==channels(ch));
hemi_channel{ch} = lower(hemi_channel{ch}(1));
load(['LFPData/LFP' num2str(channels(ch))], 'LFP')
Signals{ch} = LFP; clear LFP
end
%down
load('DownState.mat', 'down_PFCx')
start_down = Start(down_PFCx);
down_durations = End(down_PFCx) - Start(down_PFCx);
selected_down = start_down(down_durations>durations2(1) & down_durations<durations2(2));
for ch=1:length(channels)
[m,~,tps] = mETAverage(selected_down, Range(Signals{ch}), Data(Signals{ch}), binsize_met, nbBins_met);
meandown{ch}(:,1) = tps; meandown{ch}(:,2) = m;
end
%% Put new points in clusters
clusters = [];
%features
for ch=1:length(channels)
x = meandown{ch}(:,1);
y = meandown{ch}(:,2);
%postive deflection
if sum(y(x>0 & x<=150))>0
x1 = x>0 & x<=200;
x2 = x>150 & x<=350;
feat1 = max(y(x1));
feat2 = min(y(x2));
%negative deflection
else
x1 = x>0 & x<=250;
x2 = x>200 & x<=350;
feat1 = min(y(x1));
feat2 = max(y(x2));
end
% x and y on 2D space
xp = feat1;
yp = feat2;
% clustering
if yp>(0.8*xp-200)
clusters(ch) = 1;
elseif yp<=(0.8*xp-200) && yp>(0.8*xp-900)
clusters(ch) = 2;
elseif yp<=(0.8*xp-900) && yp>(0.8*xp-1600)
clusters(ch) = 3;
elseif yp<=(0.8*xp-1600) && yp>(0.7*xp-2140)
clusters(ch) = 4;
elseif yp<=(0.7*xp-2140)
clusters(ch) = 5;
end
end
%% save layers info
save('ChannelsToAnalyse/PFCx_clusters.mat','clusters')
end
clear
Dir=PathForExperimentsDeltaSleepSpikes('DeltaT0');
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
load SpikeData
load SleepSubstages
N1=Epoch{1};
N2=Epoch{2};
N3=Epoch{3};
REM=Epoch{4};
Wake=Epoch{5};
%[Wake,REM,N1,N2,N3]=RunSubstages;
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),100,100);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),100,100);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),100,100);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),100,100);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),100,100);
[CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),100,100);
[CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),100,100);
[CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),100,100);
[CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),100,100);
[CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),100,100);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,50:55),2));
[BE,idn2]=sort(mean(CzN2(:,50:55),2));
[BE,idn3]=sort(mean(CzN3(:,50:55),2));
[BE,idre]=sort(mean(CzRE(:,50:55),2));
[BE,idwa]=sort(mean(CzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzWA=zscore(CtWA')';
[BE,idtn1]=sort(mean(CtzN1(:,50:55),2));
[BE,idtn2]=sort(mean(CtzN2(:,50:55),2));
[BE,idtn3]=sort(mean(CtzN3(:,50:55),2));
[BE,idtre]=sort(mean(CtzRE(:,50:55),2));
[BE,idtwa]=sort(mean(CtzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
size(CtN1,1)
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzWA=zscore(CtWA')';
[BE,idtn1]=sort(mean(CtzN1(:,50:55),2));
[BE,idtn2]=sort(mean(CtzN2(:,50:55),2));
[BE,idtn3]=sort(mean(CtzN3(:,50:55),2));
[BE,idtre]=sort(mean(CtzRE(:,50:55),2));
[BE,idtwa]=sort(mean(CtzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
Dir
edit PathForExperimentsML.m
edit PathForExperimentsMLnew.m
Dir1=PathForExperimentsML('BASAL');
Dir2=PathForExperimentsMLnew('BASAL');
Dir = MergePathForExperiment(Dir1,Dir2);
clear
Dir1=PathForExperimentsML('BASAL');
Dir2=PathForExperimentsMLnew('BASAL');
Dir = MergePathForExperiment(Dir1,Dir2);
CCparam1=100;
CCparam2=1000;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
load SpikeData
load SleepSubstages
N1=Epoch{1};
N2=Epoch{2};
N3=Epoch{3};
REM=Epoch{4};
Wake=Epoch{5};
%[Wake,REM,N1,N2,N3]=RunSubstages;
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,CCparam2:CCparam2+10),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2:CCparam2+10),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2:CCparam2+10),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2:CCparam2+10),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2:CCparam2+10),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzWA=zscore(CtWA')';
[BE,idtn1]=sort(mean(CtzN1(:,50:55),2));
[BE,idtn2]=sort(mean(CtzN2(:,50:55),2));
[BE,idtn3]=sort(mean(CtzN3(:,50:55),2));
[BE,idtre]=sort(mean(CtzRE(:,50:55),2));
[BE,idtwa]=sort(mean(CtzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
CCparam1=100;
CCparam2=1000;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
try
load SleepSubstages
N1=Epoch{1};
N2=Epoch{2};
N3=Epoch{3};
REM=Epoch{4};
Wake=Epoch{5};
end
%[Wake,REM,N1,N2,N3]=RunSubstages;
load SpikeData
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,CCparam2:CCparam2+10),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2:CCparam2+10),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2:CCparam2+10),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2:CCparam2+10),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2:CCparam2+10),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzWA=zscore(CtWA')';
[BE,idtn1]=sort(mean(CtzN1(:,50:55),2));
[BE,idtn2]=sort(mean(CtzN2(:,50:55),2));
[BE,idtn3]=sort(mean(CtzN3(:,50:55),2));
[BE,idtre]=sort(mean(CtzRE(:,50:55),2));
[BE,idtwa]=sort(mean(CtzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
clear
close all
Dir=PathForExperimentsMLnew('BASALlongSleep');
Dir.path
Dir.path'
Dir=PathForExperimentsMLnew('BASALlongSleep');
CCparam1=100;
CCparam2=1000;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
% try
% load SleepSubstages
% N1=Epoch{1};
% N2=Epoch{2};
% N3=Epoch{3};
% REM=Epoch{4};
% Wake=Epoch{5};
% catch
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
load SpikeData
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,CCparam2:CCparam2+10),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2:CCparam2+10),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2:CCparam2+10),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2:CCparam2+10),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2:CCparam2+10),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzWA=zscore(CtWA')';
[BE,idtn1]=sort(mean(CtzN1(:,50:55),2));
[BE,idtn2]=sort(mean(CtzN2(:,50:55),2));
[BE,idtn3]=sort(mean(CtzN3(:,50:55),2));
[BE,idtre]=sort(mean(CtzRE(:,50:55),2));
[BE,idtwa]=sort(mean(CtzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,CCparam2:CCparam2+10),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2:CCparam2+10),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2:CCparam2+10),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2:CCparam2+10),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2:CCparam2+10),2));
size(CzN1)
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+10),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+10),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+10),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+10),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+10),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
limid=20;
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
limid=120;
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
clear
close all
Dir=PathForExperimentsMLnew('BASALlongSleep');
CCparam1=100;
CCparam2=300;
limid=20;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
% try
% load SleepSubstages
% N1=Epoch{1};
% N2=Epoch{2};
% N3=Epoch{3};
% REM=Epoch{4};
% Wake=Epoch{5};
% catch
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
load SpikeData
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzWA=zscore(CtWA')';
[BE,idtn1]=sort(mean(CtzN1(:,50:55),2));
[BE,idtn2]=sort(mean(CtzN2(:,50:55),2));
[BE,idtn3]=sort(mean(CtzN3(:,50:55),2));
[BE,idtre]=sort(mean(CtzRE(:,50:55),2));
[BE,idtwa]=sort(mean(CtzWA(:,50:55),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
size(CtN1,1)
figure, imagesc(CtzN1)
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idtn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idtn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idtn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idtwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idtn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idtn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idtn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idtwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idtn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idtn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idtn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idtwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
caxis
caxis([-4 4])
caxis([-3 3])
caxis([-4 4])
figure, imagesc(CtzN1)
caxis([-4 4])
figure, imagesc(B/1E3, 1:size(CtN1,1),CtzN1)
CCparam2/2
limid
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2:CCparam2/2+limid),2));
figure, imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtn1,:))
caxis([-4 4])
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
caxis([-4 4])
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2:CCparam2/2+50),2));
figure, imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtn1,:))
limid=0;
limid2=50;
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),CtzN1(idtwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idtn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idtn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idtn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),CtzN2(idtwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idtn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idtn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idtn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),CtzN3(idtwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idtn1,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idtn2,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idtn3,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),CtzWA(idtwa,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
caxis([-4 4])
figure
imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
caxis([-4 4])
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-20:CCparam2/2+limid),2));
imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k')
imagesc(B/1E3, 1:size(CtN1,1),CtzRE(idtre,:)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
caxis([-3 3])
imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2))
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-4 4])
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=50;
limid2=0;
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
caxis([-2 2])
CtzN1e=zscore(CtN1e')';
CtzN2e=zscore(CtN2e')';
CtzN3e=zscore(CtN3e')';
CtzREe=zscore(CtREe')';
CtzWAe=zscore(CtWAe')';
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=0;
limid2=50;
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
close all
limid=0;
limid2=50;
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=0;
limid2=30;
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
help runmean
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
help CrossCorr
close all
clear
Dir=PathForExperimentsMLnew('BASALlongSleep');
CCparam1=100;
CCparam2=300;
limid=0;
limid2=50;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
% try
% load SleepSubstages
% N1=Epoch{1};
% N2=Epoch{2};
% N3=Epoch{3};
% REM=Epoch{4};
% Wake=Epoch{5};
% catch
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
load SpikeData
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
%
% for a=1:length(S)
% [CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
% [CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
% [CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
% [CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
% [CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
% [CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
% [CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
% [CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
% [CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
% [CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
% listlocal(a)=p;
% end
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzWA=zscore(CtWA')';
CtzN1e=zscore(CtN1e')';
CtzN2e=zscore(CtN2e')';
CtzN3e=zscore(CtN3e')';
CtzREe=zscore(CtREe')';
CtzWAe=zscore(CtWAe')';
% [BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtre]=sort(mean(CtzRE(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
[temp,B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[Wake,REM,N1,N2,N3]=RunSubstages;
load SpikeData
[temp,B]=CrossCorr(Start(N1),Range(S{1}),CCparam1,CCparam2);
figure, plot(B/1E3,C,'k')
figure, plot(B/1E3,TEMP,'k')
figure, plot(B/1E3,temp,'k')
[temp,B]=CrossCorr(Start(N1),Range(PoolNeurons(S,1:10)),CCparam1,CCparam2);
figure, plot(B/1E3,temp,'k')
[temp,B]=CrossCorr(Start(N1),Range(PoolNeurons(S,1:10)),CCparam1,CCparam2);
figure, plot(B/1E3,temp,'k')
[temp,B]=CrossCorr(Start(N1),Range(PoolNeurons(S,1:20)),CCparam1,CCparam2);
figure, plot(B/1E3,temp,'k')
[temp,B]=CrossCorr(Range(PoolNeurons(S,1:20)),Start(N1),CCparam1,CCparam2);
figure, plot(B/1E3,temp,'k')
[temp,B]=CrossCorr(Start(N1),Range(PoolNeurons(S,2)),CCparam1,CCparam2);
figure, plot(B/1E3,temp,'k')
[temp,B]=CrossCorr(Start(N1),Range(PoolNeurons(S,2)),100,100);
figure, plot(B/1E3,temp,'k')
[temp,B]=CrossCorr(Start(N1),Range(PoolNeurons(S,2)),100,100);
figure, plot(B/1E3,temp,'k')
S
[temp,B]=CrossCorr(Start(N1),Range(PoolNeurons(S,1:46)),100,100);
figure, plot(B/1E3,temp,'k')
[temp,B]=CrossCorr(Start(REM),Range(PoolNeurons(S,1:46)),100,100);
figure, plot(B/1E3,temp,'k')
[temp,B]=CrossCorr(Start(REM),Range(PoolNeurons(S,1:46)),100,200);
figure, plot(B/1E3,temp,'k')
[temp,B]=CrossCorr(Start(REM),Range(PoolNeurons(S,1:46)),200,200);
figure, plot(B/1E3,temp,'k')
figure, plot(B/1E3,runmean(temp,2),'k')
[temp,B]=CrossCorr(Start(REM),Range(PoolNeurons(S,1:46)),100,100);
figure, plot(B/1E3,runmean(temp,2),'k')
[temp,B]=CrossCorr(End(REM),Range(PoolNeurons(S,1:46)),100,100);
figure, plot(B/1E3,runmean(temp,2),'k')
[temp,B]=CrossCorr(End(REM),Range(PoolNeurons(S,1:46)),100,200);
figure, plot(B/1E3,runmean(temp,2),'k')
[temp,B]=CrossCorr(End(REM),Range(PoolNeurons(S,1:46))+5E4,100,200);
figure, plot(B/1E3,runmean(temp,2),'k')
[temp,B]=CrossCorr(Range(PoolNeurons(S,1:46)),End(REM),100,200);
figure, plot(B/1E3,runmean(temp,2),'k')
[temp,B]=CrossCorr(End(REM),Range(PoolNeurons(S,1:46))+5E4,100,200);
[temp,B]=CrossCorr(End(REM),Range(PoolNeurons(S,1:46)),100,200);
figure, plot(B/1E3,runmean(temp,2),'k')
clear
close all
Dir=PathForExperimentsMLnew('BASALlongSleep');
CCparam1=100;
CCparam2=300;
limid=30;
limid2=0;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
% try
% load SleepSubstages
% N1=Epoch{1};
% N2=Epoch{2};
% N3=Epoch{3};
% REM=Epoch{4};
% Wake=Epoch{5};
% catch
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
load SpikeData
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
%
% for a=1:length(S)
% [CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
% [CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
% [CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
% [CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
% [CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
% [CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
% [CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
% [CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
% [CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
% [CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
% listlocal(a)=p;
% end
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzWA=zscore(CtWA')';
CtzN1e=zscore(CtN1e')';
CtzN2e=zscore(CtN2e')';
CtzN3e=zscore(CtN3e')';
CtzREe=zscore(CtREe')';
CtzWAe=zscore(CtWAe')';
% [BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtre]=sort(mean(CtzRE(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
close all
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
close all
limid=30;
limid2=0;
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=0;
limid2=30;
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure
imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure
imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
edit RunSubstages
clear
close all
Dir=PathForExperimentsMLnew('BASALlongSleep');
CCparam1=100;
CCparam2=300;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
% try
% load SleepSubstages
% N1=Epoch{1};
% N2=Epoch{2};
% N3=Epoch{3};
% REM=Epoch{4};
% Wake=Epoch{5};
% catch
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
REM2=dropShortIntervals(REM,20E4);
load SpikeData
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
%
% for a=1:length(S)
% [CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
% [CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
% [CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
% [CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
% [CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
% [CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
% [CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
% [CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
% [CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
% [CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
% listlocal(a)=p;
% end
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2(a,:),B]=CrossCorr(Start(REM2),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2e(a,:),B]=CrossCorr(End(REM2),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtRE2=[CtRE2;CRE2];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtRE2e=[CtRE2e;CRE2e];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzWA=zscore(CtWA')';
CtzN1e=zscore(CtN1e')';
CtzN2e=zscore(CtN2e')';
CtzN3e=zscore(CtN3e')';
CtzREe=zscore(CtREe')';
CtzWAe=zscore(CtWAe')';
% [BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtre]=sort(mean(CtzRE(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2:CCparam2/2+limid),2));
limid=30;
limid2=0;
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=0;
limid2=30;
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
clear
close all
Dir=PathForExperimentsMLnew('BASALlongSleep');
CCparam1=100;
CCparam2=300;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtRE2=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtRE2e=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
% try
% load SleepSubstages
% N1=Epoch{1};
% N2=Epoch{2};
% N3=Epoch{3};
% REM=Epoch{4};
% Wake=Epoch{5};
% catch
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
REM2=dropShortIntervals(REM,20E4);
load SpikeData
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
%
% for a=1:length(S)
% [CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
% [CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
% [CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
% [CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
% [CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
% [CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
% [CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
% [CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
% [CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
% [CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
% listlocal(a)=p;
% end
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2(a,:),B]=CrossCorr(Start(REM2),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2e(a,:),B]=CrossCorr(End(REM2),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtRE2=[CtRE2;CRE2];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtRE2e=[CtRE2e;CRE2e];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzWA=zscore(CtWA')';
CtzN1e=zscore(CtN1e')';
CtzN2e=zscore(CtN2e')';
CtzN3e=zscore(CtN3e')';
CtzREe=zscore(CtREe')';
CtzWAe=zscore(CtWAe')';
% [BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtre]=sort(mean(CtzRE(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2:CCparam2/2+limid),2));
limid=30;
limid2=0;
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=0;
limid2=30;
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
REM2=dropShortIntervals(REM,20E4);
load SpikeData
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2(a,:),B]=CrossCorr(Start(REM2),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2e(a,:),B]=CrossCorr(End(REM2),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtRE2=[CtRE2;CRE2];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtRE2e=[CtRE2e;CRE2e];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
limid=30;
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
Dir=PathForExperimentsMLnew('BASALlongSleep');
CCparam1=100;
CCparam2=300;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtRE2=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtRE2e=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
% try
% load SleepSubstages
% N1=Epoch{1};
% N2=Epoch{2};
% N3=Epoch{3};
% REM=Epoch{4};
% Wake=Epoch{5};
% catch
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
REM2=dropShortIntervals(REM,20E4);
load SpikeData
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CWA
%
% for a=1:length(S)
% [CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
% [CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
% [CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
% [CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
% [CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
% [CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
% [CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
% [CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
% [CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
% [CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
% listlocal(a)=p;
% end
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2(a,:),B]=CrossCorr(Start(REM2),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2e(a,:),B]=CrossCorr(End(REM2),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtRE2=[CtRE2;CRE2];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtRE2e=[CtRE2e;CRE2e];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
limid=30;
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzWA=zscore(CtWA')';
CtzN1e=zscore(CtN1e')';
CtzN2e=zscore(CtN2e')';
CtzN3e=zscore(CtN3e')';
CtzREe=zscore(CtREe')';
CtzWAe=zscore(CtWAe')';
% [BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtre]=sort(mean(CtzRE(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2:CCparam2/2+limid),2));
limid=30;
limid2=0;
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=0;
limid2=30;
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
[BE,idtre2e]=sort(mean(CtzRE2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
CtzRE2=zscore(CtRE2')';
CtzRE2e=zscore(CtRE2e')';
[BE,idtre2e]=sort(mean(CtzRE2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
figure, imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE2e(idtre2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
[BE,idtre2]=sort(mean(CtzRE2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
figure, imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE2(idtre2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=30;
limid2=0;
[BE,idtre2]=sort(mean(CtzRE2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
figure, imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE2(idtre2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
saveFigure(82,'FigureEnd','/home/mobsjunior/Dropbox/Kteam')
saveFigure(81,'FigureStart','/home/mobsjunior/Dropbox/Kteam')
figure, plot(B/1E3, ,mean(CtzRE2),'k')
figure, plot(B/1E3, mean(CtzRE2),'k')
figure, plot(B/1E3, runmean(mean(CtzRE2),2),'k')
hold on, plot(B/1E3, runmean(mean(CtzRE),2),'r')
figure,
subplot(2,1,1), hold on,
plot(B/1E3, runmean(mean(CtzRE2),2),'r')
plot(B/1E3, runmean(mean(CtzRE),2),'k')
subplot(2,1,2), hold on,
plot(B/1E3, runmean(mean(CtzRE2e),2),'r')
plot(B/1E3, runmean(mean(CtzREe),2),'k')
figure,
subplot(2,5,1), hold on,
plot(B/1E3, runmean(mean(CtzN1),2),'k')
subplot(2,5,6), hold on,
plot(B/1E3, runmean(mean(CtzN1e),2),'k')
subplot(2,5,2), hold on,
plot(B/1E3, runmean(mean(CtzN2),2),'k')
subplot(2,5,7), hold on,
plot(B/1E3, runmean(mean(CtzN2e),2),'k')
subplot(2,5,3), hold on,
plot(B/1E3, runmean(mean(CtzN3),2),'k')
subplot(2,5,8), hold on,
plot(B/1E3, runmean(mean(CtzN3e),2),'k')
subplot(2,5,4), hold on,
plot(B/1E3, runmean(mean(CtzRE2),2),'r')
plot(B/1E3, runmean(mean(CtzRE),2),'k')
subplot(2,5,9), hold on,
plot(B/1E3, runmean(mean(CtzRE2e),2),'r')
plot(B/1E3, runmean(mean(CtzREe),2),'k')
subplot(2,5,5), hold on,
plot(B/1E3, runmean(mean(CtzWA),2),'k')
subplot(2,5,10), hold on,
plot(B/1E3, runmean(mean(CtzWAe),2),'k')
figure,
subplot(2,5,1), hold on,
plot(B/1E3, runmean(mean(CtzN1),2),'k')
line([0 0],[-0.3 0.4],'color',[0.6 0.6 0.6])
ylim([-0.3 0.4])
xlim([-15 15])
subplot(2,5,6), hold on,
plot(B/1E3, runmean(mean(CtzN1e),2),'k')
line([0 0],[-0.3 0.4],'color',[0.6 0.6 0.6])
ylim([-0.3 0.4])
xlim([-15 15])
subplot(2,5,2), hold on,
plot(B/1E3, runmean(mean(CtzN2),2),'k')
line([0 0],[-0.3 0.4],'color',[0.6 0.6 0.6])
ylim([-0.3 0.4])
xlim([-15 15])
subplot(2,5,7), hold on,
plot(B/1E3, runmean(mean(CtzN2e),2),'k')
line([0 0],[-0.3 0.4],'color',[0.6 0.6 0.6])
ylim([-0.3 0.4])
xlim([-15 15])
subplot(2,5,3), hold on,
plot(B/1E3, runmean(mean(CtzN3),2),'k')
line([0 0],[-0.3 0.4],'color',[0.6 0.6 0.6])
ylim([-0.3 0.4])
xlim([-15 15])
subplot(2,5,8), hold on,
plot(B/1E3, runmean(mean(CtzN3e),2),'k')
line([0 0],[-0.3 0.4],'color',[0.6 0.6 0.6])
ylim([-0.3 0.4])
xlim([-15 15])
subplot(2,5,4), hold on,
plot(B/1E3, runmean(mean(CtzRE2),2),'r')
plot(B/1E3, runmean(mean(CtzRE),2),'k')
line([0 0],[-0.3 0.4],'color',[0.6 0.6 0.6])
ylim([-0.3 0.4])
xlim([-15 15])
subplot(2,5,9), hold on,
plot(B/1E3, runmean(mean(CtzRE2e),2),'r')
plot(B/1E3, runmean(mean(CtzREe),2),'k')
line([0 0],[-0.3 0.4],'color',[0.6 0.6 0.6])
ylim([-0.3 0.4])
xlim([-15 15])
subplot(2,5,5), hold on,
plot(B/1E3, runmean(mean(CtzWA),2),'k')
line([0 0],[-0.3 0.4],'color',[0.6 0.6 0.6])
ylim([-0.3 0.4])
xlim([-15 15])
subplot(2,5,10), hold on,
plot(B/1E3, runmean(mean(CtzWAe),2),'k')
line([0 0],[-0.3 0.4],'color',[0.6 0.6 0.6])
ylim([-0.3 0.4])
xlim([-15 15])
figure,
subplot(2,5,1), hold on,
plot(B/1E3, runmean(mean(CtzN1),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,6), hold on,
plot(B/1E3, runmean(mean(CtzN1e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,2), hold on,
plot(B/1E3, runmean(mean(CtzN2),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,7), hold on,
plot(B/1E3, runmean(mean(CtzN2e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,3), hold on,
plot(B/1E3, runmean(mean(CtzN3),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,8), hold on,
plot(B/1E3, runmean(mean(CtzN3e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,4), hold on,
plot(B/1E3, runmean(mean(CtzRE2),2),'r')
plot(B/1E3, runmean(mean(CtzRE),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,9), hold on,
plot(B/1E3, runmean(mean(CtzRE2e),2),'r')
plot(B/1E3, runmean(mean(CtzREe),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,5), hold on,
plot(B/1E3, runmean(mean(CtzWA),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,10), hold on,
plot(B/1E3, runmean(mean(CtzWAe),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
titel('Start N1')
title('Start N1')
title('Start N2')
title('Start N3')
title('Start REM')
title('Start Wake')
title('End N1')
title('End N2')
title('End N3')
title('End REM')
title('End Wake')
saveFigure(91,'FiguresTransitions','/home/mobsjunior/Dropbox/Kteam')
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
close all
clear
%-- 31/08/2018 20:20:21 --%
LoadPathMOBs
Dir=PathForExperimentsMLnew('BASALlongSleep');
CCparam1=100;
CCparam2=300;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtRE2=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtRE2e=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
% try
% load SleepSubstages
% N1=Epoch{1};
% N2=Epoch{2};
% N3=Epoch{3};
% REM=Epoch{4};
% Wake=Epoch{5};
% catch
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
REM2=dropShortIntervals(REM,20E4);
load SpikeData
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CRE2
clear CWA
clear CN1e
clear CN2e
clear CN3e
clear CREe
clear CRE2e
clear CWAe
%
% for a=1:length(S)
% [CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
% [CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
% [CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
% [CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
% [CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
% [CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
% [CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
% [CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
% [CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
% [CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
% listlocal(a)=p;
% end
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2(a,:),B]=CrossCorr(Start(REM2),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2e(a,:),B]=CrossCorr(End(REM2),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtRE2=[CtRE2;CRE2];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtRE2e=[CtRE2e;CRE2e];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzWA=zscore(CWA')';
limid=30;
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzWA=zscore(CtWA')';
CtzN1e=zscore(CtN1e')';
CtzN2e=zscore(CtN2e')';
CtzN3e=zscore(CtN3e')';
CtzREe=zscore(CtREe')';
CtzWAe=zscore(CtWAe')';
% [BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtre]=sort(mean(CtzRE(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2:CCparam2/2+limid),2));
limid=30;
limid2=0;
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=0;
limid2=30;
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure,
subplot(2,5,1), hold on,
plot(B/1E3, runmean(mean(CtzN1),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,6), hold on,
plot(B/1E3, runmean(mean(CtzN1e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,2), hold on,
plot(B/1E3, runmean(mean(CtzN2),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,7), hold on,
plot(B/1E3, runmean(mean(CtzN2e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,3), hold on,
plot(B/1E3, runmean(mean(CtzN3),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,8), hold on,
plot(B/1E3, runmean(mean(CtzN3e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,4), hold on,
plot(B/1E3, runmean(mean(CtzRE2),2),'r')
plot(B/1E3, runmean(mean(CtzRE),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,9), hold on,
plot(B/1E3, runmean(mean(CtzRE2e),2),'r')
plot(B/1E3, runmean(mean(CtzREe),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,5), hold on,
plot(B/1E3, runmean(mean(CtzWA),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,10), hold on,
plot(B/1E3, runmean(mean(CtzWAe),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
% title('Start N1')
% title('Start N2')
% title('Start N3')
% title('Start REM')
% title('Start Wake')
% title('End N1')
% title('End N2')
% title('End N3')
% title('End REM')
% title('End Wake')
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzRE2=zscore(CtRE2')';
CtzWA=zscore(CtWA')';
CtzN1e=zscore(CtN1e')';
CtzN2e=zscore(CtN2e')';
CtzN3e=zscore(CtN3e')';
CtzREe=zscore(CtREe')';
CtzRE2e=zscore(CtRE2e')';
CtzWAe=zscore(CtWAe')';
limid=30;
limid2=0;
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=0;
limid2=30;
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure,
subplot(2,5,1), hold on,
plot(B/1E3, runmean(mean(CtzN1),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,6), hold on,
plot(B/1E3, runmean(mean(CtzN1e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,2), hold on,
plot(B/1E3, runmean(mean(CtzN2),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,7), hold on,
plot(B/1E3, runmean(mean(CtzN2e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,3), hold on,
plot(B/1E3, runmean(mean(CtzN3),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,8), hold on,
plot(B/1E3, runmean(mean(CtzN3e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,4), hold on,
plot(B/1E3, runmean(mean(CtzRE2),2),'r')
plot(B/1E3, runmean(mean(CtzRE),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,9), hold on,
plot(B/1E3, runmean(mean(CtzRE2e),2),'r')
plot(B/1E3, runmean(mean(CtzREe),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,5), hold on,
plot(B/1E3, runmean(mean(CtzWA),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,10), hold on,
plot(B/1E3, runmean(mean(CtzWAe),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
% title('Start N1')
% title('Start N2')
% title('Start N3')
% title('Start REM')
% title('Start Wake')
% title('End N1')
% title('End N2')
% title('End N3')
% title('End REM')
% title('End Wake')
saveFigure(85,'FigureStart','/home/mobsjunior/Dropbox/Kteam')
saveFigure(86,'FigureEnd','/home/mobsjunior/Dropbox/Kteam')
saveFigure(87,'FigureStartOrderAccordingToEnd','/home/mobsjunior/Dropbox/Kteam')
title('Start N1')
title('Start N2')
title('Start N3')
title('Start REM')
title('Start Wake')
title('End N1')
title('End N2')
title('End N3')
title('End REM')
title('End Wake')
saveFigure(88,'FiguresTransitions','/home/mobsjunior/Dropbox/Kteam')
cd /media/DataMOBsRAIDN/ProjetNREM/Mouse403/20160830
clear S
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
REM2=dropShortIntervals(REM,20E4);
load SpikeData
which -all SpikeData
clear S
load SpikeData
clear S
load SpikeData
tetrodeChannels
tetrodeChannels'
edit LoadPathMOBs
clear
clsoe all
close all
Dir=PathForExperimentsMLnew('BASALlongSleep');
CCparam1=100;
CCparam2=300;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtRE2=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtRE2e=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
% try
% load SleepSubstages
% N1=Epoch{1};
% N2=Epoch{2};
% N3=Epoch{3};
% REM=Epoch{4};
% Wake=Epoch{5};
% catch
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
REM2=dropShortIntervals(REM,20E4);
load SpikeData
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CRE2
clear CWA
clear CN1e
clear CN2e
clear CN3e
clear CREe
clear CRE2e
clear CWAe
%
% for a=1:length(S)
% [CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
% [CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
% [CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
% [CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
% [CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
% [CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
% [CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
% [CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
% [CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
% [CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
% listlocal(a)=p;
% end
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2(a,:),B]=CrossCorr(Start(REM2),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2e(a,:),B]=CrossCorr(End(REM2),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtRE2=[CtRE2;CRE2];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtRE2e=[CtRE2e;CRE2e];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzRE2=zscore(CRE2')';
CzWA=zscore(CWA')';
limid=30;
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzRE2=zscore(CtRE2')';
CtzWA=zscore(CtWA')';
CtzN1e=zscore(CtN1e')';
CtzN2e=zscore(CtN2e')';
CtzN3e=zscore(CtN3e')';
CtzREe=zscore(CtREe')';
CtzRE2e=zscore(CtRE2e')';
CtzWAe=zscore(CtWAe')';
% [BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtre]=sort(mean(CtzRE(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2:CCparam2/2+limid),2));
limid=30;
limid2=0;
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=0;
limid2=30;
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure,
subplot(2,5,1), hold on,
plot(B/1E3, runmean(mean(CtzN1),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,6), hold on,
plot(B/1E3, runmean(mean(CtzN1e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,2), hold on,
plot(B/1E3, runmean(mean(CtzN2),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,7), hold on,
plot(B/1E3, runmean(mean(CtzN2e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,3), hold on,
plot(B/1E3, runmean(mean(CtzN3),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,8), hold on,
plot(B/1E3, runmean(mean(CtzN3e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,4), hold on,
plot(B/1E3, runmean(mean(CtzRE2),2),'r')
plot(B/1E3, runmean(mean(CtzRE),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,9), hold on,
plot(B/1E3, runmean(mean(CtzRE2e),2),'r')
plot(B/1E3, runmean(mean(CtzREe),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,5), hold on,
plot(B/1E3, runmean(mean(CtzWA),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,10), hold on,
plot(B/1E3, runmean(mean(CtzWAe),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
% title('Start N1')
% title('Start N2')
% title('Start N3')
% title('Start REM')
% title('Start Wake')
% title('End N1')
% title('End N2')
% title('End N3')
% title('End REM')
% title('End Wake')
try
load SpikeData
end
clear
close all
Dir=PathForExperimentsMLnew('BASALlongSleep');
CCparam1=100;
CCparam2=300;
k=1;
CtN1=[];
CtN2=[];
CtN3=[];
CtRE=[];
CtRE2=[];
CtWA=[];
CtN1e=[];
CtN2e=[];
CtN3e=[];
CtREe=[];
CtRE2e=[];
CtWAe=[];
listMouse=[];
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clear S
clear N1
% try
% load SleepSubstages
% N1=Epoch{1};
% N2=Epoch{2};
% N3=Epoch{3};
% REM=Epoch{4};
% Wake=Epoch{5};
% catch
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
REM2=dropShortIntervals(REM,20E4);
try
load SpikeData
end
try
N1;
S;
clear CN1
clear CN2
clear CN3
clear CRE
clear CRE2
clear CWA
clear CN1e
clear CN2e
clear CN3e
clear CREe
clear CRE2e
clear CWAe
%
% for a=1:length(S)
% [CN1(a,:),B]=CrossCorr(Range(S{a}),Start(N1),CCparam1,CCparam2);
% [CN2(a,:),B]=CrossCorr(Range(S{a}),Start(N2),CCparam1,CCparam2);
% [CN3(a,:),B]=CrossCorr(Range(S{a}),Start(N3),CCparam1,CCparam2);
% [CRE(a,:),B]=CrossCorr(Range(S{a}),Start(REM),CCparam1,CCparam2);
% [CWA(a,:),B]=CrossCorr(Range(S{a}),Start(Wake),CCparam1,CCparam2);
% [CN1e(a,:),B]=CrossCorr(Range(S{a}),End(N1),CCparam1,CCparam2);
% [CN2e(a,:),B]=CrossCorr(Range(S{a}),End(N2),CCparam1,CCparam2);
% [CN3e(a,:),B]=CrossCorr(Range(S{a}),End(N3),CCparam1,CCparam2);
% [CREe(a,:),B]=CrossCorr(Range(S{a}),End(REM),CCparam1,CCparam2);
% [CWAe(a,:),B]=CrossCorr(Range(S{a}),End(Wake),CCparam1,CCparam2);
% listlocal(a)=p;
% end
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2(a,:),B]=CrossCorr(Start(REM2),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2e(a,:),B]=CrossCorr(End(REM2),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CtN1=[CtN1;CN1];
CtN2=[CtN2;CN2];
CtN3=[CtN3;CN3];
CtRE=[CtRE;CRE];
CtRE2=[CtRE2;CRE2];
CtWA=[CtWA;CWA];
CtN1e=[CtN1e;CN1e];
CtN2e=[CtN2e;CN2e];
CtN3e=[CtN3e;CN3e];
CtREe=[CtREe;CREe];
CtRE2e=[CtRE2e;CRE2e];
CtWAe=[CtWAe;CWAe];
listMouse=[listMouse;listlocal'];
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzRE2=zscore(CRE2')';
CzWA=zscore(CWA')';
limid=30;
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
pause(0)
catch
disp(' ')
disp(' ')
disp(['Problem  ',pwd])
disp(' ')
disp(' ')
end
end
CtzN1=zscore(CtN1')';
CtzN2=zscore(CtN2')';
CtzN3=zscore(CtN3')';
CtzRE=zscore(CtRE')';
CtzRE2=zscore(CtRE2')';
CtzWA=zscore(CtWA')';
CtzN1e=zscore(CtN1e')';
CtzN2e=zscore(CtN2e')';
CtzN3e=zscore(CtN3e')';
CtzREe=zscore(CtREe')';
CtzRE2e=zscore(CtRE2e')';
CtzWAe=zscore(CtWAe')';
% [BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtre]=sort(mean(CtzRE(:,CCparam2/2:CCparam2/2+limid),2));
% [BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2:CCparam2/2+limid),2));
limid=30;
limid2=0;
[BE,idtn1]=sort(mean(CtzN1(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2]=sort(mean(CtzN2(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3]=sort(mean(CtzN3(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtre]=sort(mean(CtzRE(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwa]=sort(mean(CtzWA(:,CCparam2/2-limid2:CCparam2/2+limid),2));
ca=3;
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=0;
limid2=30;
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure,
subplot(2,5,1), hold on,
plot(B/1E3, runmean(mean(CtzN1),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,6), hold on,
plot(B/1E3, runmean(mean(CtzN1e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,2), hold on,
plot(B/1E3, runmean(mean(CtzN2),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,7), hold on,
plot(B/1E3, runmean(mean(CtzN2e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,3), hold on,
plot(B/1E3, runmean(mean(CtzN3),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,8), hold on,
plot(B/1E3, runmean(mean(CtzN3e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,4), hold on,
plot(B/1E3, runmean(mean(CtzRE2),2),'r')
plot(B/1E3, runmean(mean(CtzRE),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,9), hold on,
plot(B/1E3, runmean(mean(CtzRE2e),2),'r')
plot(B/1E3, runmean(mean(CtzREe),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,5), hold on,
plot(B/1E3, runmean(mean(CtzWA),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,10), hold on,
plot(B/1E3, runmean(mean(CtzWAe),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
% title('Start N1')
% title('Start N2')
% title('Start N3')
% title('Start REM')
% title('Start Wake')
% title('End N1')
% title('End N2')
% title('End N3')
% title('End REM')
% title('End Wake')
help GetSpikesFromStructure
edit GetSpikesFromStructure
numNeurons=GetSpikesFromStructure('PFCx');
length(S)
S
S=S(1:10);
S
load SpikeData
S
numNeurons=GetSpikesFromStructure('PFCx');
TT'
TT{46}
numNeurons2=GetSpikesFromStructure('Hpc');
help GetSpikesFromStructure
edit GetSpikesFromStructure
numNeurons2=GetSpikesFromStructure('dHpc');
numNeurons
numNeurons2
TT{1}
TT{2}
TT{10}
TT{46}
cellnames{46}
cellnames{36}
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice251-252/20150519/Breath-Mouse-251-252-19052015/Mouse252/LFPData/InfoLFP.mat')
InfoLFP
InfoLFP.structure'
cellnames{46}
cellnames{45}
cellnames{40}
clear
[Wake,REM,N1,N2,N3]=RunSubstages;
% end
REM2=dropShortIntervals(REM,20E4);
load SpikeData
clear CN1
clear CN2
clear CN3
clear CRE
clear CRE2
clear CWA
clear CN1e
clear CN2e
clear CN3e
clear CREe
clear CRE2e
clear CWAe
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2(a,:),B]=CrossCorr(Start(REM2),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2e(a,:),B]=CrossCorr(End(REM2),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
p=1;
CCparam1=100;
CCparam2=300;
% end
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2(a,:),B]=CrossCorr(Start(REM2),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2e(a,:),B]=CrossCorr(End(REM2),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzRE2=zscore(CRE2')';
CzWA=zscore(CWA')';
limid=30;
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
idn1
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice251-252/20150519/Breath-Mouse-251-252-19052015/Mouse252/LFPData/InfoLFP.mat')
InfoLFP.structure(40:46)'
cellnames{40:46}
cellnames(idn1(40:46))
load('MeanWaveform.mat')
figure, plot(W{idn1(46)})
CCparam1=100;
CCparam2=300;
num=idn1(46);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),100,100);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
figure,
subplot(2,2,1), plot(W{num},'k','linewidth',2)
subplot(2,2,2), plot(Bauto/1E3,Cauto,'k','linewidth',2)
subplot(2,2,3:4), plot(BN1spk/1E3,CN1spk,'k','linewidth',2)
CCparam1=100;
CCparam2=300;
num=idn1(46);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),10,100);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
figure,
subplot(2,2,1), plot(W{num},'k','linewidth',2)
subplot(2,2,2), plot(Bauto/1E3,Cauto,'k','linewidth',2)
subplot(2,2,3:4), plot(BN1spk/1E3,CN1spk,'k','linewidth',2)
CCparam1=100;
CCparam2=300;
num=idn1(46);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,100);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
figure,
subplot(2,2,1), plot(W{num},'k','linewidth',2)
subplot(2,2,2), plot(Bauto/1E3,Cauto,'k','linewidth',2)
subplot(2,2,3:4), plot(BN1spk/1E3,CN1spk,'k','linewidth',2)
CCparam1=100;
CCparam2=300;
num=idn1(46);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,30);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
figure,
subplot(2,2,1), plot(W{num},'k','linewidth',2)
subplot(2,2,2), plot(Bauto/1E3,Cauto,'k','linewidth',2)
subplot(2,2,3:4), plot(BN1spk/1E3,CN1spk,'k','linewidth',2)
figure, hold on
for num=idn1(40:46)
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,30);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), plot(W{num},'r','linewidth',2)
subplot(2,2,2), plot(Bauto/1E3,Cauto,'r','linewidth',1)
subplot(2,2,3:4), plot(BN1spk/1E3,CN1spk,'r','linewidth',2)
end
num
clear num
for num=idn1(40:46)
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,30);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), plot(W{num},'r','linewidth',2)
subplot(2,2,2), plot(Bauto/1E3,Cauto,'r','linewidth',1)
subplot(2,2,3:4), plot(BN1spk/1E3,CN1spk,'r','linewidth',2)
end
idn1(40:46)
figure, hold on
for num=idn1(40:46)'
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,30);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), plot(W{num},'r','linewidth',2)
subplot(2,2,2), plot(Bauto/1E3,Cauto,'r','linewidth',1)
subplot(2,2,3:4), plot(BN1spk/1E3,CN1spk,'r','linewidth',2)
end
figure, hold on
for num=idn1(40:46)'
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,30);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num},'r','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto,'r','linewidth',1)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk,'r','linewidth',2)
end
figure, hold on
for num=idn1(20:26)'
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,30);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num},'k','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto,'k','linewidth',1)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk,'k','linewidth',2)
end
figure, hold on
for num=idn1(20:26)'
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,30);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num},'k','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',1)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
figure
plot(W{num},'k','linewidth',2)
figure, hold on
for i=20:26
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num},'k','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',1)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
clear num
figure, hold on
for i=20:26
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num},'k','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',1)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
num
figure, plot(W{num},'k','linewidth',2)
figure, plot(W{num}','k','linewidth',2)
figure, hold on
for i=20:26
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','k','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',1)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
figure, hold on
% for i=20:26
for i=40:46
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','r','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto/max(Cauto),'r','linewidth',1)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk/max(CN1spk),'r','linewidth',2)
end
figure, hold on
% for i=20:26
for i=1:6
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','r','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto/max(Cauto),'r','linewidth',1)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk/max(CN1spk),'r','linewidth',2)
end
figure, hold on
% for i=20:26
for i=1:5
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','r','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto/max(Cauto),'r','linewidth',1)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk/max(CN1spk),'r','linewidth',2)
end
figure, hold on
% for i=20:26
for i=41:46
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','k','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',2)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
%-- 03/09/2018 11:55:37 --%
LoadPathMOBs
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice251-252/20150519/Breath-Mouse-251-252-19052015/Mouse252/
load('MeanWaveform.mat')
load SpikeData
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice251-252/20150519/Breath-Mouse-251-252-19052015/Mouse252/LFPData/InfoLFP.mat')
[Wake,REM,N1,N2,N3]=RunSubstages;
p=1;
CCparam1=100;
CCparam2=300;
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2(a,:),B]=CrossCorr(Start(REM2),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2e(a,:),B]=CrossCorr(End(REM2),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzRE2=zscore(CRE2')';
CzWA=zscore(CWA')';
limid=30;
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
REM2=dropShortIntervals(REM,20E4);
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2(a,:),B]=CrossCorr(Start(REM2),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2e(a,:),B]=CrossCorr(End(REM2),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzRE2=zscore(CRE2')';
CzWA=zscore(CWA')';
limid=30;
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
figure, hold on
% for i=20:26
for i=41:46
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','k','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',2)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
figure, hold on
% for i=20:26
for i=1:5
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','k','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',2)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
figure, hold on
% for i=20:26
for i=21:25
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','k','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',2)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
figure, hold on
% for i=20:26
for i=41:46
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(Wake),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','k','linewidth',2)
subplot(2,2,2), hold on, plot(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',2)
subplot(2,2,3:4), hold on, plot(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
clear
edit RunSubstages.m
TrucKarimSpikesTransitions
figure,
imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0
save MatFileForTrucKarimSpikesTransitions
figure,
imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2))
figure,
subplot(1,2,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)),
line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(1,2,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1,:),2,2)),
line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure,
subplot(1,2,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)),
line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(1,2,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1,:),2,2)),
line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
title('Start N1')
title('End N1')
xlim([-7 7])
xlim([-6 6])
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice251-252/20150519/Breath-Mouse-251-252-19052015/Mouse252/
[Wake,REM,N1,N2,N3]=RunSubstages;
REM2=dropShortIntervals(REM,20E4);
load('MeanWaveform.mat')
load SpikeData
p=1;
CCparam1=100;
CCparam2=300;
for a=1:length(S)
[CN1(a,:),B]=CrossCorr(Start(N1),Range(S{a}),CCparam1,CCparam2);
[CN2(a,:),B]=CrossCorr(Start(N2),Range(S{a}),CCparam1,CCparam2);
[CN3(a,:),B]=CrossCorr(Start(N3),Range(S{a}),CCparam1,CCparam2);
[CRE(a,:),B]=CrossCorr(Start(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2(a,:),B]=CrossCorr(Start(REM2),Range(S{a}),CCparam1,CCparam2);
[CWA(a,:),B]=CrossCorr(Start(Wake),Range(S{a}),CCparam1,CCparam2);
[CN1e(a,:),B]=CrossCorr(End(N1),Range(S{a}),CCparam1,CCparam2);
[CN2e(a,:),B]=CrossCorr(End(N2),Range(S{a}),CCparam1,CCparam2);
[CN3e(a,:),B]=CrossCorr(End(N3),Range(S{a}),CCparam1,CCparam2);
[CREe(a,:),B]=CrossCorr(End(REM),Range(S{a}),CCparam1,CCparam2);
[CRE2e(a,:),B]=CrossCorr(End(REM2),Range(S{a}),CCparam1,CCparam2);
[CWAe(a,:),B]=CrossCorr(End(Wake),Range(S{a}),CCparam1,CCparam2);
listlocal(a)=p;
end
CzN1=zscore(CN1')';
CzN2=zscore(CN2')';
CzN3=zscore(CN3')';
CzRE=zscore(CRE')';
CzRE2=zscore(CRE2')';
CzWA=zscore(CWA')';
limid=30;
[BE,idn1]=sort(mean(CzN1(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn2]=sort(mean(CzN2(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idn3]=sort(mean(CzN3(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idre]=sort(mean(CzRE(:,CCparam2/2:CCparam2/2+limid),2));
[BE,idwa]=sort(mean(CzWA(:,CCparam2/2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,2), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,3), imagesc(B/1E3, 1:size(CN1,1),CzN1(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k'), title(pwd)
subplot(5,5,4), imagesc(B/1E3, 1:size(CN1,1),CzN1(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,5), imagesc(B/1E3, 1:size(CN1,1),CzN1(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,6), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,7), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,8), imagesc(B/1E3, 1:size(CN1,1),CzN2(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,9), imagesc(B/1E3, 1:size(CN1,1),CzN2(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,10), imagesc(B/1E3, 1:size(CN1,1),CzN2(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,11), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,12), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,13), imagesc(B/1E3, 1:size(CN1,1),CzN3(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,14), imagesc(B/1E3, 1:size(CN1,1),CzN3(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,15), imagesc(B/1E3, 1:size(CN1,1),CzN3(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,16), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,17), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,18), imagesc(B/1E3, 1:size(CN1,1),CzRE(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,19), imagesc(B/1E3, 1:size(CN1,1),CzRE(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,20), imagesc(B/1E3, 1:size(CN1,1),CzRE(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,21), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn1,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,22), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn2,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,23), imagesc(B/1E3, 1:size(CN1,1),CzWA(idn3,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,24), imagesc(B/1E3, 1:size(CN1,1),CzWA(idre,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
subplot(5,5,25), imagesc(B/1E3, 1:size(CN1,1),CzWA(idwa,:)), line([0 0],[0.5 length(S)-0.5],'color','k')
figure, hold on
% for i=20:26
for i=21:25
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','k','linewidth',2)
subplot(2,2,2), hold on, stairs(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',2)
subplot(2,2,3:4), hold on, stairs(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
figure, hold on
% for i=20:26
for i=41:46
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(Wake),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','k','linewidth',2)
subplot(2,2,2), hold on, stairs(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',2)
subplot(2,2,3:4), hold on, stairs(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
figure, hold on
% for i=20:26
for i=1:5
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','k','linewidth',2)
subplot(2,2,2), hold on, stairs(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',2)
subplot(2,2,3:4), hold on, stairs(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
figure, hold on
% for i=20:26
for i=1:4
num=idn1(i);
[Cauto,Bauto]=CrossCorr(Range(S{num}),Range(S{num}),1,60);Cauto(Bauto==0)=0;
[CN1spk,BN1spk]=CrossCorr(Start(N1),Range(S{num}),CCparam1,CCparam2);
subplot(2,2,1), hold on, plot(W{num}','k','linewidth',2)
subplot(2,2,2), hold on, stairs(Bauto/1E3,Cauto/max(Cauto),'k','linewidth',2)
subplot(2,2,3:4), hold on, stairs(BN1spk/1E3,CN1spk/max(CN1spk),'k','linewidth',2)
end
saveFigure(41,'FiguresTransitionN1','/home/mobsjunior/Dropbox/Kteam')
saveFigure(40,'FiguresTransitionsPFCx','/home/mobsjunior/Dropbox/Kteam')
close all
clear
TrucKarimSpikesTransitions
ylim([-0.5 0.5])
ylim([-0.6 0.6])
ylim([-0.6 0.7])
ylim([-0.6 0.8])
ylim([-0.8 0.8])
ylim([-0.6 0.8])
ylim([-0.8 0.8])
line([0 0],[-0.8 0.8],'color',[0.6 0.6 0.6])
save MatFileForTrucKarimSpikesTransitionsNoPFCx
clear
TrucKarimSpikesTransitions
line([0 0],[-0.8 0.8],'color',[0.6 0.6 0.6])
ylim([-0.8 0.8])
ylim([-0.9 0.9])
ylim([-1 1])
ylim([-1.2 1.2])
line([0 0],[-1.2 1.2],'color',[0.6 0.6 0.6]), ylim([-1.2 1.2])
line([0 0],[-1.4 1.4],'color',[0.6 0.6 0.6]), ylim([-1.4 1.4])
save MatFileForTrucKarimSpikesTransitionsBulb
clear
load('MatFileForTrucKarimSpikesTransitions.mat')
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtre,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwa,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
limid=0;
limid2=30;
[BE,idtn1e]=sort(mean(CtzN1e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn2e]=sort(mean(CtzN2e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtn3e]=sort(mean(CtzN3e(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtree]=sort(mean(CtzREe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
[BE,idtwae]=sort(mean(CtzWAe(:,CCparam2/2-limid2:CCparam2/2+limid),2));
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3e(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzREe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWAe(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure,
subplot(5,5,1), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,2), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,3), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,4), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,5), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN1(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,6), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,7), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,8), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,9), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,10), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN2(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,11), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,12), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,13), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,14), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,15), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzN3(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,16), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,17), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,18), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,19), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,20), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzRE(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,21), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn1e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,22), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn2e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,23), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtn3e,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,24), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtree,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
subplot(5,5,25), imagesc(B/1E3, 1:size(CtN1,1),runmean(CtzWA(idtwae,:),2,2)), line([0 0],[0.5 size(CtN1,1)-0.5],'color','k'),caxis([-ca ca])
figure,
subplot(2,5,1), hold on,
plot(B/1E3, runmean(mean(CtzN1),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,6), hold on,
plot(B/1E3, runmean(mean(CtzN1e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,2), hold on,
plot(B/1E3, runmean(mean(CtzN2),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,7), hold on,
plot(B/1E3, runmean(mean(CtzN2e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,3), hold on,
plot(B/1E3, runmean(mean(CtzN3),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,8), hold on,
plot(B/1E3, runmean(mean(CtzN3e),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,4), hold on,
plot(B/1E3, runmean(mean(CtzRE2),2),'r')
plot(B/1E3, runmean(mean(CtzRE),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,9), hold on,
plot(B/1E3, runmean(mean(CtzRE2e),2),'r')
plot(B/1E3, runmean(mean(CtzREe),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,5), hold on,
plot(B/1E3, runmean(mean(CtzWA),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
subplot(2,5,10), hold on,
plot(B/1E3, runmean(mean(CtzWAe),2),'k')
line([0 0],[-0.4 0.4],'color',[0.6 0.6 0.6])
ylim([-0.4 0.4])
xlim([-15 15])
% title('Start N1')
% title('Start N2')
% title('Start N3')
% title('Start REM')
% title('Start Wake')
% title('End N1')
% title('End N2')
% title('End N3')
% title('End REM')
% title('End Wake')
close all
%-- 03/09/2018 19:43:48 --%
LoadPathMOBs
TrucKarimSpikesTransitions
clear
close al
close all
TrucKarimSpikesTransitions
edit AnalyseNREMsubstages_SpikesML.m
clear
close all
TrucKarimSpikesTransitions
clear
close all
TrucKarimSpikesTransitions
xlim([-7.5 7.5])
save MatFileForTrucKarimSpikesTransitionsPFCx75
%-- 05/09/2018 16:51:48 --%
LoadPathMOBs
TonesInDownNeuronIDfigures
%-- 05/09/2018 16:58:45 --%
LoadPathMOBs
TonesInDownNeuronIDfigures2
%-- 06/09/2018 14:41:25 --%
loadp
LoadPathMOBs
edit TonesInDownNeuronIDfigures2
edit TonesInDownNeuronIDfigures
%-- 06/09/2018 14:56:18 --%
edit TonesInDownNeuronIDfigures
loadp
LoadPathMOBs
edit TonesInDownNeuronIDfigures
edit AssessToneEffectMUAtype.m
edit Script_for_kb.m
edit RasterMatrixKJ.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils/
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
edit TrucKarimSpikesTransitions.m
TrucKarimSpikesTransitions
clear
TrucKarimSpikesTransitions
%-- 06/09/2018 15:56:15 --%
LoadPathMOBs
TrucKarimSpikesTransitions
%-- 06/09/2018 16:08:41 --%
LoadPathMOBs
TrucKarimSpikesTransitions
%-- 06/09/2018 16:11:29 --%
loadp
LoadPathMOBs
edit AssessToneEffectMUAtype.m
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/Utils/
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/
edit FolderFigureDelta
cd(FolderProjetDelta)
clear
%params
filename = [FolderProjetDelta 'neurons_tones.xlsx'];
%read
[~,~,raw]  = xlsread(filename);
raw(isnan(raw)) = 0;
[~,~,raw]  = xlsread(filename);
raw = cell2mat(raw(2:end,:));
raw(isnan(raw)) = 0;
[~,~,raw]  = xlsread(filename);
headers = raw(1,:);
raw = cell2mat(raw(2:end,:));
raw(isnan(raw)) = 0;
size(raw,2)
clear
%params
filename = [FolderProjetDelta 'neurons_tones.xlsx'];
%read
[~,~,raw]  = xlsread(filename);
headers = raw(1,:);
raw = cell2mat(raw(2:end,:));
raw(isnan(raw)) = 0;
%% Dir
neuron_number = raw(2:end, 1);
for i=2:size(raw,2)
responses.(headers{i}) = raw(2:end, i);
end
clear
%params
filename = [FolderProjetDelta 'neurons_tones.xlsx'];
%read
[~,~,raw]  = xlsread(filename);
headers = raw(1,:);
raw = cell2mat(raw(2:end,:));
raw(isnan(raw)) = 0;
%% Dir
neuron_number = raw(:, 1);
for i=2:size(raw,2)
responses.(headers{i}) = raw(:, i);
end
MatResp = raw(:,2:end);
clear
%params
filename = [FolderProjetDelta 'neurons_tones.xlsx'];
%read
[~,~,raw]  = xlsread(filename,1);
clear
%params
filename = [FolderProjetDelta 'neurons_tones.xlsx'];
%read
[~,~,raw]  = xlsread(filename,2);
clear
%params
filename = [FolderProjetDelta 'neurons_tones.xlsx'];
%read
[~,~,raw]  = xlsread(filename,3);
headers = raw(1,:);
raw = cell2mat(raw(2:end,:));
raw(isnan(raw)) = 0;
[status,sheets] = xlsfinfo(filename);
sheets{1}(1)
num2str(sheets{1}(1))
int(sheets{1}(1))
str2num(sheets{1}(1))
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
ReadNeuronTonesResponseXls
BootstrapEndoInduSpikeMetrics
TestQuantifyPethResponse
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
p=2
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p assess_res
TestQuantifyPethResponse
%load
clear
load(fullfile(FolderDeltaDataKJ,'PethNeuronsAtTransitions_KJ.mat'))
p=2;
speth = peth_res.speth{p};
MatEndo = zeros(length(speth.endo.x), length(speth.endo.y{1}));
MatIndu = zeros(length(speth.indu.x), length(speth.indu.y{1}));
for i=1:length(speth.endo.x)
MatEndo(i,:) = speth.endo.y{i}' / max(speth.endo.y{i});
MatIndu(i,:) = speth.indu.y{i}' / max(speth.indu.y{i});
end
x_endo = speth.endo.x{1};
x_indu = speth.indu.x{1};
%
% %% plot
% for p=1:length(peth_res.path)
%
%     speth = peth_res.speth{p};
%
%     for i=1:length(speth.endo.x)
%         %endo
%         endo.x_peth{i} = speth.endo.x{i};
%         endo.y_peth{i} = Smooth(speth.endo.y{i},1);
%
%         xp = endo.x_peth{i}(endo.x_peth{i}>0);
%         yp = endo.y_peth{i}(endo.x_peth{i}>0);
%
%         endo.masscenter(i) = sum(xp.*yp')/sum(yp);
%
%         %indu
%         indu.x_peth{i} = speth.indu.x{i};
%         indu.y_peth{i} = Smooth(speth.indu.y{i},1);
%
%         xp = indu.x_peth{i}(indu.x_peth{i}>0);
%         yp = indu.y_peth{i}(indu.x_peth{i}>0);
%
%         indu.masscenter(i) = sum(xp.*yp')/sum(yp);
%
%     end
%
%     figure, hold on
%
%     subplot(2,1,1),hold on
%     for i=1:length(speth.endo.x)
%         hold on, plot(endo.x_peth{i}, endo.y_peth{i}),
%     end
%     subplot(2,1,2),hold on
%     for i=1:length(speth.indu.x)
%         hold on, plot(indu.x_peth{i}, indu.y_peth{i}),
%     end
%
% end
%
%
%
%
%% plot
for p=1:length(peth_res.path)
speth = peth_res.speth{p};
for i=1:length(speth.endo.x)
%endo
endo.x_peth{i} = speth.endo.x{i};
endo.y_peth{i} = Smooth(speth.endo.y{i},1);
xp = endo.x_peth{i}(endo.x_peth{i}>0);
yp = endo.y_peth{i}(endo.x_peth{i}>0);
endo.masscenter(i) = sum(xp.*yp')/sum(yp);
%indu
indu.x_peth{i} = speth.indu.x{i};
indu.y_peth{i} = Smooth(speth.indu.y{i},1);
xp = indu.x_peth{i}(indu.x_peth{i}>0);
yp = indu.y_peth{i}(indu.x_peth{i}>0);
indu.masscenter(i) = sum(xp.*yp')/sum(yp);
end
figure, hold on
subplot(2,1,1),hold on
for i=1:length(speth.endo.x)
hold on, plot(endo.x_peth{i}, endo.y_peth{i}),
end
subplot(2,1,2),hold on
for i=1:length(speth.indu.x)
hold on, plot(indu.x_peth{i}, indu.y_peth{i}),
end
end
DownUpTransitionsSpikesMetrics1_Plot
DownUpTransitionsSpikesMetrics2_Plot
PethNeuronsAtTransitionsPlot
cd /media/DataMOBsRAIDN/ProjectEmbReact/Mouse779/
load('/media/DataMOBsRAIDN/ProjectEmbReact/Mouse779/LFPData/InfoLFP.mat')
load('/media/DataMOBsRAIDN/ProjectEmbReact/Mouse775/LFPData/InfoLFP.mat')
cd /home/mobsjunior/Dropbox/Mobs_member/AdrienBaptisteProject/Interface/
cd
cd /home/mobsjunior/Dropbox/Mobs_member/AdrienBaptisteProject/ParamsSouris/
filename = '779.csv';
clear
filename = '779.csv';
paramsArray=readtable(filename,'Delimiter',';','Format', '%s%f');
strcmpi(paramsArray(:,1),'bulb')
paramsArray(:,1)
strcmpi(paramsArray,'bulb')
params_key = table2array(paramsArray(:,1));
paramsArray=readtable(filename,'Delimiter',';','Format', '%s%f');
params_key = table2array(paramsArray(:,1));
params_value = table2mat(paramsArray(:,2));
params_value = table2array(paramsArray(:,2));
strcmpi(params_key,'bulb')
params_value(strcmpi(params_key,'bulb'))
params_value(strcmpi(params_key,'pfc deep')) + 1;
strcmpi(params_key,'pfc deep')
params_value(strcmpi(params_key,'pfc deep')) + 1;
params_value(strcmpi(params_key,'pfc sup')) + 1;
clear
filename = '779.csv';
paramsArray=readtable(filename,'Delimiter',';','Format', '%s%f');
params_key = table2array(paramsArray(:,1));
params_value = table2array(paramsArray(:,2));
%PFC channels
pfc_deep = params_value(strcmpi(params_key,'pfc deep')) + 1;
pfc_sup = params_value(strcmpi(params_key,'pfc sup')) + 1;
params_value(strcmpi(params_key,'bulb')) + 1;
params_value(strcmpi(params_key,'delta')) + 1;
params_value(strcmpi(params_key,'theta')) + 1;
close all
%-- 07/09/2018 17:22:42 --%
guide
%-- 07/09/2018 17:54:03 --%
LoadPathMOBs
%-- 10/09/2018 08:28:05 --%
LoadPathMOBs
load('Ripples.mat', 'Ripples')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
clear
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%params
t_start = -15000;
t_end   = 15000;
binsize_peth = 50;
binsize_mua = 2;
minDuration = 40;
%% load
load('SpikeData.mat', 'S')
% Substages
load('SleepSubstages.mat', 'Epoch')
N1 = Epoch{1}; N2 = Epoch{2}; N3 = Epoch{3}; REM = Epoch{4}; Wake = Epoch{5}; NREM = Epoch{7};
% tones
load('behavResources.mat', 'ToneEvent')
%% MUA
MUA  = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua);
%Down
down_PFCx = FindDownKJ(MUA, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
%% Tones
ToneNREM = Restrict(ToneEvent, NREM);
ToneDown = Restrict(ToneNREM, down_PFCx);
ToneUp   = Restrict(ToneNREM, up_PFCx);
i=7
% PETH in Wake
peth_tsd = PSTH_KJ(S{i}, Restrict(ToneEvent, Wake), t_start, t_end, binsize_peth);
subplot(4,1,1), hold on
area(Range(peth_tsd, 'ms'), Data(peth_tsd), 'FaceColor', 'k');
set(gca, 'XLim', [t_start t_end]/10);
if max(Data(peth_tsd)) > 0
set(gca, 'YLim', [0 max(Data(peth_tsd)) * 1.2]);
end
yl = get(gca, 'YTick');
yl = yl(yl==floor(yl));
set(gca, 'YTick', yl);
title(['Tones in Wake (n= ' num2str(length(Restrict(ToneEvent, Wake))) ' tones)'])
% PETH in Up
peth_tsd = PSTH_KJ(S{i}, ToneUp, t_start, t_end, binsize_peth);
subplot(4,1,2), hold on
area(Range(peth_tsd, 'ms'), Data(peth_tsd), 'FaceColor', 'k');
set(gca, 'XLim', [t_start t_end]/10);
if max(Data(peth_tsd)) > 0
set(gca, 'YLim', [0 max(Data(peth_tsd)) * 1.2]);
end
yl = get(gca, 'YTick');
yl = yl(yl==floor(yl));
set(gca, 'YTick', yl);
title(['Tones in Up (n= ' num2str(length(ToneUp)) ' tones)'])
% PETH in Down
peth_tsd = PSTH_KJ(S{i}, ToneDown, t_start, t_end, binsize_peth);
subplot(4,1,3), hold on
area(Range(peth_tsd, 'ms'), Data(peth_tsd), 'FaceColor', 'k');
set(gca, 'XLim', [t_start t_end]/10);
if max(Data(peth_tsd)) > 0
set(gca, 'YLim', [0 max(Data(peth_tsd)) * 1.2]);
end
yl = get(gca, 'YTick');
yl = yl(yl==floor(yl));
set(gca, 'YTick', yl);
title(['Tones in Down (n= ' num2str(length(ToneDown)) ' tones)'])
% PETH in NREM
peth_tsd = PSTH_KJ(S{i}, ToneNREM, t_start, t_end, binsize_peth);
subplot(4,1,4), hold on
area(Range(peth_tsd, 'ms'), Data(peth_tsd), 'FaceColor', 'k');
set(gca, 'XLim', [t_start t_end]/10);
if max(Data(peth_tsd)) > 0
set(gca, 'YLim', [0 max(Data(peth_tsd)) * 1.2]);
end
yl = get(gca, 'YTick');
yl = yl(yl==floor(yl));
set(gca, 'YTick', yl);
title(['Tones in NREM (n= ' num2str(length(ToneNREM)) ' tones)'])
t_start = -5000;
t_end   = 5000;
binsize_peth = 100;
figure, hold on
% PETH in Wake
peth_tsd = PSTH_KJ(S{i}, Restrict(ToneEvent, Wake), t_start, t_end, binsize_peth);
subplot(4,1,1), hold on
area(Range(peth_tsd, 'ms'), Data(peth_tsd), 'FaceColor', 'k');
set(gca, 'XLim', [t_start t_end]/10);
if max(Data(peth_tsd)) > 0
set(gca, 'YLim', [0 max(Data(peth_tsd)) * 1.2]);
end
yl = get(gca, 'YTick');
yl = yl(yl==floor(yl));
set(gca, 'YTick', yl);
title(['Tones in Wake (n= ' num2str(length(Restrict(ToneEvent, Wake))) ' tones)'])
% PETH in Up
peth_tsd = PSTH_KJ(S{i}, ToneUp, t_start, t_end, binsize_peth);
subplot(4,1,2), hold on
area(Range(peth_tsd, 'ms'), Data(peth_tsd), 'FaceColor', 'k');
set(gca, 'XLim', [t_start t_end]/10);
if max(Data(peth_tsd)) > 0
set(gca, 'YLim', [0 max(Data(peth_tsd)) * 1.2]);
end
yl = get(gca, 'YTick');
yl = yl(yl==floor(yl));
set(gca, 'YTick', yl);
title(['Tones in Up (n= ' num2str(length(ToneUp)) ' tones)'])
% PETH in Down
peth_tsd = PSTH_KJ(S{i}, ToneDown, t_start, t_end, binsize_peth);
subplot(4,1,3), hold on
area(Range(peth_tsd, 'ms'), Data(peth_tsd), 'FaceColor', 'k');
set(gca, 'XLim', [t_start t_end]/10);
if max(Data(peth_tsd)) > 0
set(gca, 'YLim', [0 max(Data(peth_tsd)) * 1.2]);
end
yl = get(gca, 'YTick');
yl = yl(yl==floor(yl));
set(gca, 'YTick', yl);
title(['Tones in Down (n= ' num2str(length(ToneDown)) ' tones)'])
% PETH in NREM
peth_tsd = PSTH_KJ(S{i}, ToneNREM, t_start, t_end, binsize_peth);
subplot(4,1,4), hold on
area(Range(peth_tsd, 'ms'), Data(peth_tsd), 'FaceColor', 'k');
set(gca, 'XLim', [t_start t_end]/10);
if max(Data(peth_tsd)) > 0
set(gca, 'YLim', [0 max(Data(peth_tsd)) * 1.2]);
end
yl = get(gca, 'YTick');
yl = yl(yl==floor(yl));
set(gca, 'YTick', yl);
title(['Tones in NREM (n= ' num2str(length(ToneNREM)) ' tones)'])
figure,
area(Range(peth_tsd, 'ms'), Data(peth_tsd), 'FaceColor', 'k');
plot(Range(peth_tsd, 'ms'), Data(peth_tsd), 'FaceColor', 'k');
plot(Range(peth_tsd, 'ms'), Data(peth_tsd),  'k');
peth_tsd = PSTH_KJ(S{i}, ToneNREM, t_start, t_end, binsize_peth/2);
plot(Range(peth_tsd, 'ms'), Data(peth_tsd),  'k');
hold on,
plot(Range(peth_tsd, 'ms'), Data(peth_tsd),  'k');
line([30 30],ylim,'color',[0.6 0.6 0.6])
edit Raster
figure, [fh,sq,sweeps] = RasterPETH(S{num}, ts(st), -95000,+15000,'BinSize',1000,'Markers',{ts(to)},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{i}, ToneDown, -95000,+15000,'BinSize',1000,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{i}, ToneDown, -10000,+10000,'BinSize',1000,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{i}, ToneDown, -10000,+10000,'BinSize',100,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{i}, ToneDown, -5000,+5000,'BinSize',100,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{i}, ToneDown, -1500,+1500,'BinSize',10,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{i}, ToneDown, -2500,+2500,'BinSize',10,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{i}, ToneDown, -2500,+4500,'BinSize',10,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
xlim([-100 150])
figure, [fh,sq,sweeps] = RasterPETH(S{i}, ToneDown, -2500,+4500,'BinSize',50,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
xlim([-100 150])
load('Ripples.mat')
load('DownState.mat')
load('SleepSubstages.mat')
[C,B]=CrossCorr(Ripples(:,2)*10,Range(down_PFCx),100,100);
[C,B]=CrossCorr(Ripples(:,2)*10,range(down_PFCx),100,100);
[C,B]=CrossCorr(Ripples(:,2)*10,Start(down_PFCx),100,100);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(Ripples(:,2)*10,Start(down_PFCx),10,100);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(Ripples(:,2)*10,Start(down_PFCx),10,200);
figure, plot(B/1E3,C)
help CrossCorr
[C,B]=CrossCorr(Start(down_PFCx),Ripples(:,2)*10,10,200);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(End(down_PFCx),Ripples(:,2)*10,10,200);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(End(down_PFCx),Ripples(:,2)*10,20,100);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(End(down_PFCx),Ripples(:,2)*10,10,200);
[C,B]=CrossCorr(Restrict(ts(End(down_PFCx)),Epoch{1}),Ripples(:,2)*10,10,200);
[C,B]=CrossCorr(Range(Restrict(ts(End(down_PFCx)),Epoch{1})),Ripples(:,2)*10,10,200);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(Range(Restrict(ts(End(down_PFCx)),Epoch{2})),Ripples(:,2)*10,10,200);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(Range(Restrict(ts(End(down_PFCx)),Epoch{3})),Ripples(:,2)*10,10,200);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(Range(Restrict(ts(Start(down_PFCx)),Epoch{3})),Ripples(:,2)*10,10,200);
figure, plot(B/1E3,C)
[C2,B2]=CrossCorr(Range(Restrict(ts(Start(down_PFCx)),Epoch{2})),Ripples(:,2)*10,10,200);
hold on, plot(B/1E3,C2,'r')
[C3,B3]=CrossCorr(Range(Restrict(ts(Start(down_PFCx)),Epoch{1})),Ripples(:,2)*10,10,200);
hold on, plot(B/1E3,C3,'g')
RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.1E4);
figure, [fh,sq,sweeps] = RasterPETH(S{i}, Restrict(ToneDown,RipEpoch), -2500,+4500,'BinSize',10,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{i}, Restrict(ToneDown,RpEpoch), -2500,+4500,'BinSize',10,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
RpEpoch=intervalSet(Ripples(:,1)*10-0.3E4,Ripples(:,3)*10+0.3E4);
figure, [fh,sq,sweeps] = RasterPETH(S{i}, Restrict(ToneDown,RpEpoch), -2500,+4500,'BinSize',10,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
[C,B]=CrossCorr(Range(ToneEvent),Ripples(:,2)*10,10,200);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(Range(ToneEvent),Ripples(:,2)*10,20,400);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(Range(ToneEvent),Ripples(:,2)*10,100,400);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(Range(ToneEvent),Ripples(:,2)*10,50,500);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(Range(ToneEvent),Ripples(:,2)*10,50,100);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(Range(ToneEvent),Ripples(:,2)*10,10,500);
figure, plot(B/1E3,C)
[C,B]=CrossCorr(Range(ToneEvent),Ripples(:,2)*10,20,200);
figure, plot(B/1E3,C)
tempEpoch=Epoch{2}-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
figure, [fh,sq,sweeps] = RasterPETH(S{i}, Restrict(ToneDown,tempEpoch), -2500,+4500,'BinSize',10,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.1E4);
figure, [fh,sq,sweeps] = RasterPETH(S{i}, Restrict(ToneDown,tempEpoch), -2500,+4500,'BinSize',10,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
tempEpoch=CleanUpEpoch(tempEpoch);
figure, [fh,sq,sweeps] = RasterPETH(S{i}, Restrict(ToneDown,tempEpoch), -2500,+4500,'BinSize',10,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
tot_length(tempEpoch)
tot_length(tempEpoch,'s'))
tot_length(tempEpoch,'s')
tot_length(RpEpoch,'s')
figure, [fh,sq,sweeps] = RasterPETH(S{i}, Restrict(ToneEvents,tempEpoch), -2500,+4500,'BinSize',10,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
figure, [fh,sq,sweeps] = RasterPETH(S{i}, Restrict(ToneEvent,tempEpoch), -2500,+4500,'BinSize',10,'Markers',{ts(st_up)},'MarkerTypes',{'ro','r'});
[C,B]=CrossCorr(Range(Restrict(ToneEvent,tempEpoch)),Range(S{i}),100,100)
[C,B]=CrossCorr(Range(Restrict(ToneEvent,tempEpoch)),Range(S{i}),100,100);
figure, plot(B/1E3,C)
[C2,B2]=CrossCorr(Range(Restrict(ToneEvent,RpEpoch)),Range(S{i}),100,100);
hold on, plot(B/1E3,C2,'r')
RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.1E4);
tempEpoch=CleanUpEpoch(tempEpoch);
tempEpoch=Epoch{2}-RpEpoch;
ToneEvents=Restrict(ToneEvent,Epoch{2});
[C,B]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),100,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),100,100);
figure, plot(B/1E3,C)
hold on, plot(B/1E3,C2,'r')
RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.1E4);
tempEpoch=Epoch{2}-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,Epoch{2});
[C,B]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),100,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),100,100);
figure, plot(B/1E3,C)
hold on, plot(B/1E3,C2,'r')
RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.1E4);
tempEpoch=Epoch{2}-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,Epoch{2});
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),20,200);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),100,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),100,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.1E4);
tempEpoch=Epoch{2}-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,Epoch{2});
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),100,100);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),100,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),100,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.1E4);
tempEpoch=Epoch{2}-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,Epoch{2});
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),10,100);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),10,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),10,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
RpEpoch=intervalSet(Ripples(:,1)*10-0.3E4,Ripples(:,3)*10+0.3E4);
tempEpoch=Epoch{2}-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,Epoch{2});
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),10,100);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),10,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),10,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
RpEpoch=intervalSet(Ripples(:,1)*10-0.5E4,Ripples(:,3)*10+0.5E4);
tempEpoch=Epoch{2}-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,Epoch{2});
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),10,100);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),10,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),10,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
SlEpoch=or(Epoch{2},Epoch{3});
RpEpoch=intervalSet(Ripples(:,1)*10-0.5E4,Ripples(:,3)*10+0.5E4);
tempEpoch=SlEpoch-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,SlEpoch);
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),10,100);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),10,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),10,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
SlEpoch=or(Epoch{2},Epoch{3});
RpEpoch=intervalSet(Ripples(:,1)*10-0.2E4,Ripples(:,3)*10+0.2E4);
tempEpoch=SlEpoch-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,SlEpoch);
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),10,100);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),10,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),10,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
SlEpoch=or(Epoch{2},Epoch{3});
RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.1E4);
tempEpoch=SlEpoch-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,SlEpoch);
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),10,100);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),10,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),10,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
SlEpoch=or(Epoch{2},Epoch{3});
RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.2E4);
tempEpoch=SlEpoch-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,SlEpoch);
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),10,100);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),10,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),10,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
SlEpoch=or(Epoch{2},Epoch{3});
RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.2E4);
RpEpoch=intervalSet(Ripples(:,1)*10,Ripples(:,3)*10+0.3E4);
RpEpoch=intervalSet(Ripples(:,1)*10-0.3E4,Ripples(:,3)*10);
tempEpoch=SlEpoch-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,SlEpoch);
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),10,100);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),10,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),10,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
SlEpoch=or(Epoch{2},Epoch{3});
RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.2E4);
RpEpoch=intervalSet(Ripples(:,1)*10,Ripples(:,3)*10+0.3E4);
%RpEpoch=intervalSet(Ripples(:,1)*10-0.3E4,Ripples(:,3)*10);
tempEpoch=SlEpoch-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,SlEpoch);
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),10,100);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),10,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),10,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
SlEpoch=or(Epoch{2},Epoch{3});
%RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.2E4);
RpEpoch=intervalSet(Ripples(:,1)*10,Ripples(:,3)*10+0.2E4);
%RpEpoch=intervalSet(Ripples(:,1)*10-0.2E4,Ripples(:,3)*10);
tempEpoch=SlEpoch-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,SlEpoch);
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),10,100);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),10,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),10,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
SlEpoch=or(Epoch{2},Epoch{3});
%RpEpoch=intervalSet(Ripples(:,1)*10-0.1E4,Ripples(:,3)*10+0.2E4);
%RpEpoch=intervalSet(Ripples(:,1)*10,Ripples(:,3)*10+0.2E4);
RpEpoch=intervalSet(Ripples(:,1)*10-0.2E4,Ripples(:,3)*10);
tempEpoch=SlEpoch-RpEpoch;
tempEpoch=CleanUpEpoch(tempEpoch);
ToneEvents=Restrict(ToneEvent,SlEpoch);
[C,B]=CrossCorr(Range(ToneEvents),Range(S{i}),10,100);
[C1,B1]=CrossCorr(Range(Restrict(ToneEvents,tempEpoch)),Range(S{i}),10,100);
[C2,B2]=CrossCorr(Range(Restrict(ToneEvents,RpEpoch)),Range(S{i}),10,100);
figure, plot(B/1E3,C,'k')
hold on, plot(B/1E3,C2,'r')
hold on, plot(B/1E3,C1,'b')
%-- 10/09/2018 14:50:09 --%
load('SleepSubstages.mat')
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
GenerateTonePethNeuron
%-- 10/09/2018 15:03:58 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
edit AssessToneEffectMUAtype.m
load('TonePeth.mat', 'MatPeth')
load('TonePeth.mat', 'MatPeth')
MatPeth = MatPeth';
save TonePeth.mat MatPeth
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice403-451/20170215/Breath-Mouse-403-451-15022017/Mouse403
load('TonePeth.mat', 'MatPeth')
MatPeth = MatPeth';
save TonePeth.mat MatPeth
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice403-451/20170213/Breath-Mouse-403-451-13022017/Mouse451
load('TonePeth.mat', 'MatPeth')
MatPeth = MatPeth';
save TonePeth.mat MatPeth
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%% init
%params
binsize_mua = 2;
minDuration = 40;
intv_success_down = 1000; %100ms
intv_success_up = 500; %50ms
%tone impact
load('TonePeth.mat', 'MatPeth')
%neuron info
load('InfoNeuronsPFCx.mat', 'MatInfoNeurons', 'InfoNeurons')
% tones
load('behavResources.mat', 'ToneEvent')
%substages
load('SleepScoring_OBGamma.mat', 'SWSEpoch')
imagesc(MatPeth)
imagesc(zscore(MatPeth))
plot(Matpeth(1,:))
plot(MatPeth(1,:))
figure, plot(MatPeth(2,:))
figure, plot(MatPeth(3,:))
figure, plot(-500:10:500,MatPeth(3,:))
-500:10:500;
-500:5:500;
figure, plot(-500:5:500,MatPeth(3,:))
figure, plot(-500:5:500,MatPeth(7,:))
figure, plot(-500:5:500,MatPeth(6,:))
figure, plot(-500:5:500,MatPeth(8,:))
figure, plot(-500:5:500,MatPeth(9,:))
imagesc(zscore(MatPeth))
figure, plot(-500:5:500,MatPeth(9,:))
figure, plot(-500:5:500,MatPeth(10,:))
figure, plot(-500:5:500,MatPeth(22,:))
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
ReadNeuronTonesResponseXls
edit RasterMatrixKJ.m
edit AssessToneEffectMUAtype.m
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%% init
%params
binsize_mua = 2;
minDuration = 40;
intv_success_down = 1000; %100ms
intv_success_up = 500; %50ms
binsize_met = 2;
nbBins_met  = 400;
%tone impact
load('TonePeth.mat', 'MatPeth')
load('neuronResponseTones.mat', 'responses')
try
excited_neurons = find(responses.Big{p}==1);
catch
excited_neurons = find(responses.N2{p}==1 & responses.N3{p}==1);
end
inhibit_neurons = find(responses.N2{p}==-1 & responses.N3{p}==-1);
%neuron info
load('InfoNeuronsPFCx.mat', 'MatInfoNeurons', 'InfoNeurons')
% tones
load('behavResources.mat', 'ToneEvent')
%substages
load('SleepScoring_OBGamma.mat', 'SWSEpoch')
%% MUA
%MUA
MUA.all  = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua);
MUA.excited = GetMuaNeurons_KJ(excited_neurons, 'binsize',binsize_mua);
%     MUA.neutral = GetMuaNeurons_KJ(neutral_neurons, 'binsize',binsize_mua);
MUA.inhibit = GetMuaNeurons_KJ(inhibit_neurons, 'binsize',binsize_mua);
%Down
down_PFCx = FindDownKJ(MUA.all, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
%% Tones
ToneNREM = Restrict(ToneEvent, SWSEpoch);
ToneDown = Restrict(ToneNREM, down_PFCx);
ToneUp   = Restrict(ToneNREM, up_PFCx);
% Down to Up ?
intv_post_tones = [Range(ToneDown) Range(ToneDown)+intv_success_up];
[~,intervals,~] = InIntervals(st_up, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneDownUp = subset(ToneDown, intervals);
ToneDownDown = subset(ToneDown, setdiff(1:length(ToneDown), intervals));
% Up to Down ?
intv_post_tones = [Range(ToneUp) Range(ToneUp)+intv_success_down];
[~,intervals,~] = InIntervals(st_down, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneUpDown = subset(ToneUp, intervals);
ToneUpUp = subset(ToneUp, setdiff(1:length(ToneUp), intervals));
load(fullfile(FolderDeltaDataKJ, 'neuronResponseTones.mat'), 'responses')
try
excited_neurons = find(responses.Big{p}==1);
catch
excited_neurons = find(responses.N2{p}==1 & responses.N3{p}==1);
end
inhibit_neurons = find(responses.N2{p}==-1 & responses.N3{p}==-1);
%neuron info
load('InfoNeuronsPFCx.mat', 'MatInfoNeurons', 'InfoNeurons')
% tones
load('behavResources.mat', 'ToneEvent')
%substages
load('SleepScoring_OBGamma.mat', 'SWSEpoch')
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%% init
%params
binsize_mua = 2;
minDuration = 40;
intv_success_down = 1000; %100ms
intv_success_up = 500; %50ms
binsize_met = 2;
nbBins_met  = 400;
%tone impact
load('TonePeth.mat', 'MatPeth')
load(fullfile(FolderDeltaDataKJ, 'neuronResponseTones.mat'), 'responses')
try
excited_neurons = find(responses.Big{p}==1);
catch
excited_neurons = find(responses.N2{p}==1 & responses.N3{p}==1);
end
inhibit_neurons = find(responses.N2{p}==-1 & responses.N3{p}==-1);
%neuron info
load('InfoNeuronsPFCx.mat', 'MatInfoNeurons', 'InfoNeurons')
% tones
load('behavResources.mat', 'ToneEvent')
%substages
load('SleepScoring_OBGamma.mat', 'SWSEpoch')
%% MUA
%MUA
MUA.all  = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua);
MUA.excited = GetMuaNeurons_KJ(excited_neurons, 'binsize',binsize_mua);
%     MUA.neutral = GetMuaNeurons_KJ(neutral_neurons, 'binsize',binsize_mua);
MUA.inhibit = GetMuaNeurons_KJ(inhibit_neurons, 'binsize',binsize_mua);
%Down
down_PFCx = FindDownKJ(MUA.all, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
%% Tones
ToneNREM = Restrict(ToneEvent, SWSEpoch);
ToneDown = Restrict(ToneNREM, down_PFCx);
ToneUp   = Restrict(ToneNREM, up_PFCx);
% Down to Up ?
intv_post_tones = [Range(ToneDown) Range(ToneDown)+intv_success_up];
[~,intervals,~] = InIntervals(st_up, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneDownUp = subset(ToneDown, intervals);
ToneDownDown = subset(ToneDown, setdiff(1:length(ToneDown), intervals));
% Up to Down ?
intv_post_tones = [Range(ToneUp) Range(ToneUp)+intv_success_down];
[~,intervals,~] = InIntervals(st_down, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneUpDown = subset(ToneUp, intervals);
ToneUpUp = subset(ToneUp, setdiff(1:length(ToneUp), intervals));
figure, hold on
% all
subplot(2,2,1), hold on
[m,sem,tps] = mETAverage(Range(ToneUpDown), Range(MUA.all), Data(MUA.all), binsize_met, nbBins_met);
h(1) = plot(tps, m, 'color','r');
[m,sem,tps] = mETAverage(Range(ToneUpUp), Range(MUA.all), Data(MUA.all), binsize_met, nbBins_met);
h(2) = plot(tps, m, 'color','b');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'success', 'failed');
title('all neurons'),
% excited
subplot(2,2,2), hold on
[m,sem,tps] = mETAverage(Range(ToneUpDown), Range(MUA.excited), Data(MUA.excited), binsize_met, nbBins_met);
h(1) = plot(tps, m, 'color','r');
[m,sem,tps] = mETAverage(Range(ToneUpUp), Range(MUA.excited), Data(MUA.excited), binsize_met, nbBins_met);
h(2) = plot(tps, m, 'color','b');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'success', 'failed');
title('excited neurons'),
% inhibit
subplot(2,2,4), hold on
[m,sem,tps] = mETAverage(Range(ToneUpDown), Range(MUA.inhibit), Data(MUA.inhibit), binsize_met, nbBins_met);
h(1) = plot(tps, m, 'color','r');
[m,sem,tps] = mETAverage(Range(ToneUpUp), Range(MUA.inhibit), Data(MUA.inhibit), binsize_met, nbBins_met);
h(2) = plot(tps, m, 'color','b');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'success', 'failed');
title('inhibit neurons'),
figure, hold on
% all
subplot(2,2,1), hold on
[m,sem,tps] = mETAverage(Range(ToneUpDown), Range(MUA.all), Data(MUA.all), binsize_met, nbBins_met);
h(1) = plot(tps, m, 'color','r');
[m,sem,tps] = mETAverage(Range(ToneUpUp), Range(MUA.all), Data(MUA.all), binsize_met, nbBins_met);
h(2) = plot(tps, m, 'color','b');
[m,sem,tps] = mETAverage(Range(ToneDownUp), Range(MUA.all), Data(MUA.all), binsize_met, nbBins_met);
h(3) = plot(tps, m, 'color','g');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'up>down', 'up>up','down>up');
title('all neurons'),
% excited
subplot(2,2,2), hold on
[m,sem,tps] = mETAverage(Range(ToneUpDown), Range(MUA.excited), Data(MUA.excited), binsize_met, nbBins_met);
h(1) = plot(tps, m, 'color','r');
[m,sem,tps] = mETAverage(Range(ToneUpUp), Range(MUA.excited), Data(MUA.excited), binsize_met, nbBins_met);
h(2) = plot(tps, m, 'color','b');
[m,sem,tps] = mETAverage(Range(ToneDownUp), Range(MUA.excited), Data(MUA.excited), binsize_met, nbBins_met);
h(3) = plot(tps, m, 'color','g');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'up>down', 'up>up','down>up');
title('excited neurons'),
% inhibit
subplot(2,2,4), hold on
[m,sem,tps] = mETAverage(Range(ToneUpDown), Range(MUA.inhibit), Data(MUA.inhibit), binsize_met, nbBins_met);
h(1) = plot(tps, m, 'color','r');
[m,sem,tps] = mETAverage(Range(ToneUpUp), Range(MUA.inhibit), Data(MUA.inhibit), binsize_met, nbBins_met);
h(2) = plot(tps, m, 'color','b');
[m,sem,tps] = mETAverage(Range(ToneDownUp), Range(MUA.inhibit), Data(MUA.inhibit), binsize_met, nbBins_met);
h(3) = plot(tps, m, 'color','g');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'up>down', 'up>up','down>up');
title('inhibit neurons'),
figure, hold on
% all
subplot(2,2,1), hold on
[m,sem,tps] = mETAverage(Range(ToneUpDown), Range(MUA.all), Data(MUA.all), binsize_met, nbBins_met);
h(1) = plot(tps, m, 'color','r');
[m,sem,tps] = mETAverage(Range(ToneUpUp), Range(MUA.all), Data(MUA.all), binsize_met, nbBins_met);
h(2) = plot(tps, m, 'color','b');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'success', 'failed');
title('all neurons'),
% excited
subplot(2,2,2), hold on
[m,sem,tps] = mETAverage(Range(ToneUpDown), Range(MUA.excited), Data(MUA.excited), binsize_met, nbBins_met);
h(1) = plot(tps, m, 'color','r');
[m,sem,tps] = mETAverage(Range(ToneUpUp), Range(MUA.excited), Data(MUA.excited), binsize_met, nbBins_met);
h(2) = plot(tps, m, 'color','b');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'success', 'failed');
title('excited neurons'),
% inhibit
subplot(2,2,4), hold on
[m,sem,tps] = mETAverage(Range(ToneUpDown), Range(MUA.inhibit), Data(MUA.inhibit), binsize_met, nbBins_met);
h(1) = plot(tps, m, 'color','r');
[m,sem,tps] = mETAverage(Range(ToneUpUp), Range(MUA.inhibit), Data(MUA.inhibit), binsize_met, nbBins_met);
h(2) = plot(tps, m, 'color','b');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'success', 'failed');
title('inhibit neurons'),
CorrelationTonesImpactDownInduction
ReadNeuronTonesResponseXls
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
p=1
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%% init
%params
binsize_mua = 2;
minDuration = 40;
intv_success_down = 1000; %100ms
intv_success_up = 500; %50ms
binsize_met = 2;
nbBins_met  = 400;
%tone impact
load('TonePeth.mat', 'MatPeth')
load(fullfile(FolderDeltaDataKJ, 'neuronResponseTones.mat'), 'responses')
responses.Big{p};
%tone impact
load('TonePeth.mat', 'MatPeth')
load(fullfile(FolderDeltaDataKJ, 'neuronResponseTones.mat'), 'responses')
try
excited_neurons = find(responses.Big{p}==1);
catch
excited_neurons = find(responses.N2{p}==1 & responses.N3{p}==1);
end
inhibit_neurons = find(responses.N2{p}==-1 & responses.N3{p}==-1);
neutral_neurons = setdiff(1:length(responses.N2{p}), sort([excited_neurons inhibit_neurons]));
neutral_neurons = setdiff(1:length(responses.N2{p}), sort([excited_neurons;inhibit_neurons]));
CorrelationTonesImpactDownInduction
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice403-451/20170215/Breath-Mouse-403-451-15022017/Mouse403
CorrelationTonesImpactDownInduction
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
CorrelationTonesImpactNeuronDownInduction
%% Ripples
RipplesNREM = Restrict(tRipples, SWSEpoch);
RipplesDown = Restrict(RipplesNREM, down_PFCx);
RipplesUp   = Restrict(RipplesNREM, up_PFCx);
% Down to Up ?
intv_post_rip = [Range(RipplesDown) Range(RipplesDown)+intv_success_up];
[~,intervals,~] = InIntervals(st_up, intv_post_rip);
intervals = unique(intervals); intervals(intervals==0)=[];
RipplesDownUp = subset(RipplesDown, intervals);
RipplesDownDown = subset(RipplesDown, setdiff(1:length(RipplesDown), intervals));
% Up to Down ?
intv_post_rip = [Range(RipplesUp) Range(RipplesUp)+intv_success_down];
[~,intervals,~] = InIntervals(st_down, intv_post_rip);
intervals = unique(intervals); intervals(intervals==0)=[];
RipplesUpDown = subset(RipplesUp, intervals);
RipplesUpUp = subset(RipplesUp, setdiff(1:length(RipplesUp), intervals));
%% Cross correlogram
for i=1:3%length(S)
figure, hold on
% up
subplot(2,2,1), hold on
[C,B] = CrossCorr(Range(ToneUpDown),Range(S{i}),10,100);
h(1) = plot(B, C, 'color','r');
[C,B] = CrossCorr(Range(ToneUpUp),Range(S{i}),10,100);
h(2) = plot(B, C, 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'up>down', 'up>up');
title('tones in Up'),
% down
subplot(2,2,2), hold on
[C,B] = CrossCorr(Range(ToneDownUp),Range(S{i}),10,100);
h(1) = plot(B, C, 'color','r');
[C,B] = CrossCorr(Range(ToneDownDown),Range(S{i}),10,100);
h(2) = plot(B, C, 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'down>up', 'down>down');
title('tones in Down'),
% up
subplot(2,2,3), hold on
[C,B] = CrossCorr(Range(RipplesUpDown),Range(S{i}),10,100);
h(1) = plot(B, C, 'color','r');
[C,B] = CrossCorr(Range(RipplesUpUp),Range(S{i}),10,100);
h(2) = plot(B, C, 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'down>up', 'down>down');
title('Ripples in up'),
% down
subplot(2,2,4), hold on
[C,B] = CrossCorr(Range(RipplesDownUp),Range(S{i}),10,100);
h(1) = plot(B, C, 'color','r');
[C,B] = CrossCorr(Range(RipplesDownDown),Range(S{i}),10,100);
h(2) = plot(B, C, 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'down>up', 'down>down');
title('Ripples in Down'),
%% title
title_fig = [Dir.name{p}  ' - ' Dir.date{p} ' (neuron '  num2str(i) ')'];
filename_fig = ['ResponseNeurons_' Dir.name{p}  '_' Dir.date{p} '_neuron_' num2str(i)];
filename_png = [filename_fig  '.png'];
% suptitle
suplabel(title_fig,'t');
%save figure
filename_png = fullfile(FolderFigureDelta,'IDfigures','TonesInDown','Neurons',filename_png);
set(gcf,'units','normalized','outerposition',[0 0 1 1])
saveas(gcf,filename_png,'png')
close all
end
for i=7%1:3%length(S)
figure, hold on
% up
subplot(2,2,1), hold on
[C,B] = CrossCorr(Range(ToneUpDown),Range(S{i}),10,100);
h(1) = plot(B, Smooth(C,1), 'color','b');
[C,B] = CrossCorr(Range(ToneUpUp),Range(S{i}),10,100);
h(2) = plot(B, Smooth(C,1), 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'up>down', 'up>up');
title('tones in Up'),
% down
subplot(2,2,2), hold on
[C,B] = CrossCorr(Range(ToneDownUp),Range(S{i}),10,100);
h(1) = plot(B, Smooth(C,1), 'color','b');
[C,B] = CrossCorr(Range(ToneDownDown),Range(S{i}),10,100);
h(2) = plot(B, Smooth(C,1), 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'down>up', 'down>down');
title('tones in Down'),
% up
subplot(2,2,3), hold on
[C,B] = CrossCorr(Range(RipplesUpDown),Range(S{i}),10,100);
h(1) = plot(B, Smooth(C,1), 'color','b');
[C,B] = CrossCorr(Range(RipplesUpUp),Range(S{i}),10,100);
h(2) = plot(B, Smooth(C,1), 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'down>up', 'down>down');
title('Ripples in up'),
% down
subplot(2,2,4), hold on
[C,B] = CrossCorr(Range(RipplesDownUp),Range(S{i}),10,100);
h(1) = plot(B, Smooth(C,1), 'color','b');
[C,B] = CrossCorr(Range(RipplesDownDown),Range(S{i}),10,100);
h(2) = plot(B, Smooth(C,1), 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'down>up', 'down>down');
title('Ripples in Down'),
%% title
title_fig = [Dir.name{p}  ' - ' Dir.date{p} ' (neuron '  num2str(i) ')'];
filename_fig = ['ResponseNeurons_' Dir.name{p}  '_' Dir.date{p} '_neuron_' num2str(i)];
filename_png = [filename_fig  '.png'];
% suptitle
suplabel(title_fig,'t');
%save figure
filename_png = fullfile(FolderFigureDelta,'IDfigures','TonesInDown','Neurons',filename_png);
set(gcf,'units','normalized','outerposition',[0 0 1 1])
saveas(gcf,filename_png,'png')
close all
end
edit AssessToneEffectMUAtype.m
load('InfoNeuronsPFCx.mat', 'InfoNeurons')
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243/SpikesToAnalyse/PFCx_MUA.mat')
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%% init
%params
binsize_mua = 2;
minDuration = 40;
intv_success_down = 1000; %100ms
intv_success_up = 500; %50ms
binsize_met = 2;
nbBins_met  = 400;
%neuron info
load('InfoNeuronsPFCx.mat', 'MatInfoNeurons', 'InfoNeurons')
load('SpikeData.mat', 'S')
% tones
load('behavResources.mat', 'ToneEvent')
% ripples
load('Ripples.mat', 'Ripples')
tRipples = ts(Ripples(:,2)*10);
%substages
load('SleepScoring_OBGamma.mat', 'SWSEpoch')
% info on neurons in InfoNeuronsPFCx.mat
load('InfoNeuronsPFCx.mat', 'InfoNeurons')
NumNeurons = InfoNeurons.NumNeurons; % same as above
S = S(NumNeurons);
%% firing rate
fr = InfoNeurons.firingrate; % firing rate of each neurons of S_pfc
layer = InfoNeurons.layer; % putative layer of each neurons of S_pfc
putative = InfoNeurons.putative; % int or pyr (>0 for pyramidal, and negative for interneurons - this the probability given by Sophie)
soloist = InfoNeurons.soloist; % soloïst or chorist (0 for chorist, 1 for soloïst)
prefered_substages = InfoNeurons.substages; % prefered substages, if any (0 if none)
%% MUA
%MUA
MUA  = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua);
%Down
down_PFCx = FindDownKJ(MUA, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
%% Tones
ToneNREM = Restrict(ToneEvent, SWSEpoch);
ToneDown = Restrict(ToneNREM, down_PFCx);
ToneUp   = Restrict(ToneNREM, up_PFCx);
% Down to Up ?
intv_post_tones = [Range(ToneDown) Range(ToneDown)+intv_success_up];
[~,intervals,~] = InIntervals(st_up, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneDownUp = subset(ToneDown, intervals);
ToneDownDown = subset(ToneDown, setdiff(1:length(ToneDown), intervals));
% Up to Down ?
intv_post_tones = [Range(ToneUp) Range(ToneUp)+intv_success_down];
[~,intervals,~] = InIntervals(st_down, intv_post_tones);
intervals = unique(intervals); intervals(intervals==0)=[];
ToneUpDown = subset(ToneUp, intervals);
ToneUpUp = subset(ToneUp, setdiff(1:length(ToneUp), intervals));
%% Ripples
RipplesNREM = Restrict(tRipples, SWSEpoch);
RipplesDown = Restrict(RipplesNREM, down_PFCx);
RipplesUp   = Restrict(RipplesNREM, up_PFCx);
% Down to Up ?
intv_post_rip = [Range(RipplesDown) Range(RipplesDown)+intv_success_up];
[~,intervals,~] = InIntervals(st_up, intv_post_rip);
intervals = unique(intervals); intervals(intervals==0)=[];
RipplesDownUp = subset(RipplesDown, intervals);
RipplesDownDown = subset(RipplesDown, setdiff(1:length(RipplesDown), intervals));
% Up to Down ?
intv_post_rip = [Range(RipplesUp) Range(RipplesUp)+intv_success_down];
[~,intervals,~] = InIntervals(st_down, intv_post_rip);
intervals = unique(intervals); intervals(intervals==0)=[];
RipplesUpDown = subset(RipplesUp, intervals);
RipplesUpUp = subset(RipplesUp, setdiff(1:length(RipplesUp), intervals));
i=7
figure, hold on
% up
subplot(2,2,1), hold on
[C,B] = CrossCorr(Range(ToneUpDown),Range(S{i}),10,100);
h(1) = plot(B, Smooth(C,1), 'color','b');
[C,B] = CrossCorr(Range(ToneUpUp),Range(S{i}),10,100);
h(2) = plot(B, Smooth(C,1), 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'up>down', 'up>up');
title('tones in Up'),
% down
subplot(2,2,2), hold on
[C,B] = CrossCorr(Range(ToneDownUp),Range(S{i}),10,100);
h(1) = plot(B, Smooth(C,1), 'color','b');
[C,B] = CrossCorr(Range(ToneDownDown),Range(S{i}),10,100);
h(2) = plot(B, Smooth(C,1), 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'down>up', 'down>down');
title('tones in Down'),
% up
subplot(2,2,3), hold on
[C,B] = CrossCorr(Range(RipplesUpDown),Range(S{i}),10,100);
h(1) = plot(B, Smooth(C,1), 'color','b');
[C,B] = CrossCorr(Range(RipplesUpUp),Range(S{i}),10,100);
h(2) = plot(B, Smooth(C,1), 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'down>up', 'down>down');
title('Ripples in up'),
% down
subplot(2,2,4), hold on
[C,B] = CrossCorr(Range(RipplesDownUp),Range(S{i}),10,100);
h(1) = plot(B, Smooth(C,1), 'color','b');
[C,B] = CrossCorr(Range(RipplesDownDown),Range(S{i}),10,100);
h(2) = plot(B, Smooth(C,1), 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'down>up', 'down>down');
title('Ripples in Down'),
%% title
title_fig = [Dir.name{p}  ' - ' Dir.date{p} ' (neuron '  num2str(i) ')'];
title_fig = [title_fig ' fr= ' num2str(fr(i)) ' / layer ' num2str(layer(i))];
if putative(i)>0
title_fig = [title_fig ' / pyr '];
else
title_fig = [title_fig ' / int '];
end
if soloist(i)
title_fig = [title_fig ' / soloist '];
end
filename_fig = ['ResponseNeurons_' Dir.name{p}  '_' Dir.date{p} '_neuron_' num2str(i)];
filename_png = [filename_fig  '.png'];
% suptitle
suplabel(title_fig,'t');
%save figure
filename_png = fullfile(FolderFigureDelta,'IDfigures','TonesInDown','Neurons',filename_png);
set(gcf,'units','normalized','outerposition',[0 0 1 1])
saveas(gcf,filename_png,'png')
close all
title_fig = [Dir.name{p}  ' - ' Dir.date{p} ' (neuron '  num2str(i) ')'];
title_fig = [title_fig ' fr= ' round(num2str(fr(i)),2) 'Hz / layer ' num2str(layer(i))];
if putative(i)>0
title_fig = [title_fig ' / pyr '];
else
title_fig = [title_fig ' / int '];
end
if soloist(i)
title_fig = [title_fig ' / soloist '];
end
filename_fig = ['ResponseNeurons_' Dir.name{p}  '_' Dir.date{p} '_neuron_' num2str(i)];
filename_png = [filename_fig  '.png'];
% suptitle
suplabel(title_fig,'t');
%save figure
filename_png = fullfile(FolderFigureDelta,'IDfigures','TonesInDown','Neurons',filename_png);
set(gcf,'units','normalized','outerposition',[0 0 1 1])
saveas(gcf,filename_png,'png')
close all
figure, hold on
% up
subplot(2,2,1), hold on
[C,B] = CrossCorr(Range(ToneUpDown),Range(S{i}),10,100);
h(1) = plot(B, Smooth(C,1), 'color','b');
[C,B] = CrossCorr(Range(ToneUpUp),Range(S{i}),10,100);
h(2) = plot(B, Smooth(C,1), 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'up>down', 'up>up');
title('tones in Up'),
% down
subplot(2,2,2), hold on
[C,B] = CrossCorr(Range(ToneDownUp),Range(S{i}),10,100);
h(1) = plot(B, Smooth(C,1), 'color','b');
[C,B] = CrossCorr(Range(ToneDownDown),Range(S{i}),10,100);
h(2) = plot(B, Smooth(C,1), 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'down>up', 'down>down');
title('tones in Down'),
% up
subplot(2,2,3), hold on
[C,B] = CrossCorr(Range(RipplesUpDown),Range(S{i}),10,100);
h(1) = plot(B, Smooth(C,1), 'color','b');
[C,B] = CrossCorr(Range(RipplesUpUp),Range(S{i}),10,100);
h(2) = plot(B, Smooth(C,1), 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'down>up', 'down>down');
title('Ripples in up'),
% down
subplot(2,2,4), hold on
[C,B] = CrossCorr(Range(RipplesDownUp),Range(S{i}),10,100);
h(1) = plot(B, Smooth(C,1), 'color','b');
[C,B] = CrossCorr(Range(RipplesDownDown),Range(S{i}),10,100);
h(2) = plot(B, Smooth(C,1), 'color','r');
line([0 0], get(gca,'ylim'), 'color', [0.7 0.7 0.7]),
legend(h, 'down>up', 'down>down');
title('Ripples in Down'),
%% title
title_fig = [Dir.name{p}  ' - ' Dir.date{p} ' (neuron '  num2str(i) ')'];
title_fig = [title_fig ' fr= ' round(num2str(fr(i)),2) 'Hz / layer ' num2str(layer(i))];
if putative(i)>0
title_fig = [title_fig ' / pyr '];
else
title_fig = [title_fig ' / int '];
end
if soloist(i)
title_fig = [title_fig ' / soloist '];
end
filename_fig = ['ResponseNeurons_' Dir.name{p}  '_' Dir.date{p} '_neuron_' num2str(i)];
filename_png = [filename_fig  '.png'];
% suptitle
suplabel(title_fig,'t');
%save figure
filename_png = fullfile(FolderFigureDelta,'IDfigures','TonesInDown','Neurons',filename_png);
set(gcf,'units','normalized','outerposition',[0 0 1 1])
saveas(gcf,filename_png,'png')
close all
%% title
title_fig = [Dir.name{p}  ' - ' Dir.date{p} ' (neuron '  num2str(i) ')'];
title_fig = [title_fig ' fr= ' num2str(round(fr(i),2)) 'Hz / layer ' num2str(layer(i))];
if putative(i)>0
title_fig = [title_fig ' / pyr '];
else
title_fig = [title_fig ' / int '];
end
if soloist(i)
title_fig = [title_fig ' / soloist '];
end
filename_fig = ['ResponseNeurons_' Dir.name{p}  '_' Dir.date{p} '_neuron_' num2str(i)];
filename_png = [filename_fig  '.png'];
% suptitle
suplabel(title_fig,'t');
%save figure
filename_png = fullfile(FolderFigureDelta,'IDfigures','TonesInDown','Neurons',filename_png);
set(gcf,'units','normalized','outerposition',[0 0 1 1])
saveas(gcf,filename_png,'png')
close all
CorrelationTonesImpactDownInduction
load('TonePeth.mat', 'MatPeth')
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
AllPeth = [];
%get data for each record
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p AllPeth
load('TonePeth.mat', 'MatPeth')
AllPeth = [AllPeth ; MatPeth];
end
imagesc(-500:5:500, 1:size(AllPeth,1), AllPeth);
figure, hold on
imagesc(-500:5:500, 1:size(AllPeth,1), AllPeth);
figure, hold on
imagesc(-500:5:500, 1:size(AllPeth,1), AllPeth);
xlim([-500 500]), ylim([1 size(AllPeth,1)])
figure, hold on
imagesc(-500:5:500, 1:size(AllPeth,1), zscore(AllPeth));
xlim([-500 500]), ylim([1 size(AllPeth,1)])
figure, hold on
imagesc(-500:5:500, 1:size(AllPeth,1), zscore(AllPeth,2));
xlim([-500 500]), ylim([1 size(AllPeth,1)])
figure, hold on
imagesc(-500:5:500, 1:size(AllPeth,1), zscore(AllPeth,[],2));
xlim([-500 500]), ylim([1 size(AllPeth,1)])
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
AllPeth = [];
%get data for each record
for p=1:4%length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p AllPeth
load('TonePeth.mat', 'MatPeth')
AllPeth = [AllPeth ; MatPeth];
end
figure, hold on
imagesc(-500:5:500, 1:size(AllPeth,1), zscore(AllPeth,[],2));
xlim([-500 500]), ylim([1 size(AllPeth,1)])
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
AllPeth = [];
%get data for each record
for p=1:4%length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p AllPeth
%tone impact
load(fullfile(FolderDeltaDataKJ, 'neuronResponseTones.mat'), 'responses')
try
excited_neurons = find(responses.Big{p}==1);
catch
excited_neurons = find(responses.N2{p}==1 & responses.N3{p}==1);
end
load('TonePeth.mat', 'MatPeth')
AllPeth = [AllPeth ; MatPeth(excited_neurons,:)];
end
figure, hold on
imagesc(-500:5:500, 1:size(AllPeth,1), zscore(AllPeth,[],2));
xlim([-500 500]), ylim([1 size(AllPeth,1)])
figure, hold on
plot(-500:5:500, zscore(AllPeth,[],2),'k');
figure, hold on
stairs(-500:5:500, zscore(AllPeth,[],2),'k');
stairs(-500:5:500, zscore(AllPeth,[],2));
stairs(zscore(AllPeth,[],2));
stairs(zscore(AllPeth,[],2)');
figure, hold on
plot(-500:5:500, zscore(AllPeth,[],2),'k');
plot(-500:5:500, mean(zscore(AllPeth,[],2)),'r');
plot(-500:5:500, mean(zscore(AllPeth,[],2)),'r','linewidth',2);
ma=zscore(AllPeth,[],2);
figure, iamgesc(ma)
figure, imagesc(ma)
[BE,id]=sort(mean(ma(:,106:110),2));
figure, imagesc(ma(id,:))
figure, imagesc(-500:5:500, 1:length(id),ma(id,:))
figure, plot(-500:5:500, ma(id,(20:end),:),'k','linewidth',1);
figure, plot(-500:5:500, ma(id(20:end),:),'k','linewidth',1);
figure, plot(-500:5:500, ma(id(1:20),:),'k','linewidth',1);
figure, plot(-500:5:500, ma(id(1:10),:),'k','linewidth',1);
figure, plot(-500:5:500, ma(id(1:5),:),'k','linewidth',1);
figure, plot(-500:5:500, ma(id(20:end),:),'k','linewidth',1);
hold on
plot(-500:5:500, mean(ma(id(20:end),:),2)),'r','linewidth',2);
plot(-500:5:500, mean(ma(id(20:end),:),2),'r','linewidth',2);
plot(-500:5:500, mean(ma(id(20:end),:),1),'r','linewidth',2);
plot(-500:5:500, mean(ma(id(20:end),:),1),'r','linewidth',4);
figure, plot(-500:5:500, ma(id(15:end),:),'k','linewidth',1);
hold on, plot(-500:5:500, mean(ma(id(15:end),:),1),'r','linewidth',4);
m=max(ma);
[BE,id2]=max(ma);
figure, plot(-500:5:500, ma(id,:),'k','linewidth',1);
figure, imagesc(-500:5:500, 1:length(id),ma(id,:))
figure, imagesc(-500:5:500, 1:length(id),ma(id2,:))
[BE,id2]=max(ma,2);
[BE,id2]=max(ma);
figure, imagesc(-500:5:500, 1:length(id),ma(id2,:))
help max
[BE,id2]=max(ma,[],2);
figure, imagesc(-500:5:500, 1:length(id),ma(id2,:))
[BE,id2]=max(ma,[],1);
figure, imagesc(-500:5:500, 1:length(id),ma(id2,:))
figure, imagesc(-500:5:500, 1:length(id),ma(id,:))
[BE,id2]=max(ma);
ma_bis = ma;
ma_bis(1:100)=0;
ma_bis(150:end)=0;
[BE,id2]=max(ma_bis);
figure, imagesc(-500:5:500, 1:length(id2),ma(id2,:))
figure, imagesc(-500:5:500, 1:length(id2),ma(id2',:))
figure, imagesc(-500:5:500, 1:length(id2),ma)
figure, imagesc(-500:5:500, 1:length(id2),ma(id2,:))
figure, imagesc(-500:5:500, 1:length(id2),ma(:,id2))
[~,id3]=sort(id2);
figure, imagesc(-500:5:500, 1:length(id2),ma(:,id3))
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
AllPeth = [];
%get data for each record
for p=1:4%length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p AllPeth
%tone impact
load(fullfile(FolderDeltaDataKJ, 'neuronResponseTones.mat'), 'responses')
try
excited_neurons = find(responses.Big{p}==1);
catch
excited_neurons = find(responses.N2{p}==1 & responses.N3{p}==1);
end
load('TonePeth.mat', 'MatPeth')
AllPeth = [AllPeth ; MatPeth(excited_neurons,:)];
end
%% zscore
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],1);
[~,id2] = sort(idmax);
Ord_peth = Zpeth(id2,:);
figure, hold on
imagesc(-500:5:500, 1:size(Ord_peth,1), zscore(Ord_peth,[],2));
xlim([-500 500]), ylim([1 size(Ord_peth,1)])
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
PlotTonePethNeuron
[~,idmax] = max(Zpeth,[],2);
[~,id2] = sort(idmax);
Ord_peth = Zpeth(id2,:);
figure, hold on
imagesc(-500:5:500, 1:size(Ord_peth,1), zscore(Ord_peth,[],2));
xlim([-500 500]), ylim([1 size(Ord_peth,1)])
%-- 10/09/2018 18:18:20 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
PlotTonePethNeuron
%zscore
figure, hold on
imagesc(-500:5:500, 1:size(Zpeth,1), zscore(Zpeth,[],2));
xlim([-500 500]), ylim([1 size(Zpeth,1)])
line([0 0], get(gca,'ylim'), 'linewidth',2),
%ordered
figure, hold on
imagesc(-500:5:500, 1:size(Ord_peth,1), zscore(Ord_peth,[],2));
xlim([-500 500]), ylim([1 size(Ord_peth,1)])
line([0 0], get(gca,'ylim'), 'linewidth',2),
PlotTonePethNeuron
caxis([-2 6])
PlotTonePethNeuron
%% zscore
Zpeth = zscore(AllPeth,[],2);
%ordered by time response
[mean_after] = mean(Zpeth(:,100:130),2);
[~,id2] = sort(mean_after);
Ord_peth = Zpeth(id2,:);
%ordered
figure, hold on
imagesc(-500:5:500, 1:size(Ord_peth,1), zscore(Ord_peth,[],2));
xlim([-500 500]), ylim([1 size(Ord_peth,1)])
line([0 0], get(gca,'ylim'), 'linewidth',2),
PlotTonePethNeuron
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243/SpikesToAnalyse/PFCx_Neurons.mat', 'number')
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150417/Breath-Mouse-243-244-17042015/Mouse244/SpikesToAnalyse/NRT_MUA.mat')
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150417/Breath-Mouse-243-244-17042015/Mouse244/SpikesToAnalyse/NRT_Neurons.mat')
save('SpikesToAnalyse/NRT_MUA.mat','number')
ReadNeuronTonesResponseXls
edit ReadNeuronTonesResponseXls
clear
%params
filename = [FolderProjetDelta 'neurons_tones.xlsx'];
%sheets
[~,sheets] = xlsfinfo(filename);
k=1
p = str2num(sheets{k}(1));
[~,~,raw]  = xlsread(filename,k);
headers = raw(1,:);
brain_area = raw(2:end,2);
raw = cell2mat(raw(2:end,[1 3:end]));
raw(isnan(raw)) = 0;
clear
%params
filename = [FolderProjetDelta 'neurons_tones.xlsx'];
%sheets
[~,sheets] = xlsfinfo(filename);
%read
for k=1:length(sheets)
p = str2num(sheets{k}(1));
[~,~,raw]  = xlsread(filename,k);
brain_area = raw(2:end,2);
headers = raw(1,[1 3:end]);
raw = cell2mat(raw(2:end,[1 3:end]));
raw(isnan(raw)) = 0;
%% Responses
for i=2:size(raw,2)
responses.(headers{i}){p} = raw(:, i);
end
MatResp{p} = raw(:,2:end);
end
clear
%params
filename = [FolderProjetDelta 'neurons_tones.xlsx'];
%sheets
[~,sheets] = xlsfinfo(filename);
%read
for k=1:length(sheets)
p = str2num(sheets{k}(1));
[~,~,raw]  = xlsread(filename,k);
brain_area = raw(2:end,2);
headers = raw(1,[1 3:end]);
raw = cell2mat(raw(2:end,[1 3:end]));
raw(isnan(raw)) = 0;
%% Responses
for i=2:size(raw,2)
responses.(headers{i}){p} = raw(:, i);
end
responses.area{p} = brain_area;
MatResp{p} = raw(:,2:end);
end
ReadNeuronTonesResponseXls
PlotTonePethNeuron
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
AllPeth = [];
%get data for each record
for p=4%:4%length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p AllPeth
%tone impact
load(fullfile(FolderDeltaDataKJ, 'neuronResponseTones.mat'), 'responses')
%         selected_neurons = find(responses.Big{p}==1);
selected_neurons = find((responses.N2{p}==1 | responses.N3{p}==1) & strcmpi(responses.area,'pfcx'));
selected_neurons = find((responses.N2{p}==-1 | responses.N3{p}==-1) & strcmpi(responses.area,'pfcx'));
load('TonePeth.mat', 'MatPeth')
AllPeth = [AllPeth ; MatPeth(selected_neurons,:)];
end
%% zscore
Zpeth = zscore(AllPeth,[],2);
%ordered by time response
[mean_after] = mean(Zpeth(:,100:130),2);
[~,id2] = sort(mean_after);
Ord_peth = Zpeth(id2,:);
%ordered
figure, hold on
imagesc(-500:5:500, 1:size(Ord_peth,1), zscore(Ord_peth,[],2));
PlotTonePethNeuron
ToneInUpRasterNeuron
clear
%params
t_start = -5000;
t_end   = 5000;
binsize_peth = 50;
load('Ripples.mat')
load('SpikeData.mat')
tRipples = ts(Ripples(:,2)*10);
%CROSS CORR
MatCorr = [];
for i=1:length(S)
% PETH in Wake
[C,B] = CrossCorr(Range(tRipples), S{i},10,100);
MatCorr = [MatCorr, Data(peth_tsd)];
end
MatCorr = MatCorr';
[C,B] = CrossCorr(Range(tRipples), S{i},10,100);
CrossCorr(Range(tRipples), S{i},10,100);
[C,B] = CrossCorr(Range(tRipples), Range(S{i}),10,100);
%CROSS CORR
MatCorr = [];
for i=1:length(S)
% PETH in Wake
[C,B] = CrossCorr(Range(tRipples), Range(S{i}),10,100);
MatCorr = [MatCorr, Data(peth_tsd)];
end
MatCorr = MatCorr';
%CROSS CORR
MatCorr = [];
for i=1:length(S)
% PETH in Wake
[C,B] = CrossCorr(Range(tRipples), Range(S{i}),10,100);
MatCorr = [MatCorr, C];
end
MatCorr = MatCorr';
imagesc(MatCorr)
edit GenerateTonePethNeuron.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
clear
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243
%params
t_start = -5000;
t_end   = 5000;
binsize_peth = 50;
load('Ripples.mat')
load('SpikeData.mat')
tRipples = ts(Ripples(:,2)*10);
%CROSS CORR
MatCorr = [];
for i=1:length(S)
% PETH in Wake
[C,B] = CrossCorr(Range(tRipples), Range(S{i}),10,100);
MatCorr = [MatCorr, C];
end
MatCorr = MatCorr';
%% zscore
Zpeth = zscore(MatCorr,[],2);
%ordered by time response
[~,idmax] = max(Zpeth,[],2);
[~,id2] = sort(idmax);
Ord_peth = Zpeth(id2,:);
%% plot
%ordered
figure, hold on
imagesc(-500:5:500, 1:size(Ord_peth,1), zscore(Ord_peth,[],2));
xlim([-500 500]), ylim([1 size(Ord_peth,1)])
line([0 0], get(gca,'ylim'), 'linewidth',2),
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150417/Breath-Mouse-243-244-17042015/Mouse244
%params
t_start = -5000;
t_end   = 5000;
binsize_peth = 50;
load('Ripples.mat')
load('SpikeData.mat')
tRipples = ts(Ripples(:,2)*10);
%CROSS CORR
MatCorr = [];
for i=1:length(S)
% PETH in Wake
[C,B] = CrossCorr(Range(tRipples), Range(S{i}),10,100);
MatCorr = [MatCorr, C];
end
MatCorr = MatCorr';
%% zscore
Zpeth = zscore(MatCorr,[],2);
%ordered by time response
[~,idmax] = max(Zpeth,[],2);
[~,id2] = sort(idmax);
Ord_peth = Zpeth(id2,:);
%% plot
%ordered
figure, hold on
imagesc(-500:5:500, 1:size(Ord_peth,1), zscore(Ord_peth,[],2));
xlim([-500 500]), ylim([1 size(Ord_peth,1)])
line([0 0], get(gca,'ylim'), 'linewidth',2),
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150417/Breath-Mouse-243-244-17042015/Mouse244/LFPData/LFP16.mat')
LFPh=LFP;
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150417/Breath-Mouse-243-244-17042015/Mouse244/LFPData/LFP0.mat')
LFPp=LFP;
figure, plot(-500:5:500, zscore(Ord_peth,[],2),'k')
figure, plot(zscore(Ord_peth,[],2),'k')
figure, plot(-500:5:500, zscore(Ord_peth,[],2)','k')
figure, hold on
imagesc(-500:5:500, 1:size(Ord_peth,1), (Ord_peth,[],2));
xlim([-500 500]), ylim([1 size(Ord_peth,1)])
line([0 0], get(gca,'ylim'), 'linewidth',2),
imagesc(-500:5:500, 1:size(Ord_peth,1), Ord_peth);
figure, plot(-500:5:500, mean(Ord_peth),'k')
figure, plot(-500:5:500, mean(Ord_peth'),'k')
size(Ord_peth)
size(-500:5:500)
figure, plot(-500:10:500, mean(Ord_peth'),'k')
figure, plot(-500:10:490, mean(Ord_peth'),'k')
figure, plot(B, mean(Ord_peth'),'k')
figure, plot(B, mean(Ord_peth),'k')
help mjPETH
load('DownState.mat')
[A,B,C]=mjPETH(Range(S{i}),Range(tRipples),Start(down_PFCx),10,100);
edit mjPETH
[A,B,C]=mjPETH(Range(S{i}),Range(tRipples),End(down_PFCx),10,100);
[A,B,C]=mjPETH(Range(poolNeurons(S,1:43)),Range(tRipples),End(down_PFCx),10,100);
[A,B,C]=mjPETH(Range(PoolNeurons(S,1:43)),Range(tRipples),End(down_PFCx),10,100);
[A,B,C]=mjPETH(Range(PoolNeurons(S,1:43)),Range(tRipples),Start(down_PFCx),10,100);
PlotTonePethNeuron
title('Neurons on tones')
PlotTonePethNeuron
PlotRipplesPethNeuron
caxis([-4 4])
caxis([-4.5 8])
caxis([-4.5 5])
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
Fig2RipplesInDown_midthesis
Fig2RipplesInUp_midthesis
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
edit GenerateRipplesPethNeuron.m
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
p=1
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%params
t_start = -5000;
t_end   = 5000;
binsize_peth = 50;
binsize_cc = 5;
nbins_cc = 200;
%% load
load('SpikeData.mat', 'S')
% Substages
load('SleepSubstages.mat', 'Epoch')
N1 = Epoch{1}; N2 = Epoch{2}; N3 = Epoch{3}; REM = Epoch{4}; Wake = Epoch{5}; NREM = Epoch{7};
N2N3 = or(N2,N3);
% tones
load('behavResources.mat', 'ToneEvent')
%% Tones
ToneN23 = Restrict(ToneEvent, N2N3);
MatCorr = [];
i=)1
i=1
[C,B] = CrossCorr(Range(ToneN23), Range(S{i}),binsize_cc,nbins_cc);
%CROSS CORR
MatCorr = [];
for i=1:length(S)
% PETH in Wake
[C,B] = CrossCorr(Range(ToneN23), Range(S{i}),binsize_cc,nbins_cc);
MatCorr = [MatCorr, C];
end
MatCorr = MatCorr';
GenerateTonePethNeuron
GenerateRipplesPethNeuron
clear
PlotRipplesPethNeuron
PlotTonePethNeuron
PlotRipplesPethNeuron
clear
clc
GenerateRipplesPethNeuron
GenerateRipplesPethNeuron
clear
clc
LoadPathMOBs
caxis([-3 9])
caxis([-3 9])
caxis([-3.3 9.3])
caxis([-3.3 9.5])
caxis([-3.3 9.4])
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
edit GenerateRipplesPethNeuron
edit Fig4RipplesInDownEffect.m
GenerateRipplesPethNeuron
edit PlotRipplesPethNeuron.m
PlotRipplesPethNeuron
edit PathForExperimentsBasalSleepSpike.m
edit PathForExperimentsBasalSleepRhythms.m
edit PathForExperimentsDeltaSleepSpikes.m
edit PathForExperimentsBasalSleepRhythms.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/PathForExperiment/
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/PathForExperiment/
Dir=PathForExperimentsSleepRipplesSpikes('all');
GenerateRipplesPethNeuron
edit GenerateRipplesPethNeuron
Dir.path{21}
GenerateRipplesPethNeuron
Dir.path{24}
edit PathForExperimentsDeltaSleepSpikes
edit PathForExperimentsSleepRipplesSpikes.m
GenerateRipplesPethNeuron
edit GenerateRipplesPethNeuron.m
PlotRipplesPethNeuron
PlotTonePethNeuron
caxis([-3.3 9.4])
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
PlotRipplesPethNeuronOrderedTone
clear
LoadPathMOBs
PlotRipplesPethNeuronOrderedTone
PlotTonePethNeuron
PlotRipplesPethNeuron
PlotRipplesPethNeuronOrderedTone
PlotTonePethNeuron
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
PlotTonePethNeuronOrderedRipples
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
edit PathForExperimentsDeltaSleepSpikes.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
clear
Dir = PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = CheckPathForExperiment_KJ(Dir);
Dir.delay;
unique(cell2mat(Dir.delay));
PlotDeltaTonePethNeuron
str2num(Dir.delay{p})
Dir.delay{p}
PlotDeltaTonePethNeuron
edit GenerateTonePethNeuron.m
GenerateTonePethNeuron
%Substages and stages
clear op NamesOp Dpfc Epoch noise
load NREMepochsML.mat op NamesOp Dpfc Epoch noise
disp('Loading epochs from NREMepochsML.m')
[Substages,NamesSubstages]=DefineSubStages(op,noise);
GenerateTonePethNeuron
load('behavResources.mat', 'ToneEvent')
~exist('ToneEvent', 'var')
load('DeltaSleepEvent.mat', 'TONEtime2')
clear
Dir = PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = CheckPathForExperiment_KJ(Dir);
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
cd(Dir.path{2})
cd(Dir.path{3})
%-- 13/09/2018 15:45:29 --%
LoadPathMOBs
edit makeToneEvents_KJ.m
Dir=PathForExperimentsDeltaSleepSpikes('DeltaToneAll');
cd(Dir.path{1})
%% params
sessionDelta = [2 4];
all_sessions = 1:5;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
load behavResources
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
%Tonetime2
if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
clear
%% params
sessionDelta = [2 4];
all_sessions = 1:5;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
load behavResources
%% Detection with triggered tone
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
%Tonetime2
if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
basename
xml_file
foldername
load('behavResources.mat')
%% Detection with triggered tone
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
%Tonetime2
if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150421/Info/
sessionDelta = [2 5];
%% Detection with triggered tone
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
%Tonetime2
if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=1:6
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=[1:2 4:6]
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
[~, idx, ~] = intersect(DeltaDetect, TONEtime1);
DeltaDetect(idx) = [];
save DeltaSleepEvent DeltaDetect TONEtime1
if exist('TONEtime2','var')
save DeltaSleepEvent -append TONEtime2
end
clear
Dir=PathForExperimentsDeltaSleepSpikes('DeltaToneAll');
cd(Dir.path{2})
load('behavResources.mat')
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
load behavResources
%% Detection with triggered tone
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
%Tonetime2
if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
%% Detection with triggered tone
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
%Tonetime2
if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
sessionDelta = [2 4];
all_sessions = 1:5;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
%Tonetime2
if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=1:5
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
%%  Restrit DeltaDetect to remove delta followed by tone
[~, idx, ~] = intersect(DeltaDetect, TONEtime1);
DeltaDetect(idx) = [];
save DeltaSleepEvent DeltaDetect TONEtime1
if exist('TONEtime2','var')
save DeltaSleepEvent -append TONEtime2
end
cd(Dir.path{3})
clear
load behavResources
cd(Dir.path{2})
Dir=PathForExperimentsDeltaSleepSpikes('DeltaToneAll');
cd(Dir.path{2})
load('behavResources.mat')
clear
cd(Dir.path{2})
Dir=PathForExperimentsDeltaSleepSpikes('DeltaToneAll');
cd(Dir.path{2})
load behavResources.mat tpsdeb
%% params
sessionDelta = 1:6;
all_sessions = 1:6;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
end
%Tonetime2
% if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
% end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=1:6
try
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
end
%%  Restrit DeltaDetect to remove delta followed by tone
[~, idx, ~] = intersect(DeltaDetect, TONEtime1);
DeltaDetect(idx) = [];
save DeltaSleepEvent DeltaDetect TONEtime1
% if exist('TONEtime2','var')
if ~isempty(TONEtime2)
save DeltaSleepEvent -append TONEtime2
end
cd(Dir.path{3})
clear
load behavResources.mat tpsdeb
%% params
sessionDelta = 1:6;
all_sessions = 1:6;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
end
%Tonetime2
% if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
% end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=1:6
try
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
end
%%  Restrit DeltaDetect to remove delta followed by tone
[~, idx, ~] = intersect(DeltaDetect, TONEtime1);
DeltaDetect(idx) = [];
save DeltaSleepEvent DeltaDetect TONEtime1
% if exist('TONEtime2','var')
if ~isempty(TONEtime2)
save DeltaSleepEvent -append TONEtime2
end
cd(Dir.path{4})
Dir=PathForExperimentsDeltaSleepSpikes('DeltaToneAll');
cd(Dir.path{4})
clear
load behavResources.mat tpsdeb
%% params
sessionDelta = 1:6;
all_sessions = 1:6;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
%% Detection with triggered tone
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
end
%Tonetime2
% if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
% end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=1:6
try
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
end
%%  Restrit DeltaDetect to remove delta followed by tone
[~, idx, ~] = intersect(DeltaDetect, TONEtime1);
DeltaDetect(idx) = [];
save DeltaSleepEvent DeltaDetect TONEtime1
% if exist('TONEtime2','var')
if ~isempty(TONEtime2)
save DeltaSleepEvent -append TONEtime2
end
Dir=PathForExperimentsDeltaSleepSpikes('DeltaToneAll');
cd(Dir.path{5})
cleart
clear
load behavResources.mat tpsdeb
%% params
sessionDelta = 1:6;
all_sessions = 1:6;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
end
%Tonetime2
% if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
% end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=1:6
try
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
end
clear
load behavResources.mat tpsdeb
%% params
sessionDelta = 1:6;
all_sessions = 1:6;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
%% Detection with triggered tone
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
end
%Tonetime2
% if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
% end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=1:6
try
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
end
%%  Restrit DeltaDetect to remove delta followed by tone
[~, idx, ~] = intersect(DeltaDetect, TONEtime1);
DeltaDetect(idx) = [];
save DeltaSleepEvent DeltaDetect TONEtime1
% if exist('TONEtime2','var')
if ~isempty(TONEtime2)
save DeltaSleepEvent -append TONEtime2
end
Dir=PathForExperimentsDeltaSleepSpikes('DeltaToneAll');
cd(Dir.path{6})
clear
load behavResources.mat tpsdeb
%% params
sessionDelta = 1:6;
all_sessions = 1:6;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
cd('..')
%% params
clear
load behavResources.mat tpsdeb
cd('..')
sessionDelta = 1:6;
all_sessions = 1:6;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
% load behavResources.mat tpsdeb
%% params
clear
load behavResources.mat tpsdeb
cd('..')
sessionDelta = 1:6;
all_sessions = 1:6;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
% load behavResources.mat tpsdeb
%% Detection with triggered tone
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
end
%Tonetime2
% if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
% end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=1:6
try
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
end
Dir=PathForExperimentsDeltaSleepSpikes('DeltaToneAll');
cd(Dir.path{6})
%%  Restrit DeltaDetect to remove delta followed by tone
[~, idx, ~] = intersect(DeltaDetect, TONEtime1);
DeltaDetect(idx) = [];
save DeltaSleepEvent DeltaDetect TONEtime1
% if exist('TONEtime2','var')
if ~isempty(TONEtime2)
save DeltaSleepEvent -append TONEtime2
end
cd(Dir.path{7})
%% params
clear
load behavResources.mat tpsdeb
cd('..')
sessionDelta = 1:6;
all_sessions = 1:6;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
% load behavResources.mat tpsdeb
%% Detection with triggered tone
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
end
%Tonetime2
% if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
% end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=1:6
try
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
end
cd(Dir.path{7})
Dir=PathForExperimentsDeltaSleepSpikes('DeltaToneAll');
cd(Dir.path{7})
load behavResources.mat tpsdeb
sessionDelta = 1:6;
all_sessions = 1:6;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
% load behavResources.mat tpsdeb
%% Detection with triggered tone
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
end
%Tonetime2
% if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
% end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=1:6
try
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
end
%%  Restrit DeltaDetect to remove delta followed by tone
[~, idx, ~] = intersect(DeltaDetect, TONEtime1);
DeltaDetect(idx) = [];
save DeltaSleepEvent DeltaDetect TONEtime1
% if exist('TONEtime2','var')
if ~isempty(TONEtime2)
save DeltaSleepEvent -append TONEtime2
end
cd(Dir.path{8})
%% params
clear
load behavResources.mat tpsdeb
sessionDelta = 1:6;
all_sessions = 1:6;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
% load behavResources.mat tpsdeb
%% Detection with triggered tone
%Tonetime1
TONEtime1 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
end
%Tonetime2
% if exist(fullfile(foldername,'Info', [basename '-0' num2str(sessionDelta(1)) '-DeltaSleep-fires_actual_time.mat']), 'file')==2
TONEtime2 = [];
for i=1:length(sessionDelta)
s = sessionDelta(i);
%fires actual
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
% end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=1:6
try
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
end
%%  Restrit DeltaDetect to remove delta followed by tone
[~, idx, ~] = intersect(DeltaDetect, TONEtime1);
DeltaDetect(idx) = [];
save DeltaSleepEvent DeltaDetect TONEtime1
% if exist('TONEtime2','var')
if ~isempty(TONEtime2)
save DeltaSleepEvent -append TONEtime2
end
clear
Dir = PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = CheckPathForExperiment_KJ(Dir);
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
load('behavResources.mat', 'ToneEvent')
~exist('ToneEvent', 'var')
try
load('DeltaSleepEvent.mat', 'TONEtime2')
delay = Dir.delay{p}*1E4;
tEvents = ts(TONEtime2 + delay);
catch
load('DeltaSleepEvent.mat', 'TONEtime2')
delay = Dir.delay{p}*1E4;
tEvents = ts(TONEtime2 + delay);
end
clear
Dir = PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = CheckPathForExperiment_KJ(Dir);
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
load('behavResources.mat', 'ToneEvent')
if ~exist('ToneEvent', 'var')
try
load('DeltaSleepEvent.mat', 'TONEtime2')
delay = Dir.delay{p}*1E4;
ToneEvent = ts(TONEtime2 + delay);
catch
load('DeltaSleepEvent.mat', 'TONEtime1')
delay = Dir.delay{p}*1E4;
ToneEvent = ts(TONEtime1 + delay);
end
save behavResources.mat -append ToneEvent
end
end
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse244
edit makeToneEvents_KJ.m
clear
load behavResources.mat tpsdeb
%% params
sessionDelta = 1:6;
all_sessions = 1:6;
foldername=pwd;
filelist = dir('*.xml');
for i=1:length(filelist)
if ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
basename = xml_file(1:end-4);
%% Detection with triggered tone
%Tonetime1
TONEtime1 = [];
for i=1:length(all_sessions)
s = all_sessions(i);
%fires
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_matrix']));
TONEtime1 = [TONEtime1 ; fires(:,1)+tpsdeb{s}*1E4];
end
end
%Tonetime2
TONEtime2 = [];
for i=1:length(all_sessions)
s = all_sessions(i);
%fires actual
try
load(fullfile(foldername,'Info', [basename '-0' num2str(s) '-DeltaSleep-fires_actual_time']));
TONEtime2 = [TONEtime2 ; fires_actual_time(:,1)+tpsdeb{s}*1E4];
end
end
%% Detection for non Stim sessions
DeltaDetect = [];
for i=1:length(all_sessions)
s = all_sessions(i);
try
if ismember(i,sessionDelta)
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-DeltaSleep-detections_matrix']));
else
load(fullfile(foldername,'Info', [basename '-0' num2str(i) '-Sleep-detections_matrix']));
end
DeltaDetect = [DeltaDetect ; detections(:,1)+tpsdeb{i}*1E4];
end
end
%%  Restrit DeltaDetect to remove delta followed by tone
[~, idx, ~] = intersect(DeltaDetect, TONEtime1);
DeltaDetect(idx) = [];
save DeltaSleepEvent DeltaDetect TONEtime1
% if exist('TONEtime2','var')
if ~isempty(TONEtime2)
save DeltaSleepEvent -append TONEtime2
end
clear
Dir = PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = CheckPathForExperiment_KJ(Dir);
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
load('behavResources.mat', 'ToneEvent')
if ~exist('ToneEvent', 'var')
try
load('DeltaSleepEvent.mat', 'TONEtime2')
delay = Dir.delay{p}*1E4;
ToneEvent = ts(TONEtime2 + delay);
catch
load('DeltaSleepEvent.mat', 'TONEtime1')
delay = Dir.delay{p}*1E4;
ToneEvent = ts(TONEtime1 + delay);
end
save behavResources.mat -append ToneEvent
end
end
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150417/Breath-Mouse-243-244-17042015/Mouse243
GenerateTonePethNeuron
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
clear
PlotDeltaTonePethNeuron
GenerateTonePethNeuron
PlotDeltaTonePethNeuron
edit PlotTonePethNeuron.m
PlotTonePethNeuron
PlotRipplesPethNeuron
edit GenerateRipplesPethNeuron.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
edit Fig4RipplesCorrectedInUpEffect.m
GenerateRipplesCorrectedPethNeuron
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
clear
Dir = PathForExperimentsSleepRipplesSpikes('all');
Dir = CheckPathForExperiment_KJ(Dir);
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
load('RipplesPeth.mat', 'MatCorr', 't_corr')
save RipplesCorrectedPeth.mat MatCorr t_corr
end
GenerateRipplesPethNeuron
PlotRipplesPethNeuron
PlotRipplesCorrectedPethNeuron
PlotRipplesPethNeuron
plot(-500:5:500, y_mua),
PlotRipplesPethNeuron
PlotRipplesCorrectedPethNeuron
clc
PlotDeltaTonePethNeuron
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
edit PlotTonePethNeuron.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
PlotTonePethNeuron
PlotRipplesPethNeuron
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
PlotRipplesPethNeuronOrderedTone
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
PlotTonePethNeuronOrderedRipples
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
PlotRipplesCorrectedPethNeuron
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
PlotRipplesCorrectedPethNeuron
y_mua_corr = y_mua
AllPeth = [];
%get data for each record
for p=1:length(Dir.path)
eval(['cd(Dir.path{',num2str(p),'}'')'])
%     disp(' ')
%     disp('****************************************************************')
%     disp(pwd)
clearvars -except Dir p AllPeth y_mua_corr
%ripples correlogram
load(fullfile(FolderDeltaDataKJ, 'neuronResponseTones.mat'), 'responses')
load('RipplesPeth.mat', 'MatCorr', 't_corr')
AllPeth = [AllPeth ; MatCorr];
%         selected_neurons = find(responses.Big{p}==1);
%         selected_neurons = find((responses.N2{p}==1 | responses.N3{p}==1) & strcmpi(responses.area{p},'pfcx'));
%         selected_neurons = find((responses.N2{p}==-1 | responses.N3{p}==-1) & strcmpi(responses.area{p},'pfcx'));
%         AllPeth = [AllPeth ; MatCorr(selected_neurons,:)];
end
%% zscore
Zpeth = zscore(AllPeth,[],2);
%ordered by amplitude response
[mean_after] = mean(Zpeth(:,100:130),2);
[~,id2] = sort(mean_after);
Ord_peth = Zpeth(id2,:);
%ordered by time response
[~,idmax] = max(Zpeth,[],2);
[~,id2] = sort(idmax);
Ord_peth = Zpeth(id2,:);
y_mua = mean(Ord_peth,1);
figure, hold on
plot(-500:5:500, y_mua), hold on
plot(-500:5:500, y_mua_corr), hold on
line([0 0], get(gca,'ylim'), 'linewidth',2),
plot(-500:5:500, y_mua_corr-y_mua), hold on
edit GenerateRipplesCorrectedPethNeuron.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MidThesis2/
edit Fig1TonesInDownEffect.m
PlotRipplesPethNeuronOrderedRip
%ordered
figure, hold on
for i=1:4
subplot(2,2,i), hold on
imagesc(-500:5:500, 1:size(Opeth{i},1), Opeth{i});
line([0 0], get(gca,'ylim'), 'linewidth',2),
caxis([-3.3 9.4]),
yyaxis right
hold on, plot(-500:5:500, y_peth{i}, '-w', 'linewidth', 2);
set(gca,'YLim', [-0.6 1.2]);
yyaxis left
set(gca,'YLim', [0 size(Opeth{i},1)], 'XLim',[-500 500]);
xlabel('time relative to ripples (ms)'), ylabel('#neurons'),
end
suplabel('Neurons on ripples - ordered by delay of response on tones','t');
PlotRipplesPethNeuronOrderedRip
edit Fig1TonesInDownEffect.m
PlotRipplesPethNeuronOrderedRip
gap = [0.1 0.06];
%ordered
figure, hold on
for i=1:4
subtightplot(2,2,i,gap), hold on
imagesc(-500:5:500, 1:size(Opeth{i},1), Opeth{i});
line([0 0], get(gca,'ylim'), 'linewidth',2),
caxis([-2 6]),
yyaxis right
if i==1 || i==4
hold on, plot(-500:5:500, y_peth{i}, '-k', 'linewidth', 2);
%         set(gca,'YLim', [-0.6 1.2]);
end
yyaxis left
set(gca,'YLim', [0 size(Opeth{i},1)], 'XLim',[-500 500]);
xlabel('time relative to ripples (ms)'), ylabel('#neurons'),
end
gap = [0.1 0.06];
%ordered
figure, hold on
for i=1:4
subtightplot(2,2,i,gap), hold on
imagesc(-500:5:500, 1:size(Opeth{i},1), Opeth{i});
line([0 0], get(gca,'ylim'), 'linewidth',2),
caxis([-2 6]),
yyaxis right
if i==1 || i==4
hold on, plot(-500:5:500, y_peth{i}, '-k', 'linewidth', 2);
set(gca,'YLim', [-0.5 1]);
end
yyaxis left
set(gca,'YLim', [0 size(Opeth{i},1)], 'XLim',[-500 500]);
xlabel('time relative to ripples (ms)'), ylabel('#neurons'),
end
suplabel('Neurons on ripples - ordered by delay of response on tones','t');
gap = [0.1 0.06];
%ordered
figure, hold on
for i=1:4
subtightplot(2,2,i,gap), hold on
imagesc(-500:5:500, 1:size(Opeth{i},1), Opeth{i});
line([0 0], get(gca,'ylim'), 'linewidth',2),
caxis([-2 6]),
yyaxis right
if i==1 || i==4
hold on, plot(-500:5:500, y_peth{i}, '-k', 'linewidth', 2);
set(gca,'YLim', [-0.5 1]);
end
yyaxis left
set(gca,'YLim', [0 size(Opeth{i},1)], 'XLim',[-500 500]);
xlabel('time relative to ripples (ms)'), ylabel('#neurons'),
end
GenerateRipplesCorrectedPethNeuron2
%-- 13/09/2018 20:34:54 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/
load(fullfile(FolderSlowDyn,'PathSlowDyn.mat'))
Dir.filename{1}
Dir.filereference{1}
load(fullfile(FolderSlowDyn,'PathSlowDyn.mat'))
for p=1:length(Dir.filereference)
clearvars -except Dir p
datafile = fullfile(FolderSlowDynID,['IdFigureData_' num2str(Dir.filereference{p}) '.mat']);
if exist(datafile,'file')~=2
disp(' ')
disp('****************************************************************')
disp(Dir.filereference{p})
end
end
load(fullfile(FolderSlowDyn,'PathSlowDyn.mat'))
list_files = [];
for p=1:length(Dir.filereference)
clearvars -except Dir p
datafile = fullfile(FolderSlowDynID,['IdFigureData_' num2str(Dir.filereference{p}) '.mat']);
if exist(datafile,'file')~=2
disp(' ')
disp('****************************************************************')
disp(Dir.filereference{p})
list_files = [list_files ; Dir.filereference{p}];
end
end
load(fullfile(FolderSlowDyn,'PathSlowDyn.mat'))
list_files = [];
for p=1:length(Dir.filereference)
datafile = fullfile(FolderSlowDynID,['IdFigureData_' num2str(Dir.filereference{p}) '.mat']);
if exist(datafile,'file')~=2
disp(' ')
disp('****************************************************************')
disp(Dir.filereference{p})
list_files = [list_files ; Dir.filereference{p}];
end
end
sort(list_files);
clear
load(fullfile(FolderSlowDyn,'PathSlowDyn.mat'))
all_ref = sort(Dir.filereference);
all_ref = sort(cell2mat(Dir.filereference));
load(fullfile(FolderSlowDyn,'PathSlowDyn.mat'))
all_ref = sort(cell2mat(Dir.filereference));
info_files = [all_ref nan(length(all_ref),1)];
for p=1:length(all_ref)
datafile = fullfile(FolderSlowDynID,['IdFigureData_' num2str(all_ref{p}) '.mat']);
if exist(datafile,'file')~=2
disp(' ')
disp('****************************************************************')
disp(all_ref{p})
info_files(p,2) = 0;
end
end
load(fullfile(FolderSlowDyn,'PathSlowDyn.mat'))
all_ref = sort(cell2mat(Dir.filereference));
info_files = [all_ref nan(length(all_ref),1)];
datafile = fullfile(FolderSlowDynID,['IdFigureData_' num2str(all_ref{p}) '.mat']);
load(fullfile(FolderSlowDyn,'PathSlowDyn.mat'))
all_ref = sort(cell2mat(Dir.filereference));
info_files = [all_ref nan(length(all_ref),1)];
for p=1:length(all_ref)
datafile = fullfile(FolderSlowDynID,['IdFigureData_' num2str(all_ref(p)) '.mat']);
if exist(datafile,'file')~=2
disp(' ')
disp('****************************************************************')
disp(all_ref(p))
info_files(p,2) = 0;
end
end
load(fullfile(FolderSlowDyn,'PathSlowDyn.mat'))
all_ref = sort(cell2mat(Dir.filereference));
list_files = [];
for p=1:length(all_ref)
datafile = fullfile(FolderSlowDynID,['IdFigureData_' num2str(all_ref(p)) '.mat']);
if exist(datafile,'file')~=2
disp(' ')
disp('****************************************************************')
disp(all_ref(p))
list_files = [list_files ; all_ref(p)];
end
end
%-- 14/09/2018 11:26:11 --%
LoadPathMOBs
clear
Dir = PathForExperimentsSleepRipplesSpikes('all');
Dir = CheckPathForExperiment_KJ(Dir);
cd(Dir.path{8})
GenerateRipplesCorrectedPethNeuron
GenerateTonePethNeuron
GenerateRipplesCorrectedPethNeuron
edit Fig1TonesInDownEffect.m
GenerateRipplesCorrectedPethNeuron
binsize_mua = 2;
GenerateRipplesCorrectedPethNeuron
edit PlotRipplesCorrectedPethNeuron2.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
PlotRipplesCorrectedPethNeuron_bis
GenerateRipplesPethNeuron
PlotRipplesPethNeuron
edit AssessToneEffectMUAtype.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
ParcoursToneNeuronCrossCorr
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
%load
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursToneNeuronCrossCorr.mat'))
ParcoursToneNeuronCrossCorrPlot
ParcoursRipplesNeuronCrossCorrPlot
ParcoursToneNeuronCrossCorrPlot
edit GenerateRipplesCorrectedPethNeuron.m
edit GenerateRipplesCorrectedPethNeuron2.m
edit Fig1TonesInDownEffect.m
edit GenerateRipplesCorrectedPethNeuron2.m
ParcoursRipplesNoDownNeuronCrossCorr
clc
clear
close all
ParcoursRipplesNoDownbefNeuronCrossCorrPlot;
ParcoursRipplesNoDownNeuronCrossCorrPlot;
ParcoursToneNeuronCrossCorrPlot;
ParcoursRipplesNeuronCrossCorrPlot;
edit ParcoursRipplesNeuronCrossCorr.m
ParcoursRipplesNeuronCrossCorr
edit ParcoursRipplesNoDownNeuronCrossCorrPlot
edit ParcoursRipplesNoDownbefNeuronCrossCorr.m
edit ParcoursRipplesNeuronCrossCorrPlot.m
ParcoursRipplesNoDownbefNeuronCrossCorrPlot;
ParcoursRipplesNoDownNeuronCrossCorrPlot;
ParcoursToneNeuronCrossCorrPlot;
ParcoursRipplesNeuronCrossCorrPlot;
clc
clear
ParcoursToneNeuronCrossCorrPlot;
ParcoursRipplesNeuronCrossCorrPlot;
ParcoursRipplesNoDownbefNeuronCrossCorrPlot;
ParcoursRipplesNoDownNeuronCrossCorrPlot;
%-- 14/09/2018 17:31:10 --%
LoadPathMOBs
edit Fig1TonesInDown_midthesis.m
edit FiguresTonesInDownPerRecord.m
edit FiguresTonesInDownPerRecordPlot.m
FiguresTonesInDownPerRecordPlot
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
load(fullfile(FolderDeltaDataKJ, 'neuronResponseTones.mat'), 'responses')
edit AssessToneEffectMUAtype.m
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150329/Breath-Mouse-243-244-29032015/Mouse243/SpikesToAnalyse/PFCx_Neurons.mat')
load('SpikesToAnalyse/PFCx_Neurons.mat')
NumNeurons = number; clear number
ParcoursRipplesNoDownbefNeuronCrossCorr
%-- 14/09/2018 18:02:34 --%
LoadPathMOBs
ParcoursRipplesNoDownNeuronCrossCorr
ParcoursToneNeuronCrossCorrPlot;
ParcoursRipplesNeuronCrossCorrPlot;
ParcoursRipplesNoDownbefNeuronCrossCorrPlot;
ParcoursRipplesNoDownNeuronCrossCorrPlot;
ylim([-0.5 0.6])
ylim([0 1400])
ylim([0 1450])
ylim([-0.5 0.6])
edit ParcoursRipplesNeuronCrossCorrPlot.m
%load
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
%% concatenate
AllPeth = [];
AllPethStart = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatRipples{p}];
AllPethStart = [AllPethStart ; rippeth_res.start.MatRipples{p}];
end
t_corr = rippeth_res.t_corr{1};
%% zscore
Zpeth = zscore(AllPeth,[],2);
ZpethStart = zscore(AllPethStart,[],2);
%ordered by time response
[~,idmax] = max(Zpeth,[],2);
[~,id2] = sort(idmax);
Ord_peth = Zpeth(id2,:);
%ordered by time response start
[~,idmax] = max(ZpethStart,[],2);
[~,id2] = sort(idmax);
Ord_pethStart = ZpethStart(id2,:);
%mean mua
y_mua = mean(Ord_peth,1);
y_mua_start = mean(Ord_pethStart,1);
figure, imagesc(AllPeth)
figure, imagesc(Ord_peth)
figure, imagesc(Ord_peth), axis xy
[Cr,Pr]=coorcoef(Ord_peth);
[Cr,Pr]=corrcoef(Ord_peth);
figure, iamgesc(Cr)
figure, imagesc(Cr)
caxis([-0.5 0.5])
caxis([-1.5 1.5])
caxis([-2.5 2.5])
caxis([-2.5 3.5])
caxis([-3.5 3.5])
caxis([-4.5 4.5])
caxis([-0.5 0.5])
hold on, line([100 100],[0.5 1450])
hold on, line([100 100],[0.5 200.5])
ax
axis xy
figure, plot(mean(Ord_peth(800:1200,:)),'k')
hold on, plot(mean(Ord_peth(300:700,:)),'r')
hold on, plot(mean(Ord_peth(1:300,:)),'m')
hold on, plot(mean(Ord_peth(1200:1400,:)),'b')
[~,idmax] = max(Zpeth,[],2);
[~,id2] = sort(idmax);
figure, imagesc(AllPeth(id2,:))
figure, imagesc(log(AllPeth(id2,:)))
%% Response to all ripples
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesfNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
AllPeth = [AllPeth ; ripcor_res.MatRipples{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Response to ripples no down bef
clearvars -except Opeth_all id2xall
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownbefNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
AllPeth = [AllPeth ; ripcor_res.MatRipples{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idbef] = sort(idmax);
Opeth_bef = Zpeth(idbef,:);
%% Response to all ripples
clearvars -except Opeth_all id2xall Opeth_bef idbef
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
AllPeth = [AllPeth ; ripcor_res.MatRipples{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idnodown] = sort(idmax);
Opeth_nodown = Zpeth(idnodown,:);
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
AllPeth = [AllPeth ; ripcor_res.MatRipples{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Response to ripples no down bef
clearvars -except Opeth_all id2xall
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownbefNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
AllPeth = [AllPeth ; ripcor_res.MatRipples{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idbef] = sort(idmax);
Opeth_bef = Zpeth(idbef,:);
%% Response to all ripples
clearvars -except Opeth_all id2xall Opeth_bef idbef
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
AllPeth = [AllPeth ; ripcor_res.MatRipples{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idnodown] = sort(idmax);
Opeth_nodown = Zpeth(idnodown,:);
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownNeuronCrossCorr.mat'))
%% Response to all ripples
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; ripcor_res.MatRipples{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Response to ripples no down bef
clearvars -except Opeth_all id2xall
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownbefNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
AllPeth = [AllPeth ; ripcor_res.MatRipples{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idbef] = sort(idmax);
Opeth_bef = Zpeth(idbef,:);
%% Response to all ripples
clearvars -except Opeth_all id2xall Opeth_bef idbef
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
AllPeth = [AllPeth ; ripnodown_res.MatRipples{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idnodown] = sort(idmax);
Opeth_nodown = Zpeth(idnodown,:);
%% Response to all ripples
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatRipples{p}];
end
t_corr = rippeth_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Response to ripples no down bef
clearvars -except Opeth_all id2xall
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownbefNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
AllPeth = [AllPeth ; ripcor_res.MatRipples{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idbef] = sort(idmax);
Opeth_bef = Zpeth(idbef,:);
%% Response to all ripples
clearvars -except Opeth_all id2xall Opeth_bef idbef
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripnodown_res.path)
AllPeth = [AllPeth ; ripnodown_res.MatRipples{p}];
end
t_corr = ripnodown_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idnodown] = sort(idmax);
Opeth_nodown = Zpeth(idnodown,:);
%% Response to all ripples
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatRipples{p}];
end
t_corr = rippeth_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Response to ripples no down bef
clearvars -except Opeth_all id2xall
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownbefNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
AllPeth = [AllPeth ; ripcor_res.MatRipples{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idbef] = sort(idmax);
Opeth_bef = Zpeth(idbef,:);
%% Response to all ripples
clearvars -except Opeth_all id2xall Opeth_bef idbef
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripnodown_res.path)
AllPeth = [AllPeth ; ripnodown_res.MatRipples{p}];
end
t_corr = ripnodown_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idnodown] = sort(idmax);
Opeth_nodown = Zpeth(idnodown,:);
%% PLOT
figure,
subplot(4,1,1), hold on,
plot(mean(Opeth(800:1200,:)),'k')
hold on, plot(mean(Opeth(300:700,:)),'r')
hold on, plot(mean(Opeth(1:300,:)),'m')
hold on, plot(mean(Opeth(1200:1400,:)),'b')
title('all ripples')
subplot(4,1,2), hold on,
Opeth_bef = Opeth_bef(id2xall,:);
plot(mean(Opeth_bef(800:1200,:)),'k')
hold on, plot(mean(Opeth_bef(300:700,:)),'r')
hold on, plot(mean(Opeth_bef(1:300,:)),'m')
hold on, plot(mean(Opeth_bef(1200:1400,:)),'b')
title('ripples no down before')
subplot(4,1,3), hold on,
Opeth_nodown = Opeth_nodown(id2xall,:);
plot(mean(Opeth_nodown(800:1200,:)),'k')
hold on, plot(mean(Opeth_nodown(300:700,:)),'r')
hold on, plot(mean(Opeth_nodown(1:300,:)),'m')
hold on, plot(mean(Opeth_nodown(1200:1400,:)),'b')
title('ripples no down around')
figure,
subplot(4,1,1), hold on,
plot(mean(Opeth_all(800:1200,:)),'k')
hold on, plot(mean(Opeth_all(300:700,:)),'r')
hold on, plot(mean(Opeth_all(1:300,:)),'m')
hold on, plot(mean(Opeth_all(1200:1400,:)),'b')
title('all ripples')
subplot(4,1,2), hold on,
Opeth_bef = Opeth_bef(id2xall,:);
plot(mean(Opeth_bef(800:1200,:)),'k')
hold on, plot(mean(Opeth_bef(300:700,:)),'r')
hold on, plot(mean(Opeth_bef(1:300,:)),'m')
hold on, plot(mean(Opeth_bef(1200:1400,:)),'b')
title('ripples no down before')
subplot(4,1,3), hold on,
Opeth_nodown = Opeth_nodown(id2xall,:);
plot(mean(Opeth_nodown(800:1200,:)),'k')
hold on, plot(mean(Opeth_nodown(300:700,:)),'r')
hold on, plot(mean(Opeth_nodown(1:300,:)),'m')
hold on, plot(mean(Opeth_nodown(1200:1400,:)),'b')
title('ripples no down around')
figure,
subplot(2,2,1), hold on,
plot(mean(Opeth_all(800:1200,:)),'k')
hold on, plot(mean(Opeth_all(300:700,:)),'r')
hold on, plot(mean(Opeth_all(1:300,:)),'m')
hold on, plot(mean(Opeth_all(1200:1400,:)),'b')
title('all ripples')
subplot(2,2,2), hold on,
Opeth_bef = Opeth_bef(id2xall,:);
plot(mean(Opeth_bef(800:1200,:)),'k')
hold on, plot(mean(Opeth_bef(300:700,:)),'r')
hold on, plot(mean(Opeth_bef(1:300,:)),'m')
hold on, plot(mean(Opeth_bef(1200:1400,:)),'b')
title('ripples no down before')
subplot(2,2,3), hold on,
Opeth_nodown = Opeth_nodown(id2xall,:);
plot(mean(Opeth_nodown(800:1200,:)),'k')
hold on, plot(mean(Opeth_nodown(300:700,:)),'r')
hold on, plot(mean(Opeth_nodown(1:300,:)),'m')
hold on, plot(mean(Opeth_nodown(1200:1400,:)),'b')
title('ripples no down around')
%% Response to all ripples
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatN2N3{p}];
end
t_corr = rippeth_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Response to ripples no down bef
clearvars -except Opeth_all id2xall
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownbefNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
AllPeth = [AllPeth ; ripcor_res.MatN2N3{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idbef] = sort(idmax);
Opeth_bef = Zpeth(idbef,:);
%% Response to all ripples
clearvars -except Opeth_all id2xall Opeth_bef idbef
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripnodown_res.path)
AllPeth = [AllPeth ; ripnodown_res.MatN2N3{p}];
end
t_corr = ripnodown_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idnodown] = sort(idmax);
Opeth_nodown = Zpeth(idnodown,:);
%% PLOT
figure,
subplot(2,2,1), hold on,
plot(t_corr,mean(Opeth_all(800:1200,:)),'k')
hold on, plot(t_corr,mean(Opeth_all(300:700,:)),'r')
hold on, plot(t_corr,mean(Opeth_all(1:300,:)),'m')
hold on, plot(t_corr,mean(Opeth_all(1200:1400,:)),'b')
title('all ripples')
subplot(2,2,2), hold on,
Opeth_bef = Opeth_bef(id2xall,:);
plot(t_corr,mean(Opeth_bef(800:1200,:)),'k')
hold on, plot(t_corr,mean(Opeth_bef(300:700,:)),'r')
hold on, plot(t_corr,mean(Opeth_bef(1:300,:)),'m')
hold on, plot(t_corr,mean(Opeth_bef(1200:1400,:)),'b')
title('ripples no down before')
subplot(2,2,3), hold on,
Opeth_nodown = Opeth_nodown(id2xall,:);
plot(t_corr,mean(Opeth_nodown(800:1200,:)),'k')
hold on, plot(t_corr,mean(Opeth_nodown(300:700,:)),'r')
hold on, plot(t_corr,mean(Opeth_nodown(1:300,:)),'m')
hold on, plot(t_corr,mean(Opeth_nodown(1200:1400,:)),'b')
title('ripples no down around')
subplot(2,2,3), hold on,
Opeth_nodown = Opeth_nodown(id2xall,:);
plot(t_corr,runmean(mean(Opeth_nodown(800:1200,:)),2),'k')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(300:700,:)),2),'r')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(1:300,:)),2),'m')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(1200:1400,:)),2),'b')
figure
subplot(2,2,3), hold on,
Opeth_nodown = Opeth_nodown(id2xall,:);
plot(t_corr,runmean(mean(Opeth_nodown(800:1200,:)),2),'k')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(300:700,:)),2),'r')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(1:300,:)),2),'m')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(1200:1400,:)),2),'b')
figure,
subplot(2,2,1), hold on,
plot(t_corr,mean(Opeth_all(800:1200,:)),2),'k')
hold on, plot(t_corr,runmean(mean(Opeth_all(300:700,:)),2),'r')
hold on, plot(t_corr,runmean(mean(Opeth_all(1:300,:)),2),'m')
hold on, plot(t_corr,runmean(mean(Opeth_all(1200:1400,:)),2),'b')
title('all ripples')
subplot(2,2,2), hold on,
Opeth_bef = Opeth_bef(id2xall,:);
plot(t_corr,runmean(mean(Opeth_bef(800:1200,:)),2),'k')
hold on, plot(t_corr,runmean(mean(Opeth_bef(300:700,:)),2),'r')
hold on, plot(t_corr,runmean(mean(Opeth_bef(1:300,:)),2),'m')
hold on, plot(t_corr,runmean(mean(Opeth_bef(1200:1400,:)),2),'b')
title('ripples no down before')
subplot(2,2,3), hold on,
Opeth_nodown = Opeth_nodown(id2xall,:);
plot(t_corr,runmean(mean(Opeth_nodown(800:1200,:)),2),'k')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(300:700,:)),2),'r')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(1:300,:)),2),'m')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(1200:1400,:)),2),'b')
title('ripples no down around')
figure,
subplot(2,2,1), hold on,
plot(t_corr,runmean(mean(Opeth_all(800:1200,:)),2),'k')
hold on, plot(t_corr,runmean(mean(Opeth_all(300:700,:)),2),'r')
hold on, plot(t_corr,runmean(mean(Opeth_all(1:300,:)),2),'m')
hold on, plot(t_corr,runmean(mean(Opeth_all(1200:1400,:)),2),'b')
title('all ripples')
subplot(2,2,2), hold on,
Opeth_bef = Opeth_bef(id2xall,:);
plot(t_corr,runmean(mean(Opeth_bef(800:1200,:)),2),'k')
hold on, plot(t_corr,runmean(mean(Opeth_bef(300:700,:)),2),'r')
hold on, plot(t_corr,runmean(mean(Opeth_bef(1:300,:)),2),'m')
hold on, plot(t_corr,runmean(mean(Opeth_bef(1200:1400,:)),2),'b')
title('ripples no down before')
subplot(2,2,3), hold on,
Opeth_nodown = Opeth_nodown(id2xall,:);
plot(t_corr,runmean(mean(Opeth_nodown(800:1200,:)),2),'k')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(300:700,:)),2),'r')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(1:300,:)),2),'m')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(1200:1400,:)),2),'b')
title('ripples no down around')
%% Response to all ripples
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatN2N3{p}];
end
t_corr = rippeth_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Response to ripples no down bef
clearvars -except Opeth_all id2xall
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownbefNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
AllPeth = [AllPeth ; ripcor_res.MatN2N3{p}];
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idbef] = sort(idmax);
Opeth_bef = Zpeth(id2xall,:);
%% Response to all ripples
clearvars -except Opeth_all id2xall Opeth_bef idbef
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripnodown_res.path)
AllPeth = [AllPeth ; ripnodown_res.MatN2N3{p}];
end
t_corr = ripnodown_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idnodown] = sort(idmax);
Opeth_nodown = Zpeth(id2xall,:);
%% PLOT
figure,
subplot(2,2,1), hold on,
plot(t_corr,runmean(mean(Opeth_all(800:1200,:)),2),'k')
hold on, plot(t_corr,runmean(mean(Opeth_all(300:700,:)),2),'r')
hold on, plot(t_corr,runmean(mean(Opeth_all(1:300,:)),2),'m')
hold on, plot(t_corr,runmean(mean(Opeth_all(1200:1400,:)),2),'b')
title('all ripples')
subplot(2,2,2), hold on,
plot(t_corr,runmean(mean(Opeth_bef(800:1200,:)),2),'k')
hold on, plot(t_corr,runmean(mean(Opeth_bef(300:700,:)),2),'r')
hold on, plot(t_corr,runmean(mean(Opeth_bef(1:300,:)),2),'m')
hold on, plot(t_corr,runmean(mean(Opeth_bef(1200:1400,:)),2),'b')
title('ripples no down before')
subplot(2,2,3), hold on,
plot(t_corr,runmean(mean(Opeth_nodown(800:1200,:)),2),'k')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(300:700,:)),2),'r')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(1:300,:)),2),'m')
hold on, plot(t_corr,runmean(mean(Opeth_nodown(1200:1400,:)),2),'b')
title('ripples no down around')
ParcoursRipplesNoDownbefNeuronCrossCorrPlot
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
NeuronsResponseToRipples_KJ
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
%-- 15/09/2018 20:30:40 --%
LoadPathMOBs
edit Fig1TonesInDown_midthesis.m
Fig1TonesInDown_midthesis
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
load(fullfile(FolderSlowDyn,'PathSlowDyn.mat'))
clear
%params
filename = [FolderSlowDyn 'Slowdyn_dataset.xlsx'];
folder_record = FolderSlowDynRecords;
%read
[~,~,raw]  = xlsread(filename);
cd(FolderSlowDyn)
clear
%params
filename = [FolderSlowDyn 'Slowdyn_dataset_sorted.xlsx'];
folder_record = FolderSlowDynRecords;
%read
[~,~,raw]  = xlsread(filename);
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
clear
%params
filename = [FolderSlowDyn 'Slowdyn_dataset_sorted.xlsx'];
folder_record = FolderSlowDynRecords;
%read
[~,~,raw]  = xlsread(filename);
%% Dir
Dir.filereference = raw(2:end, 3);
Dir.date = datetime(cell2mat(raw(2:end, 4)),'ConvertFrom','posixtime');
Dir.gender = raw(2:end, 7);
Dir.subject = raw(2:end, 8);
Dir.age = raw(2:end, 10);
Dir.status = raw(2:end, 12);
for i=1:length(Dir.filereference)
Dir.filename{i,1}= [folder_record num2str(Dir.filereference{i}) '.h5'];
end
%% saving data
cd(FolderSlowDyn)
save PathSlowDyn2.mat Dir
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
ReadSlowdynDataset2
clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
HistogramDatasetSlowdyn
all_ages = Dir.age;
all_genders = Dir.gender;
all_subject = Dir.subject;
hist(all_ages)
all_ages = cell2mat(Dir.age);
hist(all_ages)
hist(all_ages;50)
hist(all_ages,50)
HistogramDatasetSlowdyn
hist(all_genders)
sum(all_genders==1)
sum(all_genders==2)
edit Fig1TonesInDown_midthesis.m
subject_list = unique(all_subject);
HistogramDatasetSlowdyn
clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
p=1
clearvars -except Dir p
disp(' ')
disp('****************************************************************')
disp(Dir.filename{p})
[signals, ~, stimulations, StageEpochs, labels_eeg] = GetRecordDreem(Dir.filename{p});
clearvars -except Dir p
disp(' ')
disp('****************************************************************')
disp(Dir.filename{p})
[signals, ~, stimulations, StageEpochs, labels_eeg] = GetRecordDreem(Dir.filename{p});
%load slow waves
sw_file = fullfile(FolderSlowDynPreprocess, 'SlowWaves', ['SlowWaves_' num2str(Dir.filereference{p}) '.mat']);
if exist(sw_file,'file')==2
load(sw_file);
else
[SlowWaveEpochs, ~] = MakeSlowWavesDreemRecord(p,Dir,'savefolder',fullfile(FolderSlowDynPreprocess, 'SlowWaves'));
end
FolderStimImpactRecords
FolderSlowDynRecords
clear
LoadPathMOBs
QuantifSlowWaveSlowDyn
quantif_res.filename{p} = Dir.filename{p};
quantif_res.filereference{p} = Dir.filereference{p};
quantif_res.subject{p} = Dir.subject{p};
quantif_res.date{p} = Dir.date{p};
quantif_res.age{p} = Dir.age{p};
quantif_res.gender{p} = Dir.gender{p};
quantif_res.filename{p} = Dir.filename{p};
quantif_res.filereference{p} = Dir.filereference{p};
quantif_res.subject{p} = Dir.subject{p};
quantif_res.date{p} = Dir.date{p};
Dir.date(p);
quantif_res.date{p} = Dir.date(p);
quantif_res.filename{p} = Dir.filename{p};
quantif_res.filereference{p} = Dir.filereference{p};
quantif_res.subject{p} = Dir.subject{p};
quantif_res.date{p} = Dir.date(p);
quantif_res.age{p} = Dir.age{p};
quantif_res.gender{p} = Dir.gender{p};
FolderPrecomputeDreem
cd(FolderSlowDynData)
QuantifSlowWaveSlowDyn
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/GetData/
clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
% for p=1:length(Dir.filereference)
p=100;
clearvars -except Dir p
disp(' ')
disp('****************************************************************')
disp(Dir.filename{p})
%% init
quantif_res.filename{p} = Dir.filename{p};
quantif_res.filereference{p} = Dir.filereference{p};
quantif_res.subject{p} = Dir.subject{p};
quantif_res.date{p} = Dir.date(p);
quantif_res.age{p} = Dir.age{p};
quantif_res.gender{p} = Dir.gender{p};
%load signals and data
[signals, ~, stimulations, StageEpochs, labels_eeg] = GetRecordDreem(Dir.filename{p});
%quality
[channel_quality, NoiseEpoch, TotalNoise] = GetDreemQuality(Dir.filereference{p});
%load slow waves
sw_file = fullfile(FolderSlowDynPreprocess, 'SlowWaves', ['SlowWaves_' num2str(Dir.filereference{p}) '.mat']);
if exist(sw_file,'file')==2
load(sw_file);
else
[SlowWaveEpochs, ~] = MakeSlowWavesDreemRecord(p,Dir,'savefolder',fullfile(FolderSlowDynPreprocess, 'SlowWaves'));
end
%% params
%params density
windowsize = 60e4; %60s
%params isi
step=100;
edges=0:step:10000;
%% night duration and intervals
for st=1:length(StageEpochs)
try
endst(st) = max(End(StageEpochs{st}));
catch
endst(st) = nan;
end
end
night_duration = max(endst);
%intervals
intervals_start = 0:windowsize:night_duration;
x_intervals = (intervals_start + windowsize/2)/(3600E4);
%% slow-waves
for ch=1:length(SlowWaves)
center_slowwaves{ch} = (Start(SlowWaves{ch}) + End(SlowWaves{ch})) / 2;
start_slowwaves{ch} = Start(SlowWaves{ch});
if ~isempty(StageEpochs)
center_slowwaves{ch} = Range(Restrict(ts(center_slowwaves{ch}),or(N2,N3)));
start_slowwaves{ch}  = Range(Restrict(ts(start_slowwaves{ch}),or(N2,N3)));
end
end
%% slow-waves
for ch=1:length(SlowWaveEpochs)
center_slowwaves{ch} = (Start(SlowWaveEpochs{ch}) + End(SlowWaveEpochs{ch})) / 2;
start_slowwaves{ch} = Start(SlowWaveEpochs{ch});
if ~isempty(StageEpochs)
center_slowwaves{ch} = Range(Restrict(ts(center_slowwaves{ch}),or(N2,N3)));
start_slowwaves{ch}  = Range(Restrict(ts(start_slowwaves{ch}),or(N2,N3)));
end
end
N1 = StageEpochs{1}; N2 = StageEpochs{2}; N3 = StageEpochs{3};
%% slow-waves
for ch=1:length(SlowWaveEpochs)
center_slowwaves{ch} = (Start(SlowWaveEpochs{ch}) + End(SlowWaveEpochs{ch})) / 2;
start_slowwaves{ch} = Start(SlowWaveEpochs{ch});
if ~isempty(StageEpochs)
center_slowwaves{ch} = Range(Restrict(ts(center_slowwaves{ch}),or(N2,N3)));
start_slowwaves{ch}  = Range(Restrict(ts(start_slowwaves{ch}),or(N2,N3)));
end
end
mean(channel_quality{1})
mean(channel_quality{2})
mean(channel_quality{3})
mean(channel_quality{4})
for i=1:4
duration_noise(i) = tot_length(NoiseEpoch{i});
end
duration_noise = [];
for i=1:4
duration_noise(1,i) = tot_length(NoiseEpoch{i});
end
duration_noise = [];
for i=1:4
duration_noise(i,1) = tot_length(NoiseEpoch{i});
end
QuantifSlowWaveSlowDyn
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MethodPaper/
QuantifSlowWaveSlowDyn
%% slow waves density
slowwaves_density = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
slowwaves_density(t) = length(Restrict(ts(center_slowwaves),intv)); %per min
end
quantif_res.x_density{p} = x_intervals;
quantif_res.y_density{p} = slowwaves_density;
%slope
[x_dens, y_dens] = AdaptDensityCurves(x_intervals, slowwaves_density, smoothing);
%regression
idx_density = y_dens > max(y_dens)/8;
[p_density,~] = polyfit(x_dens(idx_density), y_multi(idx_density), 1);
reg_density   = polyval(p_density,x_dens);
%smooth
figure, hold on
plot(x_dens, y_dens, 'color', 'b','linewidth',2); hold on
plot(x_dens, reg_density, 'color', 'k')
[p_density,~] = polyfit(x_dens(idx_density), y_dens(idx_density), 1);
reg_density   = polyval(p_density,x_dens);
%smooth
figure, hold on
plot(x_dens, y_dens, 'color', 'b','linewidth',2); hold on
plot(x_dens, reg_density, 'color', 'k')
x_dens(idx_density)
y_dens(idx_density)
QuantifSlowWaveSlowDyn
x_dens = x_intervals;
y_dens = slowwaves_density;
%regression
idx_density = y_dens > max(y_dens)/8;
[p_density,~] = polyfit(x_dens(idx_density), y_dens(idx_density)', 1);
reg_density   = polyval(p_density,x_dens);
%smooth
figure, hold on
plot(x_dens, y_dens, 'color', 'b','linewidth',2); hold on
plot(x_dens, reg_density, 'color', 'k')
[x_dens, y_dens] = AdaptDensityCurves(x_intervals, slowwaves_density, smoothing);
idx_density = y_dens > max(y_dens)/8;
[p_density,~] = polyfit(x_dens(idx_density), y_dens(idx_density)', 1);
reg_density   = polyval(p_density,x_dens);
%smooth
figure, hold on
plot(x_dens, y_dens, 'color', 'b','linewidth',2); hold on
plot(x_dens, reg_density, 'color', 'k')
figure, hold on
plot(x_dens, y_dens, 'color', 'b','linewidth',2); hold on
plot(x_dens, reg_density, 'color', 'k')
QuantifSlowWaveSlowDyn
edit FindSlowWaves.m
which FindSlowWaves
run('/home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/Detectors/DetectSlowWaves_NGO2015.m')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
clear
clc
ParcoursGenerateSlowWavesSlowDyn
97  zero_crossings = Range(threshold(EEG, 0, 'Crossing', 'Falling', 'InitialPoint', 1));
zero_crossings = Range(threshold(EEG, 0, 'Crossing', 'Falling', 'InitialPoint', 1));
dbquit
which -all threshold
edit DetectSlowWaves_Std.m
ParcoursGenerateSlowWavesSlowDyn
threshold(EEG, 0, 'Crossing', 'Falling', 'InitialPoint', 1)
dbquit
ParcoursGenerateSlowWavesSlowDyn
sw_file
exist(sw_file,'file')~=2
[signals, ~, stimulations, StageEpochs, labels_eeg] = GetRecordDreem(Dir.filename{p});
ParcoursGenerateSlowWavesSlowDyn
ReadSlowdynDataset2
ParcoursGenerateSlowWavesSlowDyn
%-- 16/09/2018 17:43:37 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
edit ClinicQuantitySleepNew.m
load([FolderPrecomputeDreem 'ClinicQuantitySleepNew.mat'])
edit ClinicQuantitySleepNew.m
common_data.stage_epoch_duration
common_data = GetClinicCommonData();
common_data.stage_epoch_duration
% clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
for p=120:length(Dir.filereference)
clearvars -except Dir p quantif_res
disp(' ')
disp('****************************************************************')
disp(Dir.filename{p})
%% init
[~, NoiseEpoch, ~] = GetDreemQuality(Dir.filereference{p});
end
% clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
for p=120:length(Dir.filereference)
clearvars -except Dir p quantif_res
%
%     disp(' ')
%     disp('****************************************************************')
%     disp(Dir.filename{p})
%% init
try
[~, NoiseEpoch, ~] = GetDreemQuality(Dir.filereference{p});
catch
disp(' ')
disp('****************************************************************')
disp(Dir.filename{p})
end
end
ReadSlowdynDataset2
QuantifHypnogramSlowDyn
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
QuantifHypnogramSlowDyn
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
QuantifHypnogramSlowDynPlot
edit Fig2TonesUpDownDurationTransitions.m
edit LFPlayerInfluenceOnDetection.m
clear
load(fullfile(FolderSlowDynData,'QuantifHypnogramSlowDyn.mat'))
%% init
%params
age_range = [20 30 40 50 90];
%colors
colori = [distinguishable_colors(length(age_range)-1)];
for i=1:length(age_range)-1
colori_cluster{i} = colori(i,:);
end
%
all_ages = cell2mat(hypno_res.age);
all_waso = cell2mat(hypno_res.waso);
all_sol = cell2mat(hypno_res.sol);
all_sleep_efficiency = cell2mat(hypno_res.sleep_efficiency);
clear
load(fullfile(FolderSlowDynData,'QuantifHypnogramSlowDyn.mat'))
%% init
%params
age_range = [20 30 40 50 90];
%colors
colori = [distinguishable_colors(length(age_range)-1)];
for i=1:length(age_range)-1
colori_cluster{i} = colori(i,:);
end
%labels
for i=1:length(age_range)-2
labels{i} = [num2str(age_range(i)) '-' num2str(age_range(i+1))];
end
%%  pool
all_ages = cell2mat(hypno_res.age);
all_waso = cell2mat(hypno_res.waso);
all_sol = cell2mat(hypno_res.sol);
all_sleep_efficiency = cell2mat(hypno_res.sleep_efficiency);
clear
load(fullfile(FolderSlowDynData,'QuantifHypnogramSlowDyn.mat'))
%% init
%params
age_range = [20 30 40 50 90];
%colors
colori = [distinguishable_colors(length(age_range)-1)];
for i=1:length(age_range)-1
colori_cluster{i} = colori(i,:);
end
%labels
for i=1:length(age_range)-2
labels{i} = [num2str(age_range(i)) '-' num2str(age_range(i+1))];
end
labels{length(age_range)-1} = ['>' num2str(age_range(end-1))];
QuantifHypnogramSlowDynPlot
all_N3total = cell2mat(hypno_res.stage.total);
all_N3total = cell2mat(hypno_res.stage.total,2);
QuantifHypnogramSlowDynPlot
HistogramDatasetSlowdyn
clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
all_ages = cell2mat(Dir.age);
all_genders = cell2mat(Dir.gender);
all_subject = Dir.subject;
subject_list = unique(all_subject);
subject_age_genders = [Dir.subject Dir.age Dir.gender];
unique(subject_age_genders, 'rows');
unique(subject_age_genders);
unique(table(subject_age_genders));
table(subject_age_genders);
a=table(all_subject, all_ages, all_genders);
unique(a)
b=unique(a);
table2cell(b);
%age
subplot(2,2,3), hold on
subject_info = bar(histo_x.all, [histo_y.men ; histo_y.women]' , 'FaceColor',{'b','r'}, 'stacked');
legend('man', 'women')
title('By nights')
%gender
subplot(2,2,4), hold on
bar(1,nb_man, 'b')
bar(2, nb_women, 'r')
set(gca,'xtick',1:2,'XtickLabel',{'men','women'}),
title('By nights')
HistogramDatasetSlowdyn
cd(FolderSlowDynFigures)
%-- 17/09/2018 14:55:51 --%
loadp
LoadPathMOBs
edit LFPlayerInfluenceOnDetection.m
LFPlayerInfluenceOnDetection
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/Script_Divers/
TestDownDurationEvolution
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/Script_Divers/
TestDownDurationDensity
close all
TestDownDurationDensity
edit ParcoursGenerateIDClinicalHypnogramVC.m
edit ParcoursGenerateIdSleepRecord.m
FolderFigureDelta
foldername = '/home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/BasalDataset/DownDurationHomeostasis/';
title_fig = [Dir.name{p}  ' - ' Dir.date{p}];
filename_fig = ['DownDurHomeostasis_' Dir.name{p}  '_' Dir.date{p}];
filename_png = [filename_fig  '.png'];
filename_png = fullfile(FolderFigureDelta,'BasalDataset', 'DownDurationHomeostasis')
fullfile(FolderFigureDelta,'BasalDataset', 'DownDurationHomeostasis',filename_png)
filename_png
filename_png = [filename_fig  '.png'];
fullfile(FolderFigureDelta,'BasalDataset', 'DownDurationHomeostasis',filename_png)
TestDownDurationDensity
edit DeltaDensityClusterFigure1
edit DeltaDensityClusterFigure.m
%% Dir
a=0;
a=a+1; Dir.path{a}='/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150409/Breath-Mouse-243-244-09042015/Mouse243';
a=a+1; Dir.path{a}='/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150331/Breath-Mouse-243-244-31032015/Mouse244';
a=a+1; Dir.path{a}='/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice403-451/20161209/Mouse403/Breath-Mouse-403-09122016/';
a=a+1; Dir.path{a}='/media/DataMOBsRAIDN/ProjectEmbReact/Mouse508/20170126/ProjectEmbReact_M508_20170126_BaselineSleep/'; % Mouse 508 - Basal 1
a=a+1; Dir.path{a}='/media/DataMOBsRAIDN/ProjectEmbReact/Mouse509/20170127/ProjectEmbReact_M509_20170127_BaselineSleep/'; % Mouse 509 - Basal 1
a=a+1; Dir.path{a}='/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice403-451/20161209/Mouse451/Breath-Mouse-451-09122016/';
%% name, manipe, group, date
for i=1:length(Dir.path)
%mouse name
Dir.name{i}=Dir.path{i}(strfind(Dir.path{i},'/Mouse'):strfind(Dir.path{i},'/Mouse')+8);
Dir.name{i}(Dir.name{i}=='-')=[];
Dir.name{i}(Dir.name{i}=='/')=[];
%date
ind = strfind(Dir.path{i},'/201');
Dir.date{i} = Dir.path{i}(ind + [7 8 5 6 1:4]);
end
Dir = PathForExperimentsBasalSleepSpike;
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
%params
down_duration{1} = [50 100];
down_duration{2} = [100 150];
down_duration{3} = [150 200];
down_duration{4} = [200 250];
down_duration{5} = [250 400];
down_duration{6} = [400 1000];
%% load
%SWS
try
load SleepScoring_Accelero SWSEpoch TotalNoiseEpoch
catch
load SleepScoring_OBGamma SWSEpoch TotalNoiseEpoch
end
%down states
load('DownState.mat','down_PFCx')
%night duration
load LFPData/LFP0
night_duration = max(Range(LFP));
clear LFP
%% params
smoothing = 3;
windowsize = 60E4; %60s
intervals_start = 0:windowsize:night_duration;
x_intervals = (intervals_start + windowsize/2)/(3600E4);
%% evolution
%start deltas of various durations, restrict to SWS
for i=1:length(down_duration)
min_dur = down_duration{i}(1) * 10;
max_dur = down_duration{i}(2) * 10;
DownDur = dropLongIntervals(dropShortIntervals(down_PFCx, min_dur), max_dur);
start_down{i} = Restrict(ts(Start(DownDur)),SWSEpoch);
end
%% density
for i=1:length(down_duration)
density_down{i} = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_down{i}(t) = length(Restrict(start_down{i},intv))/60; %per sec
end
%smooth
density_down{i} = Smooth(density_down{i}, smoothing);
%regression
idx_down = density_down{i} > max(density_down{i})/8;
[p_multi,~] = polyfit(x_intervals(idx_down), density_down{i}(idx_down), 1);
reg_down{i} = polyval(p_multi,x_intervals);
end
x_intervals(idx_down),;
x_intervals(idx_down);
density_down{i}(idx_down);
[p_multi,~] = polyfit(x_intervals(idx_down), density_down{i}(idx_down)', 1);
for i=1:length(down_duration)
density_down{i} = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_down{i}(t) = length(Restrict(start_down{i},intv))/60; %per sec
end
%smooth
density_down{i} = Smooth(density_down{i}, smoothing);
%regression
idx_down = density_down{i} > max(density_down{i})/8;
[p_multi,~] = polyfit(x_intervals(idx_down), density_down{i}(idx_down)', 1);
reg_down{i} = polyval(p_multi,x_intervals);
end
%% plot
figure, hold on
for i=1:length(down_duration)
subplot(3,2,i),
plot(x_intervals, density_down{i},'-','color', 'k', 'Linewidth', 1),
plot(x_intervals, reg_down{i}, 'color', 'b')
xlabel('Time(h)'), ylabel('down per sec');
min_dur = down_duration{i}(1);
max_dur = down_duration{i}(2);
title([num2str(min_dur) ' - ' num2str(max_dur) ' ms']),
end
figure, hold on
for i=1:length(down_duration)
subplot(3,2,i),
plot(x_intervals, density_down{i},'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, reg_down{i}, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('down per sec');
min_dur = down_duration{i}(1);
max_dur = down_duration{i}(2);
title([num2str(min_dur) ' - ' num2str(max_dur) ' ms']),
end
TestDownDurationDensity
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/
LoadPathMOBs
%-- 17/09/2018 16:06:06 --%
LoadPathMOBs
Dir = PathForExperimentsBasalSleepSpike;
cd(Dir.path{8})
load('DownState.mat','down_PFCx')
load('DownState.mat', 'down_PFCx_Info')
QuantifDownDurationHomeostasis
homeo_res.x_density{p,i} = x_intervals;
homeo_res.y_density{p,i} = density_down{i};
homeo_res.smooth_density{p,i} = smooth_density{i};
clear
QuantifDownDurationHomeostasis
TestDownDurationDensity
down_duration{1} = [75 100];
down_duration{2} = [100 150];
down_duration{3} = [150 200];
down_duration{4} = [200 250];
down_duration{5} = [250 400];
down_duration{6} = [75 1000];
%start deltas of various durations, restrict to SWS
for i=1:length(down_duration)
min_dur = down_duration{i}(1) * 10;
max_dur = down_duration{i}(2) * 10;
DownDur = dropLongIntervals(dropShortIntervals(down_PFCx, min_dur), max_dur);
start_down{i} = Restrict(ts(Start(DownDur)),SWSEpoch);
end
%% density
for i=1:length(down_duration)
density_down{i} = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_down{i}(t) = length(Restrict(start_down{i},intv))/60; %per sec
end
%smooth
smooth_density{i} = Smooth(density_down{i}, smoothing);
%regression
idx_down = smooth_density{i} > max(smooth_density{i})/8;
[p_multi,~] = polyfit(x_intervals(idx_down), smooth_density{i}(idx_down)', 1);
reg_down{i} = polyval(p_multi,x_intervals);
end
%% plot
figure, hold on
for i=1:length(down_duration)
subplot(3,2,i),
plot(x_intervals, density_down{i},'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_density{i},'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_down{i}, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('down per sec');
min_dur = down_duration{i}(1);
max_dur = down_duration{i}(2);
title([num2str(min_dur) ' - ' num2str(max_dur) ' ms']),
end
load('DeltaWaves.mat', 'deltas_PFCx')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/Script_Divers/
TestDownDurationDensity2
%% down
start_down = ts(Start(down_PFCx));
density_down = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_down(t) = length(Restrict(start_down,intv))/60; %per sec
end
%smooth
smooth_down = Smooth(density_down, smoothing);
%regression
idx_down = smooth_down > max(smooth_down)/8;
[p_down,~] = polyfit(x_intervals(idx_down), smooth_down(idx_down)', 1);
reg_down = polyval(p_down,x_intervals);
%% delta >50ms
start_delta1 = ts(Start(deltas_PFCx));
density_delta1 = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_delta1(t) = length(Restrict(start_delta1,intv))/60; %per sec
end
%smooth
smooth_delta1 = Smooth(density_delta1, smoothing);
%regression
idx_delta1 = smooth_delta1 > max(smooth_delta1)/8;
[p_delta1,~] = polyfit(x_intervals(idx_delta1), smooth_delta1(idx_delta1)', 1);
reg_delta1 = polyval(p_delta1,x_intervals);
%% delta >75ms
start_delta2 = ts(Start(dropShortIntervals(deltas_PFCx,750)));
density_delta2 = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_delta2(t) = length(Restrict(start_delta2,intv))/60; %per sec
end
%smooth
smooth_delta2 = Smooth(density_delta2, smoothing);
%regression
idx_delta2 = smooth_delta2 > max(smooth_delta2)/8;
[p_delta2,~] = polyfit(x_intervals(idx_delta1), smooth_delta2(idx_delta2)', 1);
reg_delta2 = polyval(p_delta2,x_intervals);
TestDownDurationDensity2
%regression
idx_delta2 = smooth_delta2 > max(smooth_delta2)/8;
[p_delta2,~] = polyfit(x_intervals(idx_delta2), smooth_delta2(idx_delta2)', 1);
reg_delta2 = polyval(p_delta2,x_intervals);
%% plot
figure, hold on
subplot(3,1,1), hold on
plot(x_intervals, density_down,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_down,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_down, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('down states'),
subplot(3,1,2), hold on
plot(x_intervals, density_delta1,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta1,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta1, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >50ms')
subplot(3,1,3), hold on
plot(x_intervals, density_delta2,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta2,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta2, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >75ms')
%% delta >75ms
deltaShort = dropLongIntervals(dropShortIntervals(deltas_PFCx,500),750);
start_delta3 = ts(Start(deltaShort));
density_delta3 = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_delta3(t) = length(Restrict(start_delta3,intv))/60; %per sec
end
%smooth
smooth_delta3 = Smooth(density_delta3, smoothing);
%regression
idx_delta3 = smooth_delta3 > max(smooth_delta3)/8;
[p_delta3,~] = polyfit(x_intervals(idx_delta3), smooth_delta2(idx_delta3)', 1);
reg_delta3 = polyval(p_delta3,x_intervals);
%% plot
figure, hold on
subplot(4,1,1), hold on
plot(x_intervals, density_down,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_down,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_down, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('down states'),
subplot(4,1,2), hold on
plot(x_intervals, density_delta1,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta1,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta1, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >50ms')
subplot(4,1,3), hold on
plot(x_intervals, density_delta2,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta2,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta2, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >75ms')
subplot(4,1,4), hold on
plot(x_intervals, density_delta4,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta4,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta4, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves [50-75ms]')
%% plot
figure, hold on
subplot(4,1,1), hold on
plot(x_intervals, density_down,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_down,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_down, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('down states'),
subplot(4,1,2), hold on
plot(x_intervals, density_delta1,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta1,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta1, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >50ms')
subplot(4,1,3), hold on
plot(x_intervals, density_delta2,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta2,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta2, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >75ms')
subplot(4,1,4), hold on
plot(x_intervals, density_delta3,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta3,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta3, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves [50-75ms]')
delta_durations = End(deltas_PFCx)-Start(deltas_PFCx);
hist(delta_durations,30);
figure,hist(delta_durations,30);
figure,hist(delta_durations/10,30);
%% plot
figure, hold on
subplot(4,1,1), hold on
plot(x_intervals, density_down,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_down,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_down, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('down states'),
subplot(4,1,2), hold on
plot(x_intervals, density_delta1,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta1,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta1, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >50ms')
subplot(4,1,3), hold on
plot(x_intervals, density_delta2,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta2,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta2, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >75ms')
subplot(4,1,4), hold on
plot(x_intervals, density_delta3,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta3,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta3, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves [50-75ms]')
clearvars -except Dir p
load('IdFigureData2.mat', 'night_duration')
%SWS
try
load SleepScoring_Accelero SWSEpoch TotalNoiseEpoch
catch
load SleepScoring_OBGamma SWSEpoch TotalNoiseEpoch
end
%down states
load('DownState.mat','down_PFCx')
load('DeltaWaves.mat', 'deltas_PFCx')
%night duration
%     load LFPData/LFP0
%     night_duration = max(Range(LFP));
%     clear LFP
load('IdFigureData2.mat', 'night_duration')
%% params
smoothing = 3;
windowsize = 60E4; %60s
intervals_start = 0:windowsize:night_duration;
x_intervals = (intervals_start + windowsize/2)/(3600E4);
%% down
start_down = ts(Start(down_PFCx));
density_down = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_down(t) = length(Restrict(start_down,intv))/60; %per sec
end
%smooth
smooth_down = Smooth(density_down, smoothing);
%regression
idx_down = smooth_down > max(smooth_down)/8;
[p_down,~] = polyfit(x_intervals(idx_down), smooth_down(idx_down)', 1);
reg_down = polyval(p_down,x_intervals);
%% delta >50ms
start_delta1 = ts(Start(deltas_PFCx));
density_delta1 = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_delta1(t) = length(Restrict(start_delta1,intv))/60; %per sec
end
%smooth
smooth_delta1 = Smooth(density_delta1, smoothing);
%regression
idx_delta1 = smooth_delta1 > max(smooth_delta1)/8;
[p_delta1,~] = polyfit(x_intervals(idx_delta1), smooth_delta1(idx_delta1)', 1);
reg_delta1 = polyval(p_delta1,x_intervals);
%% delta >75ms
start_delta2 = ts(Start(dropShortIntervals(deltas_PFCx,750)));
density_delta2 = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_delta2(t) = length(Restrict(start_delta2,intv))/60; %per sec
end
%smooth
smooth_delta2 = Smooth(density_delta2, smoothing);
%regression
idx_delta2 = smooth_delta2 > max(smooth_delta2)/8;
[p_delta2,~] = polyfit(x_intervals(idx_delta2), smooth_delta2(idx_delta2)', 1);
reg_delta2 = polyval(p_delta2,x_intervals);
%% delta >75ms
deltaShort = dropLongIntervals(dropShortIntervals(deltas_PFCx,500),750);
start_delta3 = ts(Start(deltaShort));
density_delta3 = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_delta3(t) = length(Restrict(start_delta3,intv))/60; %per sec
end
%smooth
smooth_delta3 = Smooth(density_delta3, smoothing);
%regression
idx_delta3 = smooth_delta3 > max(smooth_delta3)/8;
[p_delta3,~] = polyfit(x_intervals(idx_delta3), smooth_delta2(idx_delta3)', 1);
reg_delta3 = polyval(p_delta3,x_intervals);
%% plot
figure, hold on
subplot(4,1,1), hold on
plot(x_intervals, density_down,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_down,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_down, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('down states'),
subplot(4,1,2), hold on
plot(x_intervals, density_delta1,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta1,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta1, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >50ms')
subplot(4,1,3), hold on
plot(x_intervals, density_delta2,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta2,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta2, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >75ms')
subplot(4,1,4), hold on
plot(x_intervals, density_delta3,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta3,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta3, 'color', 'b'), hold on
xlabel('Time(h)'), ylabel('per sec');
title('delta waves [50-75ms]')
%% plot
figure, hold on
subplot(4,1,1), hold on
plot(x_intervals, density_down,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_down,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_down, 'color', 'b'), hold on
idx_down
scatter(x_intervals(idx_down), smooth_down(idx_down)',20, 'g');
xlabel('Time(h)'), ylabel('per sec');
title('down states'),
subplot(4,1,2), hold on
plot(x_intervals, density_delta1,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta1,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta1, 'color', 'b'), hold on
scatter(x_intervals(idx_delta1), smooth_delta2(idx_delta1)',20, 'g');
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >50ms')
subplot(4,1,3), hold on
plot(x_intervals, density_delta2,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta2,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta2, 'color', 'b'), hold on
scatter(x_intervals(idx_delta2), smooth_delta2(idx_delta2)',20, 'g');
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >75ms')
subplot(4,1,4), hold on
plot(x_intervals, density_delta3,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta3,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta3, 'color', 'b'), hold on
scatter(x_intervals(idx_delta3), smooth_delta2(idx_delta3)',20, 'g');
xlabel('Time(h)'), ylabel('per sec');
title('delta waves [50-75ms]')
%% delta >75ms
deltaShort = dropLongIntervals(dropShortIntervals(deltas_PFCx,500),750);
start_delta3 = ts(Start(deltaShort));
density_delta3 = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_delta3(t) = length(Restrict(start_delta3,intv))/60; %per sec
end
%smooth
smooth_delta3 = Smooth(density_delta3, smoothing);
%regression
idx_delta3 = smooth_delta3 > max(smooth_delta3)/8;
[p_delta3,~] = polyfit(x_intervals(idx_delta3), smooth_delta3(idx_delta3)', 1);
reg_delta3 = polyval(p_delta3,x_intervals);
%% plot
figure, hold on
subplot(4,1,1), hold on
plot(x_intervals, density_down,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_down,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_down, 'color', 'b'), hold on
idx_down
scatter(x_intervals(idx_down), smooth_down(idx_down)',20, 'g');
xlabel('Time(h)'), ylabel('per sec');
title('down states'),
subplot(4,1,2), hold on
plot(x_intervals, density_delta1,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta1,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta1, 'color', 'b'), hold on
scatter(x_intervals(idx_delta1), smooth_delta2(idx_delta1)',20, 'g');
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >50ms')
subplot(4,1,3), hold on
plot(x_intervals, density_delta2,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta2,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta2, 'color', 'b'), hold on
scatter(x_intervals(idx_delta2), smooth_delta2(idx_delta2)',20, 'g');
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >75ms')
subplot(4,1,4), hold on
plot(x_intervals, density_delta3,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta3,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta3, 'color', 'b'), hold on
scatter(x_intervals(idx_delta3), smooth_delta2(idx_delta3)',20, 'g');
xlabel('Time(h)'), ylabel('per sec');
title('delta waves [50-75ms]')
%% plot
figure, hold on
subplot(4,1,1), hold on
plot(x_intervals, density_down,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_down,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_down, 'color', 'b'), hold on
idx_down
scatter(x_intervals(idx_down), smooth_down(idx_down)',20, 'g');
xlabel('Time(h)'), ylabel('per sec');
title('down states'),
subplot(4,1,2), hold on
plot(x_intervals, density_delta1,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta1,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta1, 'color', 'b'), hold on
scatter(x_intervals(idx_delta1), smooth_delta2(idx_delta1)',20, 'g');
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >50ms')
subplot(4,1,3), hold on
plot(x_intervals, density_delta2,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta2,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta2, 'color', 'b'), hold on
scatter(x_intervals(idx_delta2), smooth_delta2(idx_delta2)',20, 'g');
xlabel('Time(h)'), ylabel('per sec');
title('delta waves >75ms')
subplot(4,1,4), hold on
plot(x_intervals, density_delta3,'-','color', 'k', 'Linewidth', 1), hold on
plot(x_intervals, smooth_delta3,'-','color', 'r', 'Linewidth', 1), hold on
plot(x_intervals, reg_delta3, 'color', 'b'), hold on
scatter(x_intervals(idx_delta3), smooth_delta3(idx_delta3)',20, 'g');
xlabel('Time(h)'), ylabel('per sec');
title('delta waves [50-75ms]')
figure, plot(x_intervals, density_delta1)
figure, hold on,
plot(x_intervals, density_down,'k')
plot(x_intervals, density_delta2,'b')
plot(x_intervals, density_delta3,'r')
plot(x_intervals, density_delta1,'m')
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150409/Breath-Mouse-243-244-09042015/Mouse243/SpectrumDataL/Spectrum26.mat')
figure, imagesc(Spectro{3})
figure, imagesc(t,f,10*log10(Sp)')
figure, imagesc(t,f,10*log10(Sp)'), axis xy
hold on, plot(x_intervals*3600E4, rescale(density_down,10,20),'k')
hold on, plot(x_intervals*3600, rescale(density_down,10,20),'k')
hold on, plot(x_intervals*3600, rescale(density_down,10,20),'k','linewidth';2)
hold on, plot(x_intervals*3600, rescale(density_down,10,20),'k','linewidth',2)
id=find(fp>1&fp<2);
id=find(f>1&fp<2);
id=find(f>1&f<2);
figure, plot(x_intervals*3600, rescale(density_down,0,1)
figure, plot(x_intervals*3600, rescale(density_down,0,1))
hold on, plot(t,mean(Sp(:,id),2)','k')
hold on, plot(t,rescale(mean(Sp(:,id),2)',0,1),'k')
figure, plot(x_intervals*3600, rescale(density_down,0,1),'k')
hold on, plot(t,rescale(mean(Sp(:,id),2)',0,1),'r')
figure, plot(x_intervals*3600, rescale(density_down,0,1),'k')
hold on, plot(t,4*rescale(mean(Sp(:,id),2)',0,1),'r')
figure, plot(x_intervals*3600, rescale(density_down,0,1),'k')
hold on, plot(t,runmean(4*rescale(mean(Sp(:,id),2)',0,1),3),'r')
hold on, plot(t,runmean(4*rescale(mean(Sp(:,id),2)',0,1),30),'b')
hold on, plot(t,runmean(10*rescale(mean(Sp(:,id),2)',0,1),30),'b')
figure, plot(x_intervals*3600, rescale(density_down,0,1),'k')
hold on, plot(t,runmean(10*rescale(mean(Sp(:,id),2)',0,1),30),'b')
figure, plot(x_intervals*3600, rescale(density_down,0,1),'k')
hold on, plot(t,runmean(12*rescale(mean(Sp(:,id),2)',0,1),40),'r')
id=find(f>2&f<3);
hold on, plot(t,runmean(12*rescale(mean(Sp(:,id),2)',0,1),40),'g')
hold on, plot(t,runmean(6*rescale(mean(Sp(:,id),2)',0,1),40),'g')
hold on, plot(t,runmean(2*rescale(mean(Sp(:,id),2)',0,1),40),'g')
figure, plot(x_intervals*3600, rescale(density_down,0,1),'k')
hold on, plot(t,runmean(2*rescale(mean(Sp(:,id),2)',0,1),40),'r')
figure, plot(x_intervals*3600, rescale(density_down,0,1),'k','linewidth',4)
hold on, plot(t,runmean(2*rescale(mean(Sp(:,id),2)',0,1),40),'r')
id12=find(f>1&f<2);
hold on, plot(t,runmean(12*rescale(mean(Sp(:,id12),2)',0,1),40),'b')
id34=find(f>3&f<4);
hold on, plot(t,runmean(2*rescale(mean(Sp(:,id24),2)',0,1),40),'m')
hold on, plot(t,runmean(2*rescale(mean(Sp(:,id34),2)',0,1),40),'m')
figure
subplot(4,1,1), plot(x_intervals*3600, rescale(density_down,0,1),'k','linewidth',2)
subplot(4,1,1), plot(x_intervals*3600, runmean(mean(Sp(:,id12),2)',40),'b','linewidth',2)
subplot(4,1,1), plot(t, runmean(mean(Sp(:,id12),2)',40),'b','linewidth',2)
subplot(4,1,1), plot(x_intervals*3600, runmean(mean(Sp(:,id12),2)',40),'b','linewidth',2)
subplot(4,1,1), plot(t, runmean(mean(Sp(:,id12),2)',40),'b','linewidth',2)
subplot(4,1,1), plot(x_intervals*3600, rescale(density_down,0,1),'k','linewidth',2)
subplot(4,1,2), plot(t, runmean(mean(Sp(:,id12),2)',40),'b','linewidth',2)
subplot(4,1,3), plot(t, runmean(mean(Sp(:,id),2)',40),'b','linewidth',2)
subplot(4,1,4), plot(t, runmean(mean(Sp(:,id34),2)',40),'b','linewidth',2)
id34=find(f>3&f<4);
id12=find(f>1&f<2);
id23=find(f>2&f<3);
id01=find(f>0.01&f<1);
id45=find(f>4&f<5);
figure
subplot(6,1,1), plot(x_intervals*3600, rescale(density_down,0,1),'k','linewidth',2)
subplot(6,1,2), plot(t, runmean(mean(Sp(:,id0.1),2)',40),'b','linewidth',2)
subplot(6,1,2), plot(t, runmean(mean(Sp(:,id01),2)',40),'b','linewidth',2)
ylim([01E4])
ylim([0 1E4])
ylim([0 4E4])
ylim([0 6E4])
ylim([0 7E4])
subplot(6,1,3), plot(t, runmean(mean(Sp(:,id12),2)',40),'b','linewidth',2)
subplot(6,1,4), plot(t, runmean(mean(Sp(:,id23),2)',40),'b','linewidth',2)
subplot(6,1,5), plot(t, runmean(mean(Sp(:,id34),2)',40),'b','linewidth',2)
subplot(6,1,6), plot(t, runmean(mean(Sp(:,id45),2)',40),'b','linewidth',2)
ylim([0 6E4])
ylim([0 8E4])
ylim([0 10E4])
ylim([0 5E4])
Spd=Sp;
td=t;
fd=f;
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150409/Breath-Mouse-243-244-09042015/Mouse243/SpectrumDataL/Spectrum27.mat')
Stsd=tsd(t*1E4,runmean(mean(Sp(:,id45),2)',40));
Stsd=tsd(t*1E4,runmean(mean(Sp(:,id45),2),40));
DownDens=tsd(x_intervals*3600*1E4, rescale(density_down,0,1));
test=Restrict(Stsd,DownDens);
figure, plot(Data(test),Data(DownDens),'k.')
figure, plot(Data(Restrict(tsd(t*1E4,runmean(mean(Sp(:,id12),2),40)),DownDens)),Data(DownDens),'ko','markerfacecolor','k')
subplot(2,2,1),, plot(Data(Restrict(tsd(t*1E4,runmean(mean(Sp(:,id12),2),40)),DownDens)),Data(DownDens),'ko','markerfacecolor','k')
subplot(2,2,1),, plot(Data(Restrict(tsd(t*1E4,runmean(mean(Sp(:,id01),2),40)),DownDens)),Data(DownDens),'ko','markerfacecolor','k')
subplot(2,2,2),, plot(Data(Restrict(tsd(t*1E4,runmean(mean(Sp(:,id12),2),40)),DownDens)),Data(DownDens),'ko','markerfacecolor','k')
subplot(2,2,3), plot(Data(Restrict(tsd(t*1E4,runmean(mean(Sp(:,id23),2),40)),DownDens)),Data(DownDens),'ko','markerfacecolor','k')
subplot(2,2,4), plot(Data(Restrict(tsd(t*1E4,runmean(mean(Sp(:,id34),2),40)),DownDens)),Data(DownDens),'ko','markerfacecolor','k')
load('SleepSubstages.mat')
figure, plot(Range(test),Data(test),'k')
hold on, plot(Range(Restrict(test,or(Epoch{2},Epoch{3})),Data(Restrict(test,or(Epoch{2},Epoch{3})),'r')
hold on, plot(Range(Restrict(test,or(Epoch{2},Epoch{3}))),Data(Restrict(test,or(Epoch{2},Epoch{3})),'r')
hold on, plot(Range(Restrict(test,or(Epoch{2},Epoch{3}))),Data(Restrict(test,or(Epoch{2},Epoch{3}))),'r')
figure, plot(Range(test),Data(test),'k')
hold on, plot(Range(Restrict(test,or(Epoch{2},Epoch{3}))),Data(Restrict(test,or(Epoch{2},Epoch{3}))),'r.')
hold on, plot(Range(Restrict(test,or(Epoch{2},Epoch{3}))),Data(Restrict(test,or(Epoch{2},Epoch{3}))),'ro','markerfacecolor','r')
test=Restrict(tsd(t*1E4,runmean(mean(Sp(:,id12),2),40)),DownDens);
figure, plot(Range(test),Data(test),'k')
hold on, plot(Range(Restrict(test,or(Epoch{2},Epoch{3}))),Data(Restrict(test,or(Epoch{2},Epoch{3}))),'ro','markerfacecolor','r')
test=Restrict(tsd(t*1E4,runmean(mean(Sp(:,id23),2),40)),DownDens);
figure, plot(Range(test),Data(test),'k'), hold on, plot(Range(Restrict(test,or(Epoch{2},Epoch{3}))),Data(Restrict(test,or(Epoch{2},Epoch{3}))),'ro','markerfacecolor','r')
test=Restrict(tsd(t*1E4,runmean(mean(Sp(:,id34),2),40)),DownDens);
figure, plot(Range(test),Data(test),'k'), hold on, plot(Range(Restrict(test,or(Epoch{2},Epoch{3}))),Data(Restrict(test,or(Epoch{2},Epoch{3}))),'ro','markerfacecolor','r')
test=Restrict(tsd(t*1E4,runmean(mean(Sp(:,id45),2),40)),DownDens);
figure, plot(Range(test),Data(test),'k'), hold on, plot(Range(Restrict(test,or(Epoch{2},Epoch{3}))),Data(Restrict(test,or(Epoch{2},Epoch{3}))),'ro','markerfacecolor','r')
id56=find(f>5&f<6);
test=Restrict(tsd(t*1E4,runmean(mean(Sp(:,id56),2),40)),DownDens);
figure, plot(Range(test),Data(test),'k'), hold on, plot(Range(Restrict(test,or(Epoch{2},Epoch{3}))),Data(Restrict(test,or(Epoch{2},Epoch{3}))),'ro','markerfacecolor','r')
figure, plot(Range(DownDens),Data(DownDens),'k'), hold on, plot(Range(Restrict(DownDens,or(Epoch{2},Epoch{3}))),Data(Restrict(DownDens,or(Epoch{2},Epoch{3}))),'ro','markerfacecolor','r')
SleepEpoch=or(Epoch{1},or(Epoch{2},Epoch{3}));
figure, plot(Range(DownDens),Data(DownDens),'k'), hold on, plot(Range(Restrict(DownDens,SleepEpoch)),Data(Restrict(DownDens,SleepEpoch)),'ro','markerfacecolor','r')
figure, plot(Range(DownDens),Data(DownDens),'k'), hold on, plot(Range(Restrict(DownDens,or(Epoch{2},Epoch{3}))),Data(Restrict(DownDens,or(Epoch{2},Epoch{3}))),'ro','markerfacecolor','r')
plot(Range(DownDens),Data(DownDens),'k'), hold on, plot(Range(Restrict(DownDens,or(Epoch{2},Epoch{3}))),Data(Restrict(DownDens,or(Epoch{2},Epoch{3}))),'bo','markerfacecolor','b')
%-- 18/09/2018 15:00:31 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/Script_Divers/
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150409/Breath-Mouse-243-244-09042015/Mouse243/ChannelsToAnalyse/PFCx_deep.mat')
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150409/Breath-Mouse-243-244-09042015/Mouse243/ChannelsToAnalyse/PFCx_sup.mat')
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150409/Breath-Mouse-243-244-09042015/Mouse243/Spectra/Specg_ch26.mat', 'Spectro')
PlotSwaDownDensity
%deep
figure, hold on
subplot(6,1,1), plot(x_intervals*3600, rescale(density_down,0,1),'k','linewidth',2)
% title('down state density'),
subplot(6,1,2), plot(td, runmean(mean(Spd(:,idd01),2)',40),'b','linewidth',2),
% title('[0.01 1] Hz'),
subplot(6,1,3), plot(td, runmean(mean(Spd(:,idd12),2)',40),'b','linewidth',2)
% title('[0.1 2] Hz')
subplot(6,1,4), plot(td, runmean(mean(Spd(:,idd23),2)',40),'b','linewidth',2)
% title('[2 3] Hz'),
subplot(6,1,5), plot(td, runmean(mean(Spd(:,idd34),2)',40),'b','linewidth',2)
% title('[3 4] Hz'),
subplot(6,1,6), plot(td, runmean(mean(Spd(:,idd45),2)',40),'b','linewidth',2)
% title('[4 5] Hz'),
suplabel('down density and SWA in deep layer', 't');
%deep
figure, hold on
subplot(6,1,1), plot(x_intervals*3600, rescale(density_down,0,1),'k','linewidth',2)
% title('down state density'),
subplot(6,1,2), plot(td, runmean(mean(Spd(:,idd01),2)',40),'b','linewidth',2),
% title('[0.01 1] Hz'),
subplot(6,1,3), plot(td, runmean(mean(Spd(:,idd12),2)',40),'b','linewidth',2)
% title('[0.1 2] Hz')
subplot(6,1,4), plot(td, runmean(mean(Spd(:,idd23),2)',40),'b','linewidth',2)
% title('[2 3] Hz'),
subplot(6,1,5), plot(td, runmean(mean(Spd(:,idd34),2)',40),'b','linewidth',2)
% title('[3 4] Hz'),
subplot(6,1,6), plot(td, runmean(mean(Spd(:,idd45),2)',40),'b','linewidth',2)
% title('[4 5] Hz'),
%deep
figure, hold on
subplot(6,1,1), plot(x_intervals*3600, rescale(density_down,0,1),'k','linewidth',2)
title('down state density'),
subplot(6,1,2), plot(td, runmean(mean(Spd(:,idd01),2)',40),'b','linewidth',2),
title('[0.01 1] Hz'),
subplot(6,1,3), plot(td, runmean(mean(Spd(:,idd12),2)',40),'b','linewidth',2)
title('[0.1 2] Hz')
subplot(6,1,4), plot(td, runmean(mean(Spd(:,idd23),2)',40),'b','linewidth',2)
title('[2 3] Hz'),
subplot(6,1,5), plot(td, runmean(mean(Spd(:,idd34),2)',40),'b','linewidth',2)
title('[3 4] Hz'),
subplot(6,1,6), plot(td, runmean(mean(Spd(:,idd45),2)',40),'b','linewidth',2)
title('[4 5] Hz'),
% suplabel('down density and SWA in deep layer', 't');
%sup
figure, hold on
subplot(6,1,1), plot(x_intervals*3600, rescale(density_down,0,1),'k','linewidth',2)
title('down state density'),
subplot(6,1,2), plot(ts, runmean(mean(Sps(:,ids01),2)',40),'b','linewidth',2),
title('[0.01 1] Hz'),
subplot(6,1,3), plot(ts, runmean(mean(Sps(:,ids12),2)',40),'b','linewidth',2)
title('[0.1 2] Hz')
subplot(6,1,4), plot(ts, runmean(mean(Sps(:,ids23),2)',40),'b','linewidth',2)
title('[2 3] Hz'),
subplot(6,1,5), plot(ts, runmean(mean(Sps(:,ids34),2)',40),'b','linewidth',2)
title('[3 4] Hz'),
subplot(6,1,6), plot(ts, runmean(mean(Sps(:,ids45),2)',40),'b','linewidth',2)
title('[4 5] Hz'),
% suplabel('down density and SWA in sup layer', 't');
%-- 18/09/2018 16:19:30 --%
LoadPathMOBs
edit ParcoursRipplesNeuronCrossCorr.m
edit ParcoursRipplesNeuronCrossCorrPlot.m
%load
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
edit NeuronsResponseToRipples_KJ.m
ParcoursRipplesNeuronCrossCorrPlot
NeuronsResponseToRipples_KJ
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/Homeostasis/
edit ParcoursToneNeuronCrossCorrPlot.m
load(fullfile(FolderDeltaDataKJ,'ParcoursToneNeuronCrossCorr.mat'))
NeuronsResponseToRipples_KJ
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
NeuronsResponseToTones_KJ
%-- 18/09/2018 17:01:16 --%
LoadPathMOBs
edit ParcoursToneNeuronCrossCorrPlot.m
edit NeuronsResponseToRipples_KJ.m
edit NeuronsResponseToTones_KJ.m
NeuronsResponseToTones_KJ
NeuronsResponseToRipples_KJ
NeuronsResponseToTones_KJ
load('DeltaSleepEvent.mat', 'TONEtime2')
edit Fig2TonesUpDownDurationTransitions.m
ParcoursToneNeuronCrossCorr
Dir.path'
NeuronsResponseToTones_KJ
clear
clc
LoadPathMOBs
load('DownState.mat')
load('DownState.mat', 'down_PFCx')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
clear
Dir = PathForExperimentsSleepRipplesSpikes('all');
Dir = CheckPathForExperiment_KJ(Dir);
Dir1 = PathForExperimentsSleepRipplesSpikes('DeltaT140');
Dir = CheckPathForExperiment_KJ(Dir);
Dir = PathForExperimentsSleepRipplesSpikes('all');
clear
Dir = PathForExperimentsSleepRipplesSpikes('all');
Dir = CheckPathForExperiment_KJ(Dir);
ParcoursRipplesNeuronCrossCorr
CrossCorrRipplesDownStatesSubstage
%-- 18/09/2018 18:02:41 --%
LoadPathMOBs
ParcoursRipplesNeuronCrossCorr
/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150421/Breath-Mouse-243-21042015
clear
ParcoursRipplesNeuronCrossCorr
Dir3=PathForExperimentsSleepRipplesSpikes('DeltaToneAll');
ParcoursRipplesNeuronCrossCorr
CrossCorrRipplesDownStatesSubstage
%-- 18/09/2018 18:18:09 --%
LoadPathMOBs
edit Fig1TonesInDown_midthesis.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
load('behavResources.mat', 'ToneEvent')
load('SleepSubstages.mat')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
edit Fig2TonesUpDownDurationTransitions.m
TonesInDownN2N3Effect
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
TonesInDownN2N3Raster
edit Fig1TonesInDown_midthesis.m
clc
%load
clear
load(fullfile(FolderDeltaDataKJ,'TonesInDownN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInDownN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'TonesInDownN2N3Raster.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInDownN2N3Raster.mat'))
%load
clear
load(fullfile(FolderDeltaDataKJ,'TonesInDownN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInDownN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'TonesInDownN2N3Raster.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInDownN2N3Raster.mat'))
%params
edges_delay = -400:5:400;
edges_norm  = 0:0.05:1;
%% distrib
%tones
for p=1:4
[mouse.d_before.tones{p}, mouse.x_before.tones{p}] = histcounts(-tones_res.tones_bef{p}/10, edges_delay, 'Normalization','probability');
mouse.x_before.tones{p} = mouse.x_before.tones{p}(1:end-1) + diff(mouse.x_before.tones{p});
[mouse.d_after.tones{p}, mouse.x_after.tones{p}] = histcounts(tones_res.tones_aft{p}/10, edges_delay, 'Normalization','probability');
mouse.x_after.tones{p} = mouse.x_after.tones{p}(1:end-1) + diff(mouse.x_after.tones{p});
norm_tones = tones_res.tones_bef{p} ./ (tones_res.tones_bef{p} + tones_res.tones_aft{p});
[mouse.d_norm.tones{p}, mouse.x_norm.tones{p}] = histcounts(norm_tones, edges_norm, 'Normalization','probability');
mouse.x_norm.tones{p} = mouse.x_norm.tones{p}(1:end-1) + diff(mouse.x_norm.tones{p});
end
%sham
for p=1:length(sham_res.path)
[mouse.d_before.sham{p}, mouse.x_before.sham{p}] = histcounts(-sham_res.sham_bef{p}/10, edges_delay, 'Normalization','probability');
mouse.x_before.sham{p} = mouse.x_before.sham{p}(1:end-1) + diff(mouse.x_before.sham{p});
[mouse.d_after.sham{p}, mouse.x_after.sham{p}] = histcounts(sham_res.sham_aft{p}/10, edges_delay, 'Normalization','probability');
mouse.x_after.sham{p} = mouse.x_after.sham{p}(1:end-1) + diff(mouse.x_after.sham{p});
norm_sham = sham_res.sham_bef{p} ./ (sham_res.sham_bef{p} + sham_res.sham_aft{p});
[mouse.d_norm.sham{p}, mouse.x_norm.sham{p}] = histcounts(norm_sham, edges_norm, 'Normalization','probability');
mouse.x_norm.sham{p} = mouse.x_norm.sham{p}(1:end-1) + diff(mouse.x_norm.sham{p});
end
%% average distributions
d_before.tones     = [];
d_after.tones      = [];
d_norm.tones       = [];
x_before.tones     = mouse.x_before.tones{1};
x_after.tones      = mouse.x_after.tones{1};
x_norm.tones       = mouse.x_norm.tones{1};
d_before.sham      = [];
d_after.sham       = [];
d_norm.sham        = [];
x_before.sham   = mouse.x_before.sham{1};
x_after.sham    = mouse.x_after.sham{1};
x_norm.sham     = mouse.x_norm.sham{1};
%tones
for p=1:4
d_before.tones     = [d_before.tones ; mouse.d_before.tones{p}];
d_after.tones      = [d_after.tones ; mouse.d_after.tones{p}];
d_norm.tones       = [d_norm.tones ; mouse.d_norm.tones{p}];
end
%sham
for p=1:length(sham_res.path)
d_before.sham      = [d_before.sham ; mouse.d_before.sham{p}];
d_after.sham       = [d_after.sham ; mouse.d_after.sham{p}];
d_norm.sham        = [d_norm.sham ; mouse.d_norm.sham{p}];
end
%mean
d_before.tones     = mean(d_before.tones,1);
d_after.tones      = mean(d_after.tones,1);
d_norm.tones       = mean(d_norm.tones,1);
std_norm.tones     = std(d_norm.tones,1);
d_before.sham     = mean(d_before.sham,1);
d_after.sham      = mean(d_after.sham,1);
d_norm.sham       = mean(d_norm.sham,1);
std_norm.sham       = std(d_norm.sham,1);
%distrib
d_before.tones(x_before.tones>0)=[];
x_before.tones(x_before.tones>0)=[];
d_before.sham(x_before.sham>0)=[];
x_before.sham(x_before.sham>0)=[];
d_after.tones(x_after.tones<0)=[];
x_after.tones(x_after.tones<0)=[];
d_after.sham(x_after.sham<0)=[];
x_after.sham(x_after.sham<0)=[];
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
%load
clear
load(fullfile(FolderDeltaDataKJ,'TonesInDownN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInDownN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'TonesInDownN2N3Raster.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInDownN2N3Raster.mat'))
%params
edges_delay = -400:5:400;
edges_norm  = 0:0.05:1;
%% distrib
%tones
for p=1:length(tones_res.path)
%N2
[n2.d_before.tones{p}, n2.x_before.tones{p}] = histcounts(-tones_res.n2.tones_bef{p}/10, edges_delay, 'Normalization','probability');
n2.x_before.tones{p} = n2.x_before.tones{p}(1:end-1) + diff(n2.x_before.tones{p});
[n2.d_after.tones{p}, n2.x_after.tones{p}] = histcounts(tones_res.n2.tones_aft{p}/10, edges_delay, 'Normalization','probability');
n2.x_after.tones{p} = n2.x_after.tones{p}(1:end-1) + diff(n2.x_after.tones{p});
norm_tones = tones_res.n2.tones_bef{p} ./ (tones_res.n2.tones_bef{p} + tones_res.n2.tones_aft{p});
[n2.d_norm.tones{p}, n2.x_norm.tones{p}] = histcounts(norm_tones, edges_norm, 'Normalization','probability');
n2.x_norm.tones{p} = n2.x_norm.tones{p}(1:end-1) + diff(n2.x_norm.tones{p});
%N3
[n3.d_before.tones{p}, n3.x_before.tones{p}] = histcounts(-tones_res.n3.tones_bef{p}/10, edges_delay, 'Normalization','probability');
n3.x_before.tones{p} = n3.x_before.tones{p}(1:end-1) + diff(n3.x_before.tones{p});
[n3.d_after.tones{p}, n3.x_after.tones{p}] = histcounts(tones_res.n3.tones_aft{p}/10, edges_delay, 'Normalization','probability');
n3.x_after.tones{p} = n3.x_after.tones{p}(1:end-1) + diff(n3.x_after.tones{p});
norm_tones = tones_res.n3.tones_bef{p} ./ (tones_res.n3.tones_bef{p} + tones_res.n3.tones_aft{p});
[n3.d_norm.tones{p}, n3.x_norm.tones{p}] = histcounts(norm_tones, edges_norm, 'Normalization','probability');
n3.x_norm.tones{p} = n3.x_norm.tones{p}(1:end-1) + diff(n3.x_norm.tones{p});
end
%sham
for p=1:length(sham_res.path)
%N2
[n2.d_before.sham{p}, n2.x_before.sham{p}] = histcounts(-sham_res.n2.sham_bef{p}/10, edges_delay, 'Normalization','probability');
n2.x_before.sham{p} = n2.x_before.sham{p}(1:end-1) + diff(n2.x_before.sham{p});
[n2.d_after.sham{p}, n2.x_after.sham{p}] = histcounts(sham_res.n2.sham_aft{p}/10, edges_delay, 'Normalization','probability');
n2.x_after.sham{p} = n2.x_after.sham{p}(1:end-1) + diff(n2.x_after.sham{p});
norm_sham = sham_res.n2.sham_bef{p} ./ (sham_res.n2.sham_bef{p} + sham_res.n2.sham_aft{p});
[n2.d_norm.sham{p}, n2.x_norm.sham{p}] = histcounts(norm_sham, edges_norm, 'Normalization','probability');
n2.x_norm.sham{p} = n2.x_norm.sham{p}(1:end-1) + diff(n2.x_norm.sham{p});
%N3
[n3.d_before.sham{p}, n3.x_before.sham{p}] = histcounts(-sham_res.n3.sham_bef{p}/10, edges_delay, 'Normalization','probability');
n3.x_before.sham{p} = n3.x_before.sham{p}(1:end-1) + diff(n3.x_before.sham{p});
[n3.d_after.sham{p}, n3.x_after.sham{p}] = histcounts(sham_res.n3.sham_aft{p}/10, edges_delay, 'Normalization','probability');
n3.x_after.sham{p} = n3.x_after.sham{p}(1:end-1) + diff(n3.x_after.sham{p});
norm_sham = sham_res.n3.sham_bef{p} ./ (sham_res.n3.sham_bef{p} + sham_res.n3.sham_aft{p});
[n3.d_norm.sham{p}, n3.x_norm.sham{p}] = histcounts(norm_sham, edges_norm, 'Normalization','probability');
n3.x_norm.sham{p} = n3.x_norm.sham{p}(1:end-1) + diff(n3.x_norm.sham{p});
end
clear
load(fullfile(FolderDeltaDataKJ,'TonesInDownN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInDownN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'TonesInDownN2N3Raster.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInDownN2N3Raster.mat'))
%params
edges_delay = -400:5:400;
edges_norm  = 0:0.05:1;
%% distrib
%tones
for p=1:length(tones_res.path)
%N2
[n2.d_before.tones{p}, n2.x_before.tones{p}] = histcounts(-tones_res.n2.tones_bef{p}/10, edges_delay, 'Normalization','probability');
n2.x_before.tones{p} = n2.x_before.tones{p}(1:end-1) + diff(n2.x_before.tones{p});
[n2.d_after.tones{p}, n2.x_after.tones{p}] = histcounts(tones_res.n2.tones_aft{p}/10, edges_delay, 'Normalization','probability');
n2.x_after.tones{p} = n2.x_after.tones{p}(1:end-1) + diff(n2.x_after.tones{p});
norm_tones = tones_res.n2.tones_bef{p} ./ (tones_res.n2.tones_bef{p} + tones_res.n2.tones_aft{p});
[n2.d_norm.tones{p}, n2.x_norm.tones{p}] = histcounts(norm_tones, edges_norm, 'Normalization','probability');
n2.x_norm.tones{p} = n2.x_norm.tones{p}(1:end-1) + diff(n2.x_norm.tones{p});
%N3
[n3.d_before.tones{p}, n3.x_before.tones{p}] = histcounts(-tones_res.n3.tones_bef{p}/10, edges_delay, 'Normalization','probability');
n3.x_before.tones{p} = n3.x_before.tones{p}(1:end-1) + diff(n3.x_before.tones{p});
[n3.d_after.tones{p}, n3.x_after.tones{p}] = histcounts(tones_res.n3.tones_aft{p}/10, edges_delay, 'Normalization','probability');
n3.x_after.tones{p} = n3.x_after.tones{p}(1:end-1) + diff(n3.x_after.tones{p});
norm_tones = tones_res.n3.tones_bef{p} ./ (tones_res.n3.tones_bef{p} + tones_res.n3.tones_aft{p});
[n3.d_norm.tones{p}, n3.x_norm.tones{p}] = histcounts(norm_tones, edges_norm, 'Normalization','probability');
n3.x_norm.tones{p} = n3.x_norm.tones{p}(1:end-1) + diff(n3.x_norm.tones{p});
end
%sham
for p=1:length(sham_res.path)
%N2
[n2.d_before.sham{p}, n2.x_before.sham{p}] = histcounts(-sham_res.n2.sham_bef{p}/10, edges_delay, 'Normalization','probability');
n2.x_before.sham{p} = n2.x_before.sham{p}(1:end-1) + diff(n2.x_before.sham{p});
[n2.d_after.sham{p}, n2.x_after.sham{p}] = histcounts(sham_res.n2.sham_aft{p}/10, edges_delay, 'Normalization','probability');
n2.x_after.sham{p} = n2.x_after.sham{p}(1:end-1) + diff(n2.x_after.sham{p});
norm_sham = sham_res.n2.sham_bef{p} ./ (sham_res.n2.sham_bef{p} + sham_res.n2.sham_aft{p});
[n2.d_norm.sham{p}, n2.x_norm.sham{p}] = histcounts(norm_sham, edges_norm, 'Normalization','probability');
n2.x_norm.sham{p} = n2.x_norm.sham{p}(1:end-1) + diff(n2.x_norm.sham{p});
%N3
[n3.d_before.sham{p}, n3.x_before.sham{p}] = histcounts(-sham_res.n3.sham_bef{p}/10, edges_delay, 'Normalization','probability');
n3.x_before.sham{p} = n3.x_before.sham{p}(1:end-1) + diff(n3.x_before.sham{p});
[n3.d_after.sham{p}, n3.x_after.sham{p}] = histcounts(sham_res.n3.sham_aft{p}/10, edges_delay, 'Normalization','probability');
n3.x_after.sham{p} = n3.x_after.sham{p}(1:end-1) + diff(n3.x_after.sham{p});
norm_sham = sham_res.n3.sham_bef{p} ./ (sham_res.n3.sham_bef{p} + sham_res.n3.sham_aft{p});
[n3.d_norm.sham{p}, n3.x_norm.sham{p}] = histcounts(norm_sham, edges_norm, 'Normalization','probability');
n3.x_norm.sham{p} = n3.x_norm.sham{p}(1:end-1) + diff(n3.x_norm.sham{p});
end
%% average distributions
%N2
d_before.n2.tones     = [];
d_after.n2.tones      = [];
d_norm.n2.tones       = [];
x_before.n2.tones     = n2.x_before.tones{1};
x_after.n2.tones      = n2.x_after.tones{1};
x_norm.n2.tones       = n2.x_norm.tones{1};
d_before.n2.sham      = [];
d_after.n2.sham       = [];
d_norm.n2.sham        = [];
x_before.n2.sham   = n2.x_before.sham{1};
x_after.n2.sham    = n2.x_after.sham{1};
x_norm.n2.sham     = n2.x_norm.sham{1};
%N3
d_before.n3.tones     = [];
d_after.n3.tones      = [];
d_norm.n3.tones       = [];
x_before.n3.tones     = n3.x_before.tones{1};
x_after.n3.tones      = n3.x_after.tones{1};
x_norm.n3.tones       = n3.x_norm.tones{1};
d_before.n3.sham      = [];
d_after.n3.sham       = [];
d_norm.n3.sham        = [];
x_before.n3.sham   = n3.x_before.sham{1};
x_after.n3.sham    = n3.x_after.sham{1};
x_norm.n3.sham     = n3.x_norm.sham{1};
%tones
for p=1:length(tones_res.path)
d_before.n2.tones     = [d_before.n2.tones ; n2.d_before.tones{p}];
d_after.n2.tones      = [d_after.n2.tones ; n2.d_after.tones{p}];
d_norm.n2.tones       = [d_norm.n2.tones ; n2.d_norm.tones{p}];
d_before.n3.tones     = [d_before.n3.tones ; n3.d_before.tones{p}];
d_after.n3.tones      = [d_after.n3.tones ; n3.d_after.tones{p}];
d_norm.n3.tones       = [d_norm.n3.tones ; n3.d_norm.tones{p}];
end
%sham
for p=1:length(sham_res.path)
d_before.n2.sham      = [d_before.n2.sham ; n2.d_before.sham{p}];
d_after.n2.sham       = [d_after.n2.sham ; n2.d_after.sham{p}];
d_norm.n2.sham        = [d_norm.n2.sham ; n2.d_norm.sham{p}];
d_before.n3.sham      = [d_before.n3.sham ; n3.d_before.sham{p}];
d_after.n3.sham       = [d_after.n3.sham ; n3.d_after.sham{p}];
d_norm.n3.sham        = [d_norm.n3.sham ; n3.d_norm.sham{p}];
end
%mean N2
d_before.n2.tones     = mean(d_before.n2.tones,1);
d_after.n2.tones      = mean(d_after.n2.tones,1);
d_norm.n2.tones       = mean(d_norm.n2.tones,1);
std_norm.n2.tones     = std(d_norm.n2.tones,1);
d_before.n2.sham     = mean(d_before.n2.sham,1);
d_after.n2.sham      = mean(d_after.n2.sham,1);
d_norm.n2.sham       = mean(d_norm.n2.sham,1);
std_norm.n2.sham     = std(d_norm.n2.sham,1);
%mean N3
d_before.n3.tones     = mean(d_before.n3.tones,1);
d_after.n3.tones      = mean(d_after.n3.tones,1);
d_norm.n3.tones       = mean(d_norm.n3.tones,1);
std_norm.n3.tones     = std(d_norm.n3.tones,1);
d_before.n3.sham     = mean(d_before.n3.sham,1);
d_after.n3.sham      = mean(d_after.n3.sham,1);
d_norm.n3.sham       = mean(d_norm.n3.sham,1);
std_norm.n3.sham     = std(d_norm.n3.sham,1);
%distrib N2
d_before.n2.tones(x_before.n2.tones>0)=[];
x_before.n2.tones(x_before.n2.tones>0)=[];
d_before.n2.sham(x_before.n2.sham>0)=[];
x_before.n2.sham(x_before.n2.sham>0)=[];
d_after.n2.tones(x_after.n2.tones<0)=[];
x_after.n2.tones(x_after.n2.tones<0)=[];
d_after.n2.sham(x_after.n2.sham<0)=[];
x_after.n2.sham(x_after.n2.sham<0)=[];
%distrib N3
d_before.n3.tones(x_before.n3.tones>0)=[];
x_before.n3.tones(x_before.n3.tones>0)=[];
d_before.n3.sham(x_before.n3.sham>0)=[];
x_before.n3.sham(x_before.n3.sham>0)=[];
d_after.n3.tones(x_after.n3.tones<0)=[];
x_after.n3.tones(x_after.n3.tones<0)=[];
d_after.n3.sham(x_after.n3.sham<0)=[];
x_after.n3.sham(x_after.n3.sham<0)=[];
%% pool data
select_order = 'before'; %{'before','after'}
MatMUA.n2.tones  = []; MatMUA.n2.sham   = [];
ibefore.n2.tones = []; ibefore.n2.sham  = [];
MatMUA.n3.tones  = []; MatMUA.n3.sham   = [];
ibefore.n3.tones = []; ibefore.n3.sham  = [];
%tones
for p=1:length(tones_res.path)
%N2
raster_tsd = tonesras_res.n2.rasters{p};
x_mua = Range(raster_tsd);
MatMUA.n2.tones = [MatMUA.n2.tones ; Data(raster_tsd)'];
ibefore.n2.tones = [ibefore.n2.tones ; tonesras_res.n2.(select_order){p}];
%N3
raster_tsd = tonesras_res.n3.rasters{p};
x_mua = Range(raster_tsd);
MatMUA.n3.tones = [MatMUA.n3.tones ; Data(raster_tsd)'];
ibefore.n3.tones = [ibefore.n3.tones ; tonesras_res.n3.(select_order){p}];
end
%sham
for p=1:length(sham_res.path)
%N2
raster_tsd = shamras_res.n2.rasters{p};
x_mua = Range(raster_tsd);
MatMUA.n2.sham = [MatMUA.n2.sham ; Data(raster_tsd)'];
ibefore.n2.sham = [ibefore.n2.sham ; shamras_res.n3.(select_order){p}];
%N3
raster_tsd = shamras_res.n3.rasters{p};
x_mua = Range(raster_tsd);
MatMUA.n3.sham = [MatMUA.n3.sham ; Data(raster_tsd)'];
ibefore.n3.sham = [ibefore.n3.sham ; shamras_res.n3.(select_order){p}];
end
%load
clear
load(fullfile(FolderDeltaDataKJ,'TonesInDownN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInDownN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'TonesInDownN2N3Raster.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInDownN2N3Raster.mat'))
%params
edges_delay = -400:5:400;
edges_norm  = 0:0.05:1;
%% distrib
%tones
for p=1:length(tones_res.path)
%N2
[n2.d_before.tones{p}, n2.x_before.tones{p}] = histcounts(-tones_res.n2.tones_bef{p}/10, edges_delay, 'Normalization','probability');
n2.x_before.tones{p} = n2.x_before.tones{p}(1:end-1) + diff(n2.x_before.tones{p});
[n2.d_after.tones{p}, n2.x_after.tones{p}] = histcounts(tones_res.n2.tones_aft{p}/10, edges_delay, 'Normalization','probability');
n2.x_after.tones{p} = n2.x_after.tones{p}(1:end-1) + diff(n2.x_after.tones{p});
norm_tones = tones_res.n2.tones_bef{p} ./ (tones_res.n2.tones_bef{p} + tones_res.n2.tones_aft{p});
[n2.d_norm.tones{p}, n2.x_norm.tones{p}] = histcounts(norm_tones, edges_norm, 'Normalization','probability');
n2.x_norm.tones{p} = n2.x_norm.tones{p}(1:end-1) + diff(n2.x_norm.tones{p});
%N3
[n3.d_before.tones{p}, n3.x_before.tones{p}] = histcounts(-tones_res.n3.tones_bef{p}/10, edges_delay, 'Normalization','probability');
n3.x_before.tones{p} = n3.x_before.tones{p}(1:end-1) + diff(n3.x_before.tones{p});
[n3.d_after.tones{p}, n3.x_after.tones{p}] = histcounts(tones_res.n3.tones_aft{p}/10, edges_delay, 'Normalization','probability');
n3.x_after.tones{p} = n3.x_after.tones{p}(1:end-1) + diff(n3.x_after.tones{p});
norm_tones = tones_res.n3.tones_bef{p} ./ (tones_res.n3.tones_bef{p} + tones_res.n3.tones_aft{p});
[n3.d_norm.tones{p}, n3.x_norm.tones{p}] = histcounts(norm_tones, edges_norm, 'Normalization','probability');
n3.x_norm.tones{p} = n3.x_norm.tones{p}(1:end-1) + diff(n3.x_norm.tones{p});
end
%sham
for p=1:length(sham_res.path)
%N2
[n2.d_before.sham{p}, n2.x_before.sham{p}] = histcounts(-sham_res.n2.sham_bef{p}/10, edges_delay, 'Normalization','probability');
n2.x_before.sham{p} = n2.x_before.sham{p}(1:end-1) + diff(n2.x_before.sham{p});
[n2.d_after.sham{p}, n2.x_after.sham{p}] = histcounts(sham_res.n2.sham_aft{p}/10, edges_delay, 'Normalization','probability');
n2.x_after.sham{p} = n2.x_after.sham{p}(1:end-1) + diff(n2.x_after.sham{p});
norm_sham = sham_res.n2.sham_bef{p} ./ (sham_res.n2.sham_bef{p} + sham_res.n2.sham_aft{p});
[n2.d_norm.sham{p}, n2.x_norm.sham{p}] = histcounts(norm_sham, edges_norm, 'Normalization','probability');
n2.x_norm.sham{p} = n2.x_norm.sham{p}(1:end-1) + diff(n2.x_norm.sham{p});
%N3
[n3.d_before.sham{p}, n3.x_before.sham{p}] = histcounts(-sham_res.n3.sham_bef{p}/10, edges_delay, 'Normalization','probability');
n3.x_before.sham{p} = n3.x_before.sham{p}(1:end-1) + diff(n3.x_before.sham{p});
[n3.d_after.sham{p}, n3.x_after.sham{p}] = histcounts(sham_res.n3.sham_aft{p}/10, edges_delay, 'Normalization','probability');
n3.x_after.sham{p} = n3.x_after.sham{p}(1:end-1) + diff(n3.x_after.sham{p});
norm_sham = sham_res.n3.sham_bef{p} ./ (sham_res.n3.sham_bef{p} + sham_res.n3.sham_aft{p});
[n3.d_norm.sham{p}, n3.x_norm.sham{p}] = histcounts(norm_sham, edges_norm, 'Normalization','probability');
n3.x_norm.sham{p} = n3.x_norm.sham{p}(1:end-1) + diff(n3.x_norm.sham{p});
end
%% average distributions
%N2
d_before.n2.tones     = [];
d_after.n2.tones      = [];
d_norm.n2.tones       = [];
x_before.n2.tones     = n2.x_before.tones{1};
x_after.n2.tones      = n2.x_after.tones{1};
x_norm.n2.tones       = n2.x_norm.tones{1};
d_before.n2.sham      = [];
d_after.n2.sham       = [];
d_norm.n2.sham        = [];
x_before.n2.sham   = n2.x_before.sham{1};
x_after.n2.sham    = n2.x_after.sham{1};
x_norm.n2.sham     = n2.x_norm.sham{1};
%N3
d_before.n3.tones     = [];
d_after.n3.tones      = [];
d_norm.n3.tones       = [];
x_before.n3.tones     = n3.x_before.tones{1};
x_after.n3.tones      = n3.x_after.tones{1};
x_norm.n3.tones       = n3.x_norm.tones{1};
d_before.n3.sham      = [];
d_after.n3.sham       = [];
d_norm.n3.sham        = [];
x_before.n3.sham   = n3.x_before.sham{1};
x_after.n3.sham    = n3.x_after.sham{1};
x_norm.n3.sham     = n3.x_norm.sham{1};
%tones
for p=1:length(tones_res.path)
d_before.n2.tones     = [d_before.n2.tones ; n2.d_before.tones{p}];
d_after.n2.tones      = [d_after.n2.tones ; n2.d_after.tones{p}];
d_norm.n2.tones       = [d_norm.n2.tones ; n2.d_norm.tones{p}];
d_before.n3.tones     = [d_before.n3.tones ; n3.d_before.tones{p}];
d_after.n3.tones      = [d_after.n3.tones ; n3.d_after.tones{p}];
d_norm.n3.tones       = [d_norm.n3.tones ; n3.d_norm.tones{p}];
end
%sham
for p=1:length(sham_res.path)
d_before.n2.sham      = [d_before.n2.sham ; n2.d_before.sham{p}];
d_after.n2.sham       = [d_after.n2.sham ; n2.d_after.sham{p}];
d_norm.n2.sham        = [d_norm.n2.sham ; n2.d_norm.sham{p}];
d_before.n3.sham      = [d_before.n3.sham ; n3.d_before.sham{p}];
d_after.n3.sham       = [d_after.n3.sham ; n3.d_after.sham{p}];
d_norm.n3.sham        = [d_norm.n3.sham ; n3.d_norm.sham{p}];
end
%mean N2
d_before.n2.tones     = mean(d_before.n2.tones,1);
d_after.n2.tones      = mean(d_after.n2.tones,1);
d_norm.n2.tones       = mean(d_norm.n2.tones,1);
std_norm.n2.tones     = std(d_norm.n2.tones,1);
d_before.n2.sham     = mean(d_before.n2.sham,1);
d_after.n2.sham      = mean(d_after.n2.sham,1);
d_norm.n2.sham       = mean(d_norm.n2.sham,1);
std_norm.n2.sham     = std(d_norm.n2.sham,1);
%mean N3
d_before.n3.tones     = mean(d_before.n3.tones,1);
d_after.n3.tones      = mean(d_after.n3.tones,1);
d_norm.n3.tones       = mean(d_norm.n3.tones,1);
std_norm.n3.tones     = std(d_norm.n3.tones,1);
d_before.n3.sham     = mean(d_before.n3.sham,1);
d_after.n3.sham      = mean(d_after.n3.sham,1);
d_norm.n3.sham       = mean(d_norm.n3.sham,1);
std_norm.n3.sham     = std(d_norm.n3.sham,1);
%distrib N2
d_before.n2.tones(x_before.n2.tones>0)=[];
x_before.n2.tones(x_before.n2.tones>0)=[];
d_before.n2.sham(x_before.n2.sham>0)=[];
x_before.n2.sham(x_before.n2.sham>0)=[];
d_after.n2.tones(x_after.n2.tones<0)=[];
x_after.n2.tones(x_after.n2.tones<0)=[];
d_after.n2.sham(x_after.n2.sham<0)=[];
x_after.n2.sham(x_after.n2.sham<0)=[];
%distrib N3
d_before.n3.tones(x_before.n3.tones>0)=[];
x_before.n3.tones(x_before.n3.tones>0)=[];
d_before.n3.sham(x_before.n3.sham>0)=[];
x_before.n3.sham(x_before.n3.sham>0)=[];
d_after.n3.tones(x_after.n3.tones<0)=[];
x_after.n3.tones(x_after.n3.tones<0)=[];
d_after.n3.sham(x_after.n3.sham<0)=[];
x_after.n3.sham(x_after.n3.sham<0)=[];
%% pool data
select_order = 'before'; %{'before','after'}
MatMUA.n2.tones  = []; MatMUA.n2.sham   = [];
ibefore.n2.tones = []; ibefore.n2.sham  = [];
MatMUA.n3.tones  = []; MatMUA.n3.sham   = [];
ibefore.n3.tones = []; ibefore.n3.sham  = [];
%tones
for p=1:length(tones_res.path)
%N2
raster_tsd = tonesras_res.n2.rasters{p};
x_mua = Range(raster_tsd);
MatMUA.n2.tones = [MatMUA.n2.tones ; Data(raster_tsd)'];
ibefore.n2.tones = [ibefore.n2.tones ; tonesras_res.n2.(select_order){p}];
%N3
raster_tsd = tonesras_res.n3.rasters{p};
x_mua = Range(raster_tsd);
MatMUA.n3.tones = [MatMUA.n3.tones ; Data(raster_tsd)'];
ibefore.n3.tones = [ibefore.n3.tones ; tonesras_res.n3.(select_order){p}];
end
%sham
for p=1:length(sham_res.path)
%N2
raster_tsd = shamras_res.n2.rasters{p};
x_mua = Range(raster_tsd);
MatMUA.n2.sham = [MatMUA.n2.sham ; Data(raster_tsd)'];
ibefore.n2.sham = [ibefore.n2.sham ; shamras_res.n3.(select_order){p}];
%N3
raster_tsd = shamras_res.n3.rasters{p};
x_mua = Range(raster_tsd);
MatMUA.n3.sham = [MatMUA.n3.sham ; Data(raster_tsd)'];
ibefore.n3.sham = [ibefore.n3.sham ; shamras_res.n3.(select_order){p}];
end
%sort raster in N2
[~,idx_order] = sort(ibefore.n2.tones);
MatMUA.n2.tones  = MatMUA.n2.tones(idx_order, :);
[~,idx_order] = sort(ibefore.n2.sham);
MatMUA.n2.sham  = MatMUA.n2.sham(idx_order, :);
%sort raster in N3
[~,idx_order] = sort(ibefore.n3.tones);
MatMUA.n3.tones  = MatMUA.n3.tones(idx_order, :);
[~,idx_order] = sort(ibefore.n3.sham);
MatMUA.n3.sham  = MatMUA.n3.sham(idx_order, :);
FigTonesInDownN2N3
select_order = 'before'; %{'before','after'}
MatMUA.n2.tones  = []; MatMUA.n2.sham   = [];
ibefore.n2.tones = []; ibefore.n2.sham  = [];
MatMUA.n3.tones  = []; MatMUA.n3.sham   = [];
ibefore.n3.tones = []; ibefore.n3.sham  = [];
%tones
for p=1:length(tones_res.path)
%N2
raster_tsd = tonesras_res.n2.rasters{p};
x_mua = Range(raster_tsd);
MatMUA.n2.tones = [MatMUA.n2.tones ; Data(raster_tsd)'];
ibefore.n2.tones = [ibefore.n2.tones ; tonesras_res.n2.(select_order){p}];
%N3
raster_tsd = tonesras_res.n3.rasters{p};
x_mua = Range(raster_tsd);
MatMUA.n3.tones = [MatMUA.n3.tones ; Data(raster_tsd)'];
ibefore.n3.tones = [ibefore.n3.tones ; tonesras_res.n3.(select_order){p}];
end
%sham
for p=1:length(sham_res.path)
%N2
raster_tsd = shamras_res.n2.rasters{p};
x_mua = Range(raster_tsd);
MatMUA.n2.sham = [MatMUA.n2.sham ; Data(raster_tsd)'];
ibefore.n2.sham = [ibefore.n2.sham ; shamras_res.n2.(select_order){p}];
%N3
raster_tsd = shamras_res.n3.rasters{p};
x_mua = Range(raster_tsd);
MatMUA.n3.sham = [MatMUA.n3.sham ; Data(raster_tsd)'];
ibefore.n3.sham = [ibefore.n3.sham ; shamras_res.n3.(select_order){p}];
end
%sort raster in N2
[~,idx_order] = sort(ibefore.n2.tones);
MatMUA.n2.tones  = MatMUA.n2.tones(idx_order, :);
[~,idx_order] = sort(ibefore.n2.sham);
MatMUA.n2.sham  = MatMUA.n2.sham(idx_order, :);
%sort raster in N3
[~,idx_order] = sort(ibefore.n3.tones);
MatMUA.n3.tones  = MatMUA.n3.tones(idx_order, :);
[~,idx_order] = sort(ibefore.n3.sham);
MatMUA.n3.sham  = MatMUA.n3.sham(idx_order, :);
FigTonesInDownN2N3
edit Fig2TonesUpDownDurationTransitions.m
TonesInUpN2N3Effect
TonesInUpN2N3Raster
ShamInUpN2N3Effect
ShamInUpN2N3Raster
FigTonesInupN2N3
clear
clc
edit FigTonesInupN2N3.m
edit FigTonesInDownN2N3.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
FigTonesInUpN2N3
FigTonesInDownN2N3
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
%-- 18/09/2018 20:06:47 --%
LoadPathMOBs
%-- 18/09/2018 20:48:24 --%
LoadPathMOBs
FigTonesInUpN2N3
edit FigTonesInUpN2N3
FigTonesInUpN2N3
%load
clear
load(fullfile(FolderDeltaDataKJ,'TonesInUpN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInUpN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'TonesInUpN2N3Raster.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInUpN2N3Raster.mat'))
%params
edges_delay = -400:5:400;
edges_norm  = 0:0.05:1;
%% transitions probability
%tones
proba.n2.tones = [];
proba.n3.tones = [];
for p=1:length(tones_res.path)
%N2
proba.n2.tones = [proba.n2.tones tones_res.n2.transit_rate{p}];
%N3
proba.n3.tones = [proba.n3.tones tones_res.n3.transit_rate{p}];
end
%sham
proba.n2.sham = [];
proba.n3.sham = [];
for p=1:length(tones_res.path)
%N2
proba.n2.sham = [proba.n2.sham sham_res.n2.transit_rate{p}];
%N3
proba.n3.sham = [proba.n3.sham sham_res.n3.transit_rate{p}];
end
%% transitions probability
%tones
proba.n2.tones = [];
proba.n3.tones = [];
for p=1:length(tones_res.path)
%N2
proba.n2.tones = [proba.n2.tones tones_res.n2.transit_rate{p}];
%N3
proba.n3.tones = [proba.n3.tones tones_res.n3.transit_rate{p}];
end
%sham
proba.n2.sham = [];
proba.n3.sham = [];
for p=1:length(sham_res.path)
%N2
proba.n2.sham = [proba.n2.sham sham_res.n2.transit_rate{p}];
%N3
proba.n3.sham = [proba.n3.sham sham_res.n3.transit_rate{p}];
end
edit QuantifSlowWaveSlowDyn.m
FigTonesInUpN2N3
FigTonesInDownN2N3
FigTonesInUpN2N3
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
FigTonesInUpN2N3
FigTonesInDownN2N3
FigTonesInUpN2N3
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
%load
clear
load(fullfile(FolderDeltaDataKJ,'CrossCorrRipplesDownStatesSubstage.mat'))
CrossCorrRipplesDownStatesSubstagePlot
std_cc.start{s} = std(CC.startdown{s}, 1);
CrossCorrRipplesDownStatesSubstagePlot
edit MotherCurvesDelayPlot.m
CrossCorrRipplesDownStatesSubstagePlot
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
load('DownState.mat', 'down_PFCx')
ParcoursDownNeuronCrossCorr
%-- 18/09/2018 21:54:32 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
NeuronsResponseToTones_KJ
edit NeuronsResponseToTones_KJ
clear
%% Response to all ripples
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'tone')
AllPeth = [AllPeth ; rippeth_res.MatN2N3{p}];
end
end
t_corr = rippeth_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2rip] = sort(idmax);
Opeth_rip = Zpeth(id2rip,:);
%% Response to tones
clearvars -except Opeth_rip id2rip
load(fullfile(FolderDeltaDataKJ,'ParcoursToneNeuronCrossCorr.mat'))
AllPeth = [];
N1Peth = [];
N2Peth = [];
N3Peth = [];
N2N3Peth = [];
RemPeth = [];
WakePeth = [];
for p=1:4%length(tonepeth_res.path)
AllPeth = [AllPeth ; tonepeth_res.MatTones{p}];
N1Peth = [N1Peth ; tonepeth_res.MatN1{p}];
N2Peth = [N2Peth ; tonepeth_res.MatN2{p}];
N3Peth = [N3Peth ; tonepeth_res.MatN3{p}];
N2N3Peth = [N2N3Peth ; tonepeth_res.MatN2N3{p}];
RemPeth = [RemPeth ; tonepeth_res.MatREM{p}];
WakePeth = [WakePeth ; tonepeth_res.MatWake{p}];
end
t_corr = tonepeth_res.t_corr{1};
clear
%% Response to all ripples
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'tone')
AllPeth = [AllPeth ; rippeth_res.MatN2N3{p}];
end
end
t_corr = rippeth_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2rip] = sort(idmax);
Opeth_rip = Zpeth(id2rip,:);
clear
%% Response to all ripples
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'tone')
AllPeth = [AllPeth ; rippeth_res.MatN2N3{p}];
end
end
t_corr = rippeth_res.t_corr{1};
NeuronsResponseToTones_KJ
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'tone')
AllPeth = [AllPeth ; rippeth_res.MatN2N3{p}];
end
end
t_corr = rippeth_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
N1Peth = [];
N2Peth = [];
N3Peth = [];
N2N3Peth = [];
RemPeth = [];
WakePeth = [];
NeuronsResponseToTones_KJ
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
N1Peth = [];
N2Peth = [];
N3Peth = [];
N2N3Peth = [];
RemPeth = [];
WakePeth = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatRipples{p}];
N1Peth = [N1Peth ; rippeth_res.MatN1{p}];
N2Peth = [N2Peth ; rippeth_res.MatN2{p}];
N3Peth = [N3Peth ; rippeth_res.MatN3{p}];
N2N3Peth = [N2N3Peth ; rippeth_res.MatN2N3{p}];
RemPeth = [RemPeth ; rippeth_res.MatREM{p}];
WakePeth = [WakePeth ; rippeth_res.MatWake{p}];
end
t_corr = rippeth_res.t_corr{1};
NeuronsResponseToRipples_KJ
size(Opeth_all,1)
runmean(mean(Opeth_n2(id4,:)),2);
hold on, h(4) = plot(t_corr,runmean(mean(Opeth_n2(id4,:)),2),'b');
NeuronsResponseToRipples_KJ
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursDownNeuronCrossCorr.mat'))
NeuronsResponseToDown_KJ
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursDownNeuronCrossCorr.mat'))
cd(FolderDeltaDataKJ)
save ParcoursDownNeuronCrossCorr.mat downpeth_res binsize_cc nbins_cc
NeuronsResponseToDown_KJ
%% PLOT response curve on end down
id1=1:300; id2=300:700; id3=800:1200; id4=12000:size(Opeth_rip,1);
id1=1:50; id2=50:120; id3=120:170; id4=170:size(Opeth_rip,1);
gap = [0.08 0.04];
figure, hold on
subtightplot(2,3,[1 4], gap), hold on
imagesc(t_corr, 1:size(Opeth_rip,1), Opeth_rip);
xlim([-500 500]), ylim([1 size(Opeth_rip,1)])
line([0 0], get(gca,'ylim'), 'linewidth',2),
% caxis([-3.3 9.4]),
title('Neurons on ripples')
subtightplot(2,3,[2 5], gap), hold on
imagesc(t_corr, 1:size(Ope_all,1), Ope_all);
xlim([-500 500]), ylim([1 size(Ope_all,1)])
line([0 0], get(gca,'ylim'), 'linewidth',2),
% caxis([-3.3 9.4]),
title('Neurons on end down')
subtightplot(2,3,3, gap), hold on
hold on, h(1) = plot(t_corr,runmean(mean(Ope_n2(id1,:)),2),'m');
hold on, h(2) = plot(t_corr,runmean(mean(Ope_n2(id2,:)),2),'r');
hold on, h(3) = plot(t_corr,runmean(mean(Ope_n2(id3,:)),2),'k');
hold on, h(4) = plot(t_corr,runmean(mean(Ope_n2(id4,:)),2),'b');
% set(gca,'ylim', [-3 1],'xlim', [-250 250]),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('end down in N2')
subtightplot(2,3,6, gap),
hold on, h(1) = plot(t_corr,runmean(mean(Ope_n3(id1,:)),2),'m');
hold on, h(2) = plot(t_corr,runmean(mean(Ope_n3(id2,:)),2),'r');
hold on, h(3) = plot(t_corr,runmean(mean(Ope_n3(id3,:)),2),'k');
hold on, h(4) = plot(t_corr,runmean(mean(Ope_n3(id4,:)),2),'b');
% set(gca,'ylim', [-3 1],'xlim', [-250 250]),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('end down in N3')
NeuronsResponseToDown_KJ
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
NeuronsResponseToRipples2_KJ
size(Opeth_all,1)
%% Response to all ripples
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'tone')
AllPeth = [AllPeth ; rippeth_res.MatN2N3{p}];
end
end
t_corr = rippeth_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Response to all ripples
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'rdmtone')
AllPeth = [AllPeth ; rippeth_res.MatN2N3{p}];
end
end
t_corr = rippeth_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Response to ripples no down bef
clearvars -except Opeth_all id2xall
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNoDownbefNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(ripcor_res.path)
if strcmpi(ripcor_res.manipe{p}, 'tone')
AllPeth = [AllPeth ; ripcor_res.MatN2N3{p}];
end
end
t_corr = ripcor_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,idbef] = sort(idmax);
Opeth_bef = Zpeth(id2xall,:);
ParcoursRipplesNoDownNeuronCrossCorr
NeuronsResponseToRipples2_KJ
NeuronsResponseToDown_KJ
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
NeuronsResponseToRipples2_KJ
%% Plot raster
%ordered
figure, hold on
subplot(1,2,1), hold on
imagesc(t_corr, 1:size(Opeth_all,1), Opeth_all);
xlim([-500 500]), ylim([1 size(Opeth_all,1)])
line([0 0], get(gca,'ylim'), 'linewidth',2),
caxis([-3.3 9.4]),
title('Neurons on ripples')
subplot(1,2,2), hold on
imagesc(t_corr, 1:size(Opeth_tones,1), Opeth_tones);
xlim([-500 500]), ylim([1 size(Opeth_tones,1)])
line([0 0], get(gca,'ylim'), 'linewidth',2),
caxis([-3.3 9.4]),
title('Neurons on tones')
%% PLOT response curve
id1=1:300; id2=300:700; id3=800:1200; id4=1200:size(Opeth_all,1);
% id1=1:50; id2=50:120; id3=120:170; id4=170:size(Opeth_all,1);
figure,
subplot(2,2,1),
hold on, h(1) = plot(t_corr,runmean(mean(Opeth_all(id1,:)),2),'m');
hold on, h(2) = plot(t_corr,runmean(mean(Opeth_all(id2,:)),2),'r');
hold on, h(3) = plot(t_corr,runmean(mean(Opeth_all(id3,:)),2),'k');
hold on, h(4) = plot(t_corr,runmean(mean(Opeth_all(id4,:)),2),'b');
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h, 'perc 1', 'perc 2', 'perc 3', 'perc 4');
title('all ripples')
subplot(2,2,2),
hold on, h(1) = plot(t_corr,runmean(mean(Opeth_bef(id1,:)),2),'m');
hold on, h(2) = plot(t_corr,runmean(mean(Opeth_bef(id2,:)),2),'r');
hold on, h(3) = plot(t_corr,runmean(mean(Opeth_bef(id3,:)),2),'k');
hold on, h(4) = plot(t_corr,runmean(mean(Opeth_bef(id4,:)),2),'b');
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('ripples no down before')
subplot(2,2,3),
hold on, h(1) = plot(t_corr,runmean(mean(Opeth_nodown(id1,:)),2),'m');
hold on, h(2) = plot(t_corr,runmean(mean(Opeth_nodown(id2,:)),2),'r');
hold on, h(3) = plot(t_corr,runmean(mean(Opeth_nodown(id3,:)),2),'k');
hold on, h(4) = plot(t_corr,runmean(mean(Opeth_nodown(id4,:)),2),'b');
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('ripples no down around')
subplot(2,2,4),
hold on, h(1) = plot(t_corr,runmean(mean(Opeth_tones(id1,:)),2),'m');
hold on, h(2) = plot(t_corr,runmean(mean(Opeth_tones(id2,:)),2),'r');
hold on, h(3) = plot(t_corr,runmean(mean(Opeth_tones(id3,:)),2),'k');
hold on, h(4) = plot(t_corr,runmean(mean(Opeth_tones(id4,:)),2),'b');
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('tones')
NeuronsResponseToRipples2_KJ
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
clear
night_tones = 0;
%% Response to all ripples
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
rip_data{1} = rippeth_res.MatN1{p}; rip_data{2} = rippeth_res.MatN2{p}; rip_data{3} = rippeth_res.MatN3{p};
rip_data{4} = rippeth_res.MatREM{p}; rip_data{4} = rippeth_res.MatWake{p}; rip_data{6} = rippeth_res.MatRipples{p};
rip_data{7} = rippeth_res.MatN2N3{p};
for i=1:7
AllPeth{i} = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'rdmtone') || night_tones==0
AllPeth{i} = [AllPeth{i} ; rip_data{i}{p}];
end
end
end
NeuronsResponseToRipples2_KJ
clear
night_tones = 0;
%% Response to all ripples
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
rip_data{1} = rippeth_res.MatN1; rip_data{2} = rippeth_res.MatN2; rip_data{3} = rippeth_res.MatN3;
rip_data{4} = rippeth_res.MatREM; rip_data{4} = rippeth_res.MatWake; rip_data{6} = rippeth_res.MatRipples;
rip_data{7} = rippeth_res.MatN2N3;
for i=1:7
AllPeth{i} = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'rdmtone') || night_tones==0
AllPeth{i} = [AllPeth{i} ; rip_data{i}{p}];
end
end
end
NeuronsResponseToRipples2_KJ
clear
night_tones = 0;
%% Response to all ripples
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
rip_data{1} = rippeth_res.MatN1; rip_data{2} = rippeth_res.MatN2; rip_data{3} = rippeth_res.MatN3;
rip_data{4} = rippeth_res.MatREM; rip_data{5} = rippeth_res.MatWake; rip_data{6} = rippeth_res.MatRipples;
rip_data{7} = rippeth_res.MatN2N3;
for i=1:7
AllPeth{i} = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'rdmtone') || night_tones==0
AllPeth{i} = [AllPeth{i} ; rip_data{i}{p}];
end
end
end
t_corr = rippeth_res.t_corr{1};
NeuronsResponseToRipples2_KJ
close all
NeuronsResponseToRipples2_KJ
NeuronsResponseToDown_KJ
NeuronsResponseToTones_KJ
NeuronsResponseToRipples_KJ
clear
edit FigTonesInUpN2N3
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
edit Fig2RipplesInUp_midthesis.m
edit FigShamInUpN2N3
RipplesInUpN2N3Effect
edit TonesInUpN2N3Raster.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
RipplesInUpN2N3Raster
edit RipplesInDownN2N3Effect.m
RipplesInDownN2N3Effect
FigRipplesInUpN2N3
%load
clear
load(fullfile(FolderDeltaDataKJ,'RipplesInUpN2N3Raster.mat'))
%saving data
cd(FolderDeltaDataKJ)
save RipplesInUpN2N3Raster.mat -v7.3 ripraster_res t_start t_end binsize_mua minDuration maxDuration
FigRipplesInUpN2N3
edit RipplesInDownN2N3Effect
RipplesInDownN2N3Effect
FigRipplesInUpN2N3
RipplesInUpN2N3Effect
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
FigRipplesInDownN2N3
%params
edges_delay = -400:5:400;
edges_norm  = 0:0.05:1;
%% transitions probability
proba.n2.ripples = [];
proba.n3.ripples = [];
proba.n2.sham = [];
proba.n3.sham = [];
for p=1:length(ripples_res.path)
%N2
proba.n2.ripples = [proba.n2.ripples ripples_res.n2.transit_rate.ripples{p}];
proba.n2.sham = [proba.n2.sham ripples_res.n2.transit_rate.sham{p}];
%N3
proba.n3.ripples = [proba.n3.ripples ripples_res.n3.transit_rate.ripples{p}];
proba.n3.sham = [proba.n3.sham ripples_res.n3.transit_rate.sham{p}];
end
%% distrib
for p=1:length(ripples_res.path)
%ripples
%N2
[n2.d_before.ripples{p}, n2.x_before.ripples{p}] = histcounts(-ripples_res.n2.ripples_bef{p}/10, edges_delay, 'Normalization','probability');
n2.x_before.ripples{p} = n2.x_before.ripples{p}(1:end-1) + diff(n2.x_before.ripples{p});
[n2.d_after.ripples{p}, n2.x_after.ripples{p}] = histcounts(ripples_res.n2.ripples_aft{p}/10, edges_delay, 'Normalization','probability');
n2.x_after.ripples{p} = n2.x_after.ripples{p}(1:end-1) + diff(n2.x_after.ripples{p});
norm_ripples = ripples_res.n2.ripples_bef{p} ./ (ripples_res.n2.ripples_bef{p} + ripples_res.n2.ripples_aft{p});
[n2.d_norm.ripples{p}, n2.x_norm.ripples{p}] = histcounts(norm_ripples, edges_norm, 'Normalization','probability');
n2.x_norm.ripples{p} = n2.x_norm.ripples{p}(1:end-1) + diff(n2.x_norm.ripples{p});
%N3
[n3.d_before.ripples{p}, n3.x_before.ripples{p}] = histcounts(-ripples_res.n3.ripples_bef{p}/10, edges_delay, 'Normalization','probability');
n3.x_before.ripples{p} = n3.x_before.ripples{p}(1:end-1) + diff(n3.x_before.ripples{p});
[n3.d_after.ripples{p}, n3.x_after.ripples{p}] = histcounts(ripples_res.n3.ripples_aft{p}/10, edges_delay, 'Normalization','probability');
n3.x_after.ripples{p} = n3.x_after.ripples{p}(1:end-1) + diff(n3.x_after.ripples{p});
norm_ripples = ripples_res.n3.ripples_bef{p} ./ (ripples_res.n3.ripples_bef{p} + ripples_res.n3.ripples_aft{p});
[n3.d_norm.ripples{p}, n3.x_norm.ripples{p}] = histcounts(norm_ripples, edges_norm, 'Normalization','probability');
n3.x_norm.ripples{p} = n3.x_norm.ripples{p}(1:end-1) + diff(n3.x_norm.ripples{p});
%sham
%N2
[n2.d_before.sham{p}, n2.x_before.sham{p}] = histcounts(-ripples_res.n2.sham_bef{p}/10, edges_delay, 'Normalization','probability');
n2.x_before.sham{p} = n2.x_before.sham{p}(1:end-1) + diff(n2.x_before.sham{p});
[n2.d_after.sham{p}, n2.x_after.sham{p}] = histcounts(ripples_res.n2.sham_aft{p}/10, edges_delay, 'Normalization','probability');
n2.x_after.sham{p} = n2.x_after.sham{p}(1:end-1) + diff(n2.x_after.sham{p});
norm_sham = ripples_res.n2.sham_bef{p} ./ (ripples_res.n2.sham_bef{p} + ripples_res.n2.sham_aft{p});
[n2.d_norm.sham{p}, n2.x_norm.sham{p}] = histcounts(norm_sham, edges_norm, 'Normalization','probability');
n2.x_norm.sham{p} = n2.x_norm.sham{p}(1:end-1) + diff(n2.x_norm.sham{p});
%N3
[n3.d_before.sham{p}, n3.x_before.sham{p}] = histcounts(-ripples_res.n3.sham_bef{p}/10, edges_delay, 'Normalization','probability');
n3.x_before.sham{p} = n3.x_before.sham{p}(1:end-1) + diff(n3.x_before.sham{p});
[n3.d_after.sham{p}, n3.x_after.sham{p}] = histcounts(ripples_res.n3.sham_aft{p}/10, edges_delay, 'Normalization','probability');
n3.x_after.sham{p} = n3.x_after.sham{p}(1:end-1) + diff(n3.x_after.sham{p});
norm_sham = ripples_res.n3.sham_bef{p} ./ (ripples_res.n3.sham_bef{p} + ripples_res.n3.sham_aft{p});
[n3.d_norm.sham{p}, n3.x_norm.sham{p}] = histcounts(norm_sham, edges_norm, 'Normalization','probability');
n3.x_norm.sham{p} = n3.x_norm.sham{p}(1:end-1) + diff(n3.x_norm.sham{p});
end
%% average distributions
%N2
d_before.n2.ripples     = [];
d_after.n2.ripples      = [];
d_norm.n2.ripples       = [];
x_before.n2.ripples     = n2.x_before.ripples{1};
x_after.n2.ripples      = n2.x_after.ripples{1};
x_norm.n2.ripples       = n2.x_norm.ripples{1};
d_before.n2.sham      = [];
d_after.n2.sham       = [];
d_norm.n2.sham        = [];
x_before.n2.sham   = n2.x_before.sham{1};
x_after.n2.sham    = n2.x_after.sham{1};
x_norm.n2.sham     = n2.x_norm.sham{1};
%N3
d_before.n3.ripples     = [];
d_after.n3.ripples      = [];
d_norm.n3.ripples       = [];
x_before.n3.ripples     = n3.x_before.ripples{1};
x_after.n3.ripples      = n3.x_after.ripples{1};
x_norm.n3.ripples       = n3.x_norm.ripples{1};
d_before.n3.sham      = [];
d_after.n3.sham       = [];
d_norm.n3.sham        = [];
x_before.n3.sham   = n3.x_before.sham{1};
x_after.n3.sham    = n3.x_after.sham{1};
x_norm.n3.sham     = n3.x_norm.sham{1};
for p=1:length(ripples_res.path)
%ripples
d_before.n2.ripples     = [d_before.n2.ripples ; n2.d_before.ripples{p}];
d_after.n2.ripples      = [d_after.n2.ripples ; n2.d_after.ripples{p}];
d_norm.n2.ripples       = [d_norm.n2.ripples ; n2.d_norm.ripples{p}];
d_before.n3.ripples     = [d_before.n3.ripples ; n3.d_before.ripples{p}];
d_after.n3.ripples      = [d_after.n3.ripples ; n3.d_after.ripples{p}];
d_norm.n3.ripples       = [d_norm.n3.ripples ; n3.d_norm.ripples{p}];
%sham
d_before.n2.sham      = [d_before.n2.sham ; n2.d_before.sham{p}];
d_after.n2.sham       = [d_after.n2.sham ; n2.d_after.sham{p}];
d_norm.n2.sham        = [d_norm.n2.sham ; n2.d_norm.sham{p}];
d_before.n3.sham      = [d_before.n3.sham ; n3.d_before.sham{p}];
d_after.n3.sham       = [d_after.n3.sham ; n3.d_after.sham{p}];
d_norm.n3.sham        = [d_norm.n3.sham ; n3.d_norm.sham{p}];
end
%mean N2
d_before.n2.ripples     = mean(d_before.n2.ripples,1);
d_after.n2.ripples      = mean(d_after.n2.ripples,1);
d_norm.n2.ripples       = mean(d_norm.n2.ripples,1);
std_norm.n2.ripples     = std(d_norm.n2.ripples,1);
d_before.n2.sham     = mean(d_before.n2.sham,1);
d_after.n2.sham      = mean(d_after.n2.sham,1);
d_norm.n2.sham       = mean(d_norm.n2.sham,1);
std_norm.n2.sham     = std(d_norm.n2.sham,1);
%mean N3
d_before.n3.ripples     = mean(d_before.n3.ripples,1);
d_after.n3.ripples      = mean(d_after.n3.ripples,1);
d_norm.n3.ripples       = mean(d_norm.n3.ripples,1);
std_norm.n3.ripples     = std(d_norm.n3.ripples,1);
d_before.n3.sham     = mean(d_before.n3.sham,1);
d_after.n3.sham      = mean(d_after.n3.sham,1);
d_norm.n3.sham       = mean(d_norm.n3.sham,1);
std_norm.n3.sham     = std(d_norm.n3.sham,1);
%distrib N2
d_before.n2.ripples(x_before.n2.ripples>0)=[];
x_before.n2.ripples(x_before.n2.ripples>0)=[];
d_before.n2.sham(x_before.n2.sham>0)=[];
x_before.n2.sham(x_before.n2.sham>0)=[];
d_after.n2.ripples(x_after.n2.ripples<0)=[];
x_after.n2.ripples(x_after.n2.ripples<0)=[];
d_after.n2.sham(x_after.n2.sham<0)=[];
x_after.n2.sham(x_after.n2.sham<0)=[];
%distrib N3
d_before.n3.ripples(x_before.n3.ripples>0)=[];
x_before.n3.ripples(x_before.n3.ripples>0)=[];
d_before.n3.sham(x_before.n3.sham>0)=[];
x_before.n3.sham(x_before.n3.sham>0)=[];
d_after.n3.ripples(x_after.n3.ripples<0)=[];
x_after.n3.ripples(x_after.n3.ripples<0)=[];
d_after.n3.sham(x_after.n3.sham<0)=[];
x_after.n3.sham(x_after.n3.sham<0)=[];
%-- 19/09/2018 14:09:39 --%
LoadPathMOBs
edit Fig2TonesUpDownDurationTransitions.m
QuantifDelayRipplesStartEndDown
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
Fig5RipplesUpDownDurationTransitions
edit FigRipplesInUpN2N3.m
QuantifDelayRipplesStartEndDown
Fig5RipplesUpDownDurationTransitions
edit Fig5RipplesUpDownDurationTransitions
Fig5RipplesUpDownDurationTransitions
sum(ripples.outside.x_plot)
sum(sham.outside.x_plot)
sum(sham.outside.y_plot)
sum(ripples.outside.y_plot)
Fig5RipplesUpDownDurationTransitions
sum(ripples.outside.y_plot)
sum(sham.outside.y_plot)
close all
Fig5RipplesUpDownDurationTransitions
Fig2TonesUpDownDurationTransitions
Fig5RipplesUpDownDurationTransitions
clear
load(fullfile(FolderDeltaDataKJ,'ProbabilityRipplesUpDownTransition.mat')) %probability of transitions after ripples/sham
load(fullfile(FolderDeltaDataKJ,'QuantifDelayRipplesStartEndDown.mat')) %transition after ripples/sham
Fig5RipplesUpDownDurationTransitions
Fig2TonesUpDownDurationTransitions
ProbabilityRipplesUpDownTransition
ProbabilityShamUpDownTransition
Fig2TonesUpDownDurationTransitions
Fig5RipplesUpDownDurationTransitions
RipplesInUpN2N3Effect
TonesInUpN2N3Effect
RipplesInDownN2N3Effect
FigTonesInDownN2N3
FigTonesInUpN2N3
edit FigTonesInDownN2N3
FigTonesInDownN2N3
FigRipplesInDownN2N3
FigRipplesInUpN2N3
FigRipplesInDownN2N3
FigRipplesInUpN2N3
TonesInUpN2N3Effect
RipplesInUpN2N3Effect
FigTonesInUpN2N3
FigTonesInDownN2N3
FigRipplesInUpN2N3
FigRipplesInDownN2N3
FigRipplesInUpN2N3
FigRipplesInDownN2N3
FigRipplesInUpN2N3
clc
clear
edit ParcoursRipplesNeuronCrossCorrPlot.m
edit NeuronsResponseToRipples_KJ.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
BootstrapEndoInduSpikeMetrics
ClassifyNeuronsResponseToRipples
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse244/SpikesToAnalyse/PFCx_Neurons.mat', 'number')
edit ParcoursToneNeuronCrossCorr.m
edit ParcoursDownNeuronCrossCorr.m
%-- 19/09/2018 16:58:46 --%
LoadPathMOBs
%% Response to all ripples
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
NeuronsPath = [];
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
NeuronsPath = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatRipples{p}];
NeuronsPath = [NeuronsPath ; p*one(size(rippeth_res.MatRipples{p},1),1)];
end
t_corr = rippeth_res.t_corr{1};
%% All
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
NeuronsPath = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatRipples{p}];
NeuronsPath = [NeuronsPath ; p*ones(size(rippeth_res.MatRipples{p},1),1)];
end
t_corr = rippeth_res.t_corr{1};
%% All
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
NeuronsPath = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatRipples{p}];
NeuronsPath = [NeuronsPath ; p*ones(size(rippeth_res.MatRipples{p},1),1)];
end
t_corr = rippeth_res.t_corr{1};
%% All
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Classify
neuronClass{1} = id2xall(idmax<=-130);
neuronClass{2} = id2xall(idmax>-130 & idmax<=0);
neuronClass{3} = id2xall(idmax>-0 & idmax<=70);
neuronClass{4} = id2xall(idmax>70);
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
NeuronsPath = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatRipples{p}];
NeuronsPath = [NeuronsPath ; p*ones(size(rippeth_res.MatRipples{p},1),1)];
end
t_corr = rippeth_res.t_corr{1};
%% All
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Classify
neuronPeaks = t_coor(t_corr);
neuronClass{1} = id2xall(neuronPeaks<=-130);
neuronClass{2} = id2xall(neuronPeaks>-130 & neuronPeaks<=0);
neuronClass{3} = id2xall(neuronPeaks>-0 & neuronPeaks<=70);
neuronClass{4} = id2xall(neuronPeaks>70);
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
NeuronsPath = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatRipples{p}];
NeuronsPath = [NeuronsPath ; p*ones(size(rippeth_res.MatRipples{p},1),1)];
end
t_corr = rippeth_res.t_corr{1};
%% All
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Classify
neuronPeaks = t_corr(idmax);
neuronClass{1} = id2xall(neuronPeaks<=-130);
neuronClass{2} = id2xall(neuronPeaks>-130 & neuronPeaks<=0);
neuronClass{3} = id2xall(neuronPeaks>-0 & neuronPeaks<=70);
neuronClass{4} = id2xall(neuronPeaks>70);
ClassifyNeuronsResponseToRipples
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
NeuronsPath = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatRipples{p}];
NeuronsPath = [NeuronsPath ; p*ones(size(rippeth_res.MatRipples{p},1),1)];
end
t_corr = rippeth_res.t_corr{1};
%% All
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[idmax,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Classify
neuronPeaks = t_corr(idmax);
neuronClass{1} = id2xall(neuronPeaks<=-130);
neuronClass{2} = id2xall(neuronPeaks>-130 & neuronPeaks<=0);
neuronClass{3} = id2xall(neuronPeaks>-0 & neuronPeaks<=70);
neuronClass{4} = id2xall(neuronPeaks>70);
for i=1:lengthneuronClass
NeuronsPath(neuronClass{1},2) = i;
end
for i=1:length(neuronClass)
NeuronsPath(neuronClass{1},2) = i;
end
for i=1:length(neuronClass)
NeuronsPath(neuronClass{i},2) = i;
end
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
NeuronsPath = [];
for p=1:length(rippeth_res.path)
AllPeth = [AllPeth ; rippeth_res.MatRipples{p}];
NeuronsPath = [NeuronsPath ; p*ones(size(rippeth_res.MatRipples{p},1),1)];
end
t_corr = rippeth_res.t_corr{1};
%% All
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[idmax,id2xall] = sort(idmax);
Opeth_all = Zpeth(id2xall,:);
%% Classify
neuronPeaks = t_corr(idmax);
neuronClass{1} = id2xall(neuronPeaks<=-130);
neuronClass{2} = id2xall(neuronPeaks>-130 & neuronPeaks<=0);
neuronClass{3} = id2xall(neuronPeaks>-0 & neuronPeaks<=70);
neuronClass{4} = id2xall(neuronPeaks>70);
for i=1:length(neuronClass)
NeuronsPath(neuronClass{i},2) = i;
end
%save
for p=1:length(rippeth_res.path)
rippeth_res.neuronClass{p} = NeuronsPath(NeuronsPath(:,1)==p,2);
end
ClassifyNeuronsResponseToRipples
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
edit AssessToneEffectMUAtype.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
clear
Dir = PathForExperimentsSleepRipplesSpikes('all');
Dir = CheckPathForExperiment_KJ(Dir);
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p ccneur_res rippeth_res
ccneur_res.path{p}   = Dir.path{p};
ccneur_res.manipe{p} = Dir.manipe{p};
ccneur_res.name{p}   = Dir.name{p};
ccneur_res.date{p}   = Dir.date{p};
%params
binsize_cc = 5;
nbins_cc = 200;
%% load
% Substages
try
load('SleepSubstages.mat', 'Epoch')
N1 = Epoch{1}; N2 = Epoch{2}; N3 = Epoch{3}; REM = Epoch{4}; Wake = Epoch{5}; NREM = Epoch{7};
catch
clear op NamesOp Dpfc Epoch noise
load NREMepochsML.mat op NamesOp Dpfc Epoch noise
disp('Loading epochs from NREMepochsML.m')
[Substages,NamesSubstages]=DefineSubStages(op,noise);
N1 = Substages{1}; N2 = Substages{2}; N3 = Substages{3}; REM = Substages{4}; Wake = Substages{5}; NREM = Substages{7};
end
N2N3 = or(N2,N3);
%% MUA
%MUA
MUA.all  = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua);
MUA.preresp = GetMuaNeurons_KJ(find(rippeth_res.neuronClass{p}==2), 'binsize',binsize_mua);
MUA.excited = GetMuaNeurons_KJ(find(rippeth_res.neuronClass{p}==3), 'binsize',binsize_mua);
%Down
down_PFCx = FindDownKJ(MUA.all, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p ccneur_res rippeth_res
ccneur_res.path{p}   = Dir.path{p};
ccneur_res.manipe{p} = Dir.manipe{p};
ccneur_res.name{p}   = Dir.name{p};
ccneur_res.date{p}   = Dir.date{p};
%params
binsize_cc = 5;
nbins_cc = 200;
binsize_mua = 2;
%% load
% Substages
try
load('SleepSubstages.mat', 'Epoch')
N1 = Epoch{1}; N2 = Epoch{2}; N3 = Epoch{3}; REM = Epoch{4}; Wake = Epoch{5}; NREM = Epoch{7};
catch
clear op NamesOp Dpfc Epoch noise
load NREMepochsML.mat op NamesOp Dpfc Epoch noise
disp('Loading epochs from NREMepochsML.m')
[Substages,NamesSubstages]=DefineSubStages(op,noise);
N1 = Substages{1}; N2 = Substages{2}; N3 = Substages{3}; REM = Substages{4}; Wake = Substages{5}; NREM = Substages{7};
end
N2N3 = or(N2,N3);
%% MUA
%MUA
MUA.all  = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua);
MUA.preresp = GetMuaNeurons_KJ(find(rippeth_res.neuronClass{p}==2), 'binsize',binsize_mua);
MUA.excited = GetMuaNeurons_KJ(find(rippeth_res.neuronClass{p}==3), 'binsize',binsize_mua);
%Down
down_PFCx = FindDownKJ(MUA.all, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
minDuration = 40;
%Down
down_PFCx = FindDownKJ(MUA.all, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p ccneur_res rippeth_res
ccneur_res.path{p}   = Dir.path{p};
ccneur_res.manipe{p} = Dir.manipe{p};
ccneur_res.name{p}   = Dir.name{p};
ccneur_res.date{p}   = Dir.date{p};
%params
binsize_cc = 5;
nbins_cc = 200;
binsize_mua = 2;
minDuration = 40;
%% load
% Substages
try
load('SleepSubstages.mat', 'Epoch')
N1 = Epoch{1}; N2 = Epoch{2}; N3 = Epoch{3}; REM = Epoch{4}; Wake = Epoch{5}; NREM = Epoch{7};
catch
clear op NamesOp Dpfc Epoch noise
load NREMepochsML.mat op NamesOp Dpfc Epoch noise
disp('Loading epochs from NREMepochsML.m')
[Substages,NamesSubstages]=DefineSubStages(op,noise);
N1 = Substages{1}; N2 = Substages{2}; N3 = Substages{3}; REM = Substages{4}; Wake = Substages{5}; NREM = Substages{7};
end
N2N3 = or(N2,N3);
%% MUA
%MUA
MUA.all  = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua);
MUA.preresp = GetMuaNeurons_KJ(find(rippeth_res.neuronClass{p}==2), 'binsize',binsize_mua);
MUA.excited = GetMuaNeurons_KJ(find(rippeth_res.neuronClass{p}==3), 'binsize',binsize_mua);
%Down
down_PFCx = FindDownKJ(MUA.all, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
st_up = Start(up_PFCx);
end_up = End(up_PFCx);
edit PoolNeurons
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p ccneur_res rippeth_res
ccneur_res.path{p}   = Dir.path{p};
ccneur_res.manipe{p} = Dir.manipe{p};
ccneur_res.name{p}   = Dir.name{p};
ccneur_res.date{p}   = Dir.date{p};
%params
binsize_cc = 5;
nbins_cc = 200;
binsize_mua = 2;
minDuration = 40;
%% load
% Substages
try
load('SleepSubstages.mat', 'Epoch')
N1 = Epoch{1}; N2 = Epoch{2}; N3 = Epoch{3}; REM = Epoch{4}; Wake = Epoch{5}; NREM = Epoch{7};
catch
clear op NamesOp Dpfc Epoch noise
load NREMepochsML.mat op NamesOp Dpfc Epoch noise
disp('Loading epochs from NREMepochsML.m')
[Substages,NamesSubstages]=DefineSubStages(op,noise);
N1 = Substages{1}; N2 = Substages{2}; N3 = Substages{3}; REM = Substages{4}; Wake = Substages{5}; NREM = Substages{7};
end
N2N3 = or(N2,N3);
%% Spikes
%MUA
MUA  = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua);
%Down
down_PFCx = FindDownKJ(MUA, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Spikes of PFCx
load('SpikeData.mat', 'S')
load('SpikesToAnalyse/PFCx_Neurons.mat', 'number')
NumNeurons = number;
S = S(NumNeurons);
%class
for i=1:4
Sc{i} = PoolNeurons(S,find(rippeth_res.neuronClass{p}==i));
end
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p ccneur_res rippeth_res
ccneur_res.path{p}   = Dir.path{p};
ccneur_res.manipe{p} = Dir.manipe{p};
ccneur_res.name{p}   = Dir.name{p};
ccneur_res.date{p}   = Dir.date{p};
%params
binsize_cc = 5;
nbins_cc = 200;
binsize_mua = 2;
minDuration = 40;
%% load
% Substages
try
load('SleepSubstages.mat', 'Epoch')
Substages = Epoch;
catch
clear op NamesOp Dpfc Epoch noise
load NREMepochsML.mat op NamesOp Dpfc Epoch noise
disp('Loading epochs from NREMepochsML.m')
[Substages,NamesSubstages]=DefineSubStages(op,noise);
end
N1 = Substages{1}; N2 = Substages{2}; N3 = Substages{3}; REM = Substages{4}; Wake = Substages{5}; NREM = Substages{7};
N2N3 = or(N2,N3);
%% Spikes
%MUA
MUA  = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua);
%Down
down_PFCx = FindDownKJ(MUA, 'low_thresh', 0.5, 'minDuration', minDuration,'maxDuration', 600, 'mergeGap', 10, 'predown_size', 30, 'method', 'mono');
st_down   = Start(down_PFCx);
end_down  = End(down_PFCx);
%Spikes of PFCx
load('SpikeData.mat', 'S')
load('SpikesToAnalyse/PFCx_Neurons.mat', 'number')
NumNeurons = number;
S = S(NumNeurons);
%class
for i=1:4
Sc{i} = PoolNeurons(S, find(rippeth_res.neuronClass{p}==i));
end
%%  Correlogram
%whole night
[ccneur_res.nightCc, B] = CrossCorr(Range(Sc{2}), Range(Sc{3}), binsize_cc,nbins_cc);
%Restrict to substages
for s=1:5
[ccneur_res.substagesCc{2}, B] = CrossCorr(Range(Restrict(Sc{2}, Substages{s})), Range(Sc{3}), binsize_cc,nbins_cc);
end
CrossCorrNeuronsRipplesResponse_KJ
SleepEpoch = or(N2N3, or(N1,REM));
CrossCorrNeuronsRipplesResponse_KJ
%infos neurons
ccneur_res.fr_all{p}  = mean(Data(Restrict(MUA,SleepEpoch))) / (binsize_mua/1000);
ccneur_res.nb_all{p}  = length(NumNeurons);
for i=1:4
ccneur_res.fr_neurons{p,i}  = length(Restrict(Sc{i},SleepEpoch)) / (tot_length(SleepEpoch)/1E4);
ccneur_res.nb_neurons{p,i}  = sum(rippeth_res.neuronClass{p}==i);
end
%%  Correlogram
%whole night
[ccneur_res.nightCc, B] = CrossCorr(Range(Sc{2}), Range(Sc{3}), binsize_cc,nbins_cc);
%Restrict to substages
for s=1:5
[ccneur_res.substagesCc{p,s}, B] = CrossCorr(Range(Restrict(Sc{2}, Substages{s})), Range(Sc{3}), binsize_cc,nbins_cc);
end
%pre_down
intvPreDown = intervalSet(st_down-intvDur, st_down);
[ccneur_res.predown{p}, B] = CrossCorr(Range(Restrict(Sc{2}, intvPreDown)), Range(Sc{3}), binsize_cc,nbins_cc);
%post-down
intvPostDown = intervalSet(end_down, end_down+intvDur);
[ccneur_res.predown{p}, B] = CrossCorr(Range(Restrict(Sc{2}, intvPostDown)), Range(Sc{3}), binsize_cc,nbins_cc);
ccneur_res.t_corr{p} = B;
CrossCorrNeuronsRipplesResponse_KJ
edit CleanUpEpoch.m
%pre_down
intvPreDown = CleanUpEpoch(intervalSet(st_down-intvDur, st_down), 1);
[ccneur_res.predown{p}, B] = CrossCorr(Range(Restrict(Sc{2}, intvPreDown)), Range(Sc{3}), binsize_cc,nbins_cc);
%post-down
intvPostDown = CleanUpEpoch(intervalSet(end_down, end_down+intvDur), 1);
[ccneur_res.predown{p}, B] = CrossCorr(Range(Restrict(Sc{2}, intvPostDown)), Range(Sc{3}), binsize_cc,nbins_cc);
ccneur_res.t_corr{p} = B;
CrossCorrNeuronsRipplesResponse_KJ
clc
CrossCorrNeuronsRipplesResponse_KJ
clc
edit NeuronsResponseToDown_KJ.m
NeuronsResponseToDown_KJ
edit LFPlayerInfluenceOnDetection.m
NeuronsResponseToDown_KJ
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
NeuronsResponseToRipples_KJ
NeuronsResponseToTones_KJ
NeuronsResponseToDown_KJ
Fig5RipplesUpDownDurationTransitions
edit Fig2TonesUpDownDurationTransitions.m
Fig2TonesUpDownDurationTransitions
edit Fig5RipplesUpDownDurationTransitions.m
Fig5RipplesUpDownDurationTransitions
Fig2TonesUpDownDurationTransitions
ProbabilityTonesUpDownTransition
edit FigRipplesInUpN2N3
FigRipplesInUpN2N3
FigDownInUpN2N3
FigRipplesInDownN2N3
Fig2TonesUpDownDurationTransitions
edit FigRipplesInUpN2N3
FigRipplesInUpN2N3
NeuronsResponseToDown_KJ
ParcoursRipplesNoDownNeuronCrossCorr
NeuronsResponseToRipples2_KJ
edit NeuronsResponseToRipples2_KJ
figure, hold on
for i=1:4
subplot(2,3,i), hold on
h(1) = plot(t_corr,runmean(mean(Opeth_all{1}(idx{i},:)),2),'color', 'g');
h(2) = plot(t_corr,runmean(mean(Opeth_all{2}(idx{i},:)),2),'color', 'b');
h(3) = plot(t_corr,runmean(mean(Opeth_all{3}(idx{i},:)),2),'color', 'r');
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
if i==1
legend(h,'N1','N2','N3'),
end
title(['perc ' num2str(i)])
end
subplot(2,3,5), hold on
h(1) = plot(t_corr,runmean(mean(Opeth_all{2}),2),'color', 'b');
h(2) = plot(t_corr,runmean(mean(Opeth_all{3}),2),'color', 'r');
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('all neurons')
NeuronsResponseToRipples2_KJ
%% Plot
figure, hold on
for i=1:4
subplot(2,3,i), hold on
h(1) = plot(t_corr,runmean(mean(Opeth_all{1}(idx{i},:)),2),'color', 'g');
h(2) = plot(t_corr,runmean(mean(Opeth_all{2}(idx{i},:)),2),'color', 'b');
h(3) = plot(t_corr,runmean(mean(Opeth_all{3}(idx{i},:)),2),'color', 'r');
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
if i==1
legend(h,'N1','N2','N3'),
end
title(['perc ' num2str(i)])
end
subplot(2,3,5), hold on
h(1) = plot(t_corr,runmean(mean(Opeth_all{1}),2),'color', 'g');
h(2) = plot(t_corr,runmean(mean(Opeth_all{2}),2),'color', 'b');
h(2) = plot(t_corr,runmean(mean(Opeth_all{3}),2),'color', 'r');
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('all neurons')
NeuronsResponseToRipples2_KJ
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/Correlogram/
NeuronsResponseToRipples2_KJ
sqrt(size(Opeth_all{s},1))
NeuronsResponseToRipples2_KJ
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
ParcoursUpRipplesDescriptionPlot
NeuronsResponseToDown_KJ
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
NeuronsResponseToDown_KJ2
t_corr>=-40&t_corr<=-20
m_before = mean(Zpeth(:,t_corr>=-40&t_corr<=-20),2);
NeuronsResponseToDown_KJ2
ParcoursDownNormalizedSpikeActivity
Sd = Restrict(S{i}, down_PFCx);
Sd = Range(Restrict(S{i}, down_PFCx));
edit TonesInUpN2N3Effect.m
edit RipplesInUpN2N3Effect.m
ParcoursDownNormalizedSpikeActivity
edit TonesInUpN2N3Effect.m
ParcoursDownNormalizedSpikeActivity
N2N3 = or(N2,N3); NREM = or(N1,N2N3);
%-- 20/09/2018 15:24:49 --%
LoadPathMOBs
edit ParcoursGenerateIdSleepRecord.m
edit PlotIDSleepData.m
ParcoursDownNormalizedSpikeActivity
edit CreateSleepSignals.m
FigRipplesInUpN2N3
RipplesInUpN2N3Effect
%-- 20/09/2018 16:35:33 --%
LoadPathMOBs
RipplesInUpN2N3Raster
clear
clc
edit PlotIDSleepData.m
edit MakeIDSleepData.m
DownstatesPermutationsPlot
edit DownstatesPermutationsPlot
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MethodPaper/
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MethodPaper/MidThesis2/
LoadPathMOBs
ParcoursDownDurationDistribThreshold
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MethodPaper/MidThesis2/
ParcoursDownDurationDistribThresholdPlot
ParcoursDownDurationDistribThreshold
%load
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursDownDurationDistribThreshold.mat'))
ParcoursDownDurationDistribThresholdPlot
animals = unique(down_res.name);
ParcoursDownDurationDistribThresholdPlot
close all
ParcoursDownDurationDistribThresholdPlot
%PLOT
figure, hold on
for m=1:length(animals)
subplot(2,3,m), hold on
for p=1:length(down_res.path)
if strcmpi(down_res.name{p},animals{m})
y_sws = down_res.nbDown.sws{p};
y_wake = down_res.nbDown.wake{p};
plot(down_res.duration_bins{p}, y_sws./y_wake, 'k'), hold on
set(gca,'xscale','log'), hold on
set(gca,'ylim',[1 1E6],'xlim',[10 1500]), hold on
set(gca,'xtick',[10 50 100 200 500 1500]), hold on
xlabel('down duration (ms)'), ylabel('number of down')
end
end
line([75 75], get(gca,'ylim'), 'color', 'k', 'linewidth', 2),
title(animals{m}),
end
ParcoursDownDurationDistribThresholdPlot
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/MethodPart/
edit LFPlayerInfluenceOnDetection.m
LFPlayerInfluenceOnDetection
LFPlayerInfluenceFigures
LFPlayerInfluenceOnDetection
LFPlayerInfluenceOnDetectionMouse
edit FigureISIDeltaToneNREM.m
FigureISIDeltaToneNREM
edit FigureISITrig490_2
FigureISITrig490_2
squeeze(cell2mat(deltas.isi.median(d_basal,sub,:,i,1,1)));
FigureISITrig490_2
edit FigureISITrig490
FigureISITrig490
edit FigureISIDeltaCurvePlot.m
FigureISIDeltaCurvePlot(6, 6, 'show_sig','none','paired',0);
FigureISIDeltaCurvePlot
FigureISIDeltaCurvePlot(6, 6, 'show_sig','none','paired',0);
FigureISIDeltaCurvePlot
FigureISIDeltaCurvePlot(6, 6, 'show_sig','none','paired',0);
FigureISIDeltaCurvePlot(6, 2, 'show_sig','none','paired',0);
FigureISIDeltaCurvePlot(6, 3, 'show_sig','none','paired',0);
clear
load(fullfile(FolderDeltaDataKJ,'AnalysesISIDeltaToneSubstage.mat'))
FigureISIDeltaCurvePlot(6, 3, 'show_sig','none','paired',0);
conditions{cond_fig}
dbquit
FigureISIDeltaCurvePlot(6, 3, 'show_sig','none','paired',0);
for i=1:6
FigureISIDeltaCurvePlot(6, 3, 'show_sig','none','paired',0);
end
for i=1:6
FigureISIDeltaCurvePlot(6, i, 'show_sig','none','paired',0);
end
FigureISIDeltaCurvePlot(6, 1, 'show_sig','none','paired',0);
FigureISIDeltaCurvePlot(6, 2, 'show_sig','none','paired',0);
for i=2:6
FigureISIDeltaCurvePlot(6, i, 'show_sig','none','paired',0);
end
%-- 20/09/2018 22:05:48 --%
LoadPathMOBs
edit DownstatesPermutationsPlot
DownstatesPermutationsPlot
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/MethodPart/
edit NeuronsResponseToDown_KJ.m
NeuronsResponseToDown_KJ
figure, hold on
subtightplot(2,3,[1 4], gap), hold on
imagesc(t_corr, 1:size(Ops_all,1), Ops_all);
xlim([-500 500]), ylim([1 size(Ops_all,1)])
line([0 0], get(gca,'ylim'), 'linewidth',2),
% caxis([-3.3 9.4]),
title('Neurons on start down')
subtightplot(2,3,[2 5], gap), hold on
imagesc(t_corr, 1:size(Ope_all,1), Ope_all);
xlim([-500 500]), ylim([1 size(Ope_all,1)])
line([0 0], get(gca,'ylim'), 'linewidth',2),
% caxis([-3.3 9.4]),
title('Neurons on end down')
%-- 24/09/2018 13:25:08 --%
LoadPathMOBs
edit ParcoursUpRipplesDescription
ParcoursUpRipplesDescriptionPlot
%% PLOT
figure, hold on
fontsize = 16;
labels = {'whole record', 'N2', 'N3'};
for ep=1:length(epoch)
%Down durations
subplot(2,3,ep), hold on
h(1) = plot(x_dur.(epoch{ep}).down.ripples, y_dur.(epoch{ep}).down.ripples, 'color', 'b', 'LineWidth',2); hold on,
h(2) = plot(x_dur.(epoch{ep}).down.all, y_dur.(epoch{ep}).down.all, 'color', 'k', 'LineWidth',2); hold on,
%     xlabel('duration (ms)'),
if ep==1
ylabel('probability'),
end
set(gca,'XTick',0:100:max_edge_down,'XLim',[0 max_edge_down], 'ytick',0:0.01:0.03, 'ylim', [0 0.03], 'FontName','Times','Fontsize',fontsize), hold on,
if ep==1
legend(h,'with ripples','all');
end
title(['Down in ' labels{ep}])
%Up durations
subplot(2,3,ep+3), hold on
h(1) = plot(x_dur.(epoch{ep}).up.ripples, y_dur.(epoch{ep}).up.ripples, 'color', 'b', 'LineWidth',2); hold on,
h(2) = plot(x_dur.(epoch{ep}).up.all, y_dur.(epoch{ep}).up.all, 'color', 'k', 'LineWidth',2); hold on,
xlabel('duration (ms)'), ylabel('probability')
set(gca,'XTick',0:500:max_edge_up,'XLim',[0 max_edge_up], 'ylim', [0 6e-3], 'FontName','Times','Fontsize',fontsize), hold on,
title(['Up in ' labels{ep}])
end
ParcoursUpRipplesDescriptionPlot
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
edit FigRipplesInUpN2N3
FigRipplesInUpN2N3
%% PLOT
figure, hold on
sz=25;
gap = [0.08 0.04];
smoothing = 1;
%color map style
co=jet;
co(1,:)=[0 0 0]; %silences (M=0) are in black
colormap(co);
%%%%%%%%%%
%N2
%%%%%%%%%%
%TONES - raster plot
subtightplot(4,4,1,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n2.ripples,1), MatMUA.n2.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([0.04 0.04], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n2.ripples,1)], 'XLim',[-0.4 0.4]);
xlabel('time relative to ripples (s)'), ylabel('#ripples'),
title('Ripples inside up states - N2')
%SHAM - raster plot
subtightplot(4,4,5,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n2.sham,1), MatMUA.n2.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([4040], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n2.sham,1)], 'XLim',[-400 400]);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside up states - N2')
% MUA
clear h
subtightplot(4,4,[2 6],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.n2, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.n2, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-400 400]);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/random - N2'),
%Transition probability
subtightplot(4,4,3,gap), hold on
PlotErrorBarN_KJ({proba.n2.ripples proba.n2.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',0, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'}),
title('probability of transition Up>Down'),
%Distrib of start and end of Up states
clear h
subtightplot(4,4,7,gap), hold on
h(1) = plot(x_before.n2.ripples, Smooth(d_before.n2.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.n2.ripples, Smooth(d_after.n2.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.n2.sham, Smooth(d_before.n2.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.n2.sham, Smooth(d_after.n2.sham, 0), 'color', 'r', 'linewidth',2);
ylim([0 0.06]),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of up - N2'),
%Distrib occurence norm
clear h
subtightplot(4,4,[4 8],gap), hold on
h(1) = plot(x_norm.n2.ripples, Smooth(d_norm.n2.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.n2.sham, Smooth(d_norm.n2.sham, smoothing), 'color', 'r', 'linewidth',2);
xlabel('normalized time'), ylabel('probability'), yticks(0:0.02:0.08),
lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title('Occurence of ripples/random in Up state (normalized) - N2'),
%%%%%%%%%%
%N3
%%%%%%%%%%
%TONES - raster plot
subtightplot(4,4,9,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n3.ripples,1), MatMUA.n3.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n3.ripples,1)], 'XLim',[-400 400]);
xlabel('time relative to ripples (ms)'), ylabel('#ripples'),
title('Ripples inside up states - N3')
%SHAM - raster plot
subtightplot(4,4,13,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n3.sham,1), MatMUA.n3.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n3.sham,1)], 'XLim',[-400 400]);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside up states - N3')
% MUA
clear h
subtightplot(4,4,[10 14],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.n3, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.n3, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-0.4 0.4]);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([0.04 0.04], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/sham - N3'),
%Transition probability
subtightplot(4,4,11,gap), hold on
PlotErrorBarN_KJ({proba.n3.ripples proba.n3.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',0, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'}),
title('probability of transition Up>Down'),
%Distrib of start and end of Up states
clear h
subtightplot(4,4,15,gap), hold on
h(1) = plot(x_before.n3.ripples, Smooth(d_before.n3.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.n3.ripples, Smooth(d_after.n3.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.n3.sham, Smooth(d_before.n3.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.n3.sham, Smooth(d_after.n3.sham, 0), 'color', 'r', 'linewidth',2);
ylim([0 0.06]),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of up - N3'),
%Distrib occurence norm
clear h
subtightplot(4,4,[12 16],gap), hold on
h(1) = plot(x_norm.n3.ripples, Smooth(d_norm.n3.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.n3.sham, Smooth(d_norm.n3.sham, smoothing), 'color', 'r', 'linewidth',2);
xlabel('normalized time'), ylabel('probability'), yticks(0:0.02:0.08),
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title('Occurence of ripples/random in Up state (normalized) - N3'),
%% PLOT
figure, hold on
sz=25;
gap = [0.08 0.04];
smoothing = 1;
%color map style
co=jet;
co(1,:)=[0 0 0]; %silences (M=0) are in black
colormap(co);
%%%%%%%%%%
%N2
%%%%%%%%%%
%TONES - raster plot
subtightplot(4,4,1,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n2.ripples,1), MatMUA.n2.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n2.ripples,1)], 'XLim',[-400 400);
xlabel('time relative to ripples (s)'), ylabel('#ripples'),
title('Ripples inside up states - N2')
%SHAM - raster plot
subtightplot(4,4,5,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n2.sham,1), MatMUA.n2.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n2.sham,1)], 'XLim',[-400 400]);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside up states - N2')
% MUA
clear h
subtightplot(4,4,[2 6],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.n2, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.n2, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-400 400]);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/random - N2'),
%Transition probability
subtightplot(4,4,3,gap), hold on
PlotErrorBarN_KJ({proba.n2.ripples proba.n2.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',0, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'}),
title('probability of transition Up>Down'),
%Distrib of start and end of Up states
clear h
subtightplot(4,4,7,gap), hold on
h(1) = plot(x_before.n2.ripples, Smooth(d_before.n2.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.n2.ripples, Smooth(d_after.n2.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.n2.sham, Smooth(d_before.n2.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.n2.sham, Smooth(d_after.n2.sham, 0), 'color', 'r', 'linewidth',2);
ylim([0 0.06]),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of up - N2'),
%Distrib occurence norm
clear h
subtightplot(4,4,[4 8],gap), hold on
h(1) = plot(x_norm.n2.ripples, Smooth(d_norm.n2.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.n2.sham, Smooth(d_norm.n2.sham, smoothing), 'color', 'r', 'linewidth',2);
xlabel('normalized time'), ylabel('probability'), yticks(0:0.02:0.08),
lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title('Occurence of ripples/random in Up state (normalized) - N2'),
%%%%%%%%%%
%N3
%%%%%%%%%%
%TONES - raster plot
subtightplot(4,4,9,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n3.ripples,1), MatMUA.n3.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n3.ripples,1)], 'XLim',[-400 400]);
xlabel('time relative to ripples (ms)'), ylabel('#ripples'),
title('Ripples inside up states - N3')
%SHAM - raster plot
subtightplot(4,4,13,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n3.sham,1), MatMUA.n3.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n3.sham,1)], 'XLim',[-400 400]);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside up states - N3')
% MUA
clear h
subtightplot(4,4,[10 14],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.n3, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.n3, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-0.4 0.4]);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([0.04 0.04], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/sham - N3'),
%Transition probability
subtightplot(4,4,11,gap), hold on
PlotErrorBarN_KJ({proba.n3.ripples proba.n3.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',0, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'}),
title('probability of transition Up>Down'),
%Distrib of start and end of Up states
clear h
subtightplot(4,4,15,gap), hold on
h(1) = plot(x_before.n3.ripples, Smooth(d_before.n3.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.n3.ripples, Smooth(d_after.n3.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.n3.sham, Smooth(d_before.n3.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.n3.sham, Smooth(d_after.n3.sham, 0), 'color', 'r', 'linewidth',2);
ylim([0 0.06]),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of up - N3'),
%Distrib occurence norm
clear h
subtightplot(4,4,[12 16],gap), hold on
h(1) = plot(x_norm.n3.ripples, Smooth(d_norm.n3.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.n3.sham, Smooth(d_norm.n3.sham, smoothing), 'color', 'r', 'linewidth',2);
xlabel('normalized time'), ylabel('probability'), yticks(0:0.02:0.08),
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title('Occurence of ripples/random in Up state (normalized) - N3'),
%% PLOT
figure, hold on
sz=25;
gap = [0.08 0.04];
smoothing = 1;
%color map style
co=jet;
co(1,:)=[0 0 0]; %silences (M=0) are in black
colormap(co);
%%%%%%%%%%
%N2
%%%%%%%%%%
%TONES - raster plot
subtightplot(4,4,1,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n2.ripples,1), MatMUA.n2.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n2.ripples,1)], 'XLim',[-400 400]);
xlabel('time relative to ripples (s)'), ylabel('#ripples'),
title('Ripples inside up states - N2')
%SHAM - raster plot
subtightplot(4,4,5,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n2.sham,1), MatMUA.n2.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n2.sham,1)], 'XLim',[-400 400]);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside up states - N2')
% MUA
clear h
subtightplot(4,4,[2 6],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.n2, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.n2, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-400 400]);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/random - N2'),
%Transition probability
subtightplot(4,4,3,gap), hold on
PlotErrorBarN_KJ({proba.n2.ripples proba.n2.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',0, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'}),
title('probability of transition Up>Down'),
%Distrib of start and end of Up states
clear h
subtightplot(4,4,7,gap), hold on
h(1) = plot(x_before.n2.ripples, Smooth(d_before.n2.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.n2.ripples, Smooth(d_after.n2.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.n2.sham, Smooth(d_before.n2.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.n2.sham, Smooth(d_after.n2.sham, 0), 'color', 'r', 'linewidth',2);
ylim([0 0.06]),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of up - N2'),
%Distrib occurence norm
clear h
subtightplot(4,4,[4 8],gap), hold on
h(1) = plot(x_norm.n2.ripples, Smooth(d_norm.n2.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.n2.sham, Smooth(d_norm.n2.sham, smoothing), 'color', 'r', 'linewidth',2);
xlabel('normalized time'), ylabel('probability'), yticks(0:0.02:0.08),
lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title('Occurence of ripples/random in Up state (normalized) - N2'),
%%%%%%%%%%
%N3
%%%%%%%%%%
%TONES - raster plot
subtightplot(4,4,9,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n3.ripples,1), MatMUA.n3.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n3.ripples,1)], 'XLim',[-400 400]);
xlabel('time relative to ripples (ms)'), ylabel('#ripples'),
title('Ripples inside up states - N3')
%SHAM - raster plot
subtightplot(4,4,13,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n3.sham,1), MatMUA.n3.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n3.sham,1)], 'XLim',[-400 400]);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside up states - N3')
% MUA
clear h
subtightplot(4,4,[10 14],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.n3, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.n3, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-0.4 0.4]);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([0.04 0.04], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/sham - N3'),
%Transition probability
subtightplot(4,4,11,gap), hold on
PlotErrorBarN_KJ({proba.n3.ripples proba.n3.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',0, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'}),
title('probability of transition Up>Down'),
%Distrib of start and end of Up states
clear h
subtightplot(4,4,15,gap), hold on
h(1) = plot(x_before.n3.ripples, Smooth(d_before.n3.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.n3.ripples, Smooth(d_after.n3.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.n3.sham, Smooth(d_before.n3.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.n3.sham, Smooth(d_after.n3.sham, 0), 'color', 'r', 'linewidth',2);
ylim([0 0.06]),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of up - N3'),
%Distrib occurence norm
clear h
subtightplot(4,4,[12 16],gap), hold on
h(1) = plot(x_norm.n3.ripples, Smooth(d_norm.n3.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.n3.sham, Smooth(d_norm.n3.sham, smoothing), 'color', 'r', 'linewidth',2);
xlabel('normalized time'), ylabel('probability'), yticks(0:0.02:0.08),
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title('Occurence of ripples/random in Up state (normalized) - N3'),
set(gca,'YLim', [0 size(MatMUA.n3.sham,1)],'ytick',0:1e4:2e4, 'XLim',[-400 400]);
set(gca,'YLim', [0 size(MatMUA.n2.sham,1)], 'ytick',0:1e4:2e4, 'XLim',[-400 400]);
FigRipplesInUpN2N3
FigRipplesInDownN2N3
set(gca,'ylim', [0 0.09], 'ytick',0:0.02:0.1, 'Fontsize',fontsize),
set(gca,'ylim', [0 0.09], 'ytick',0:0.025:0.1, 'Fontsize',fontsize),
set(gca,'ylim', [0 0.09], 'ytick',0:0.02:0.1, 'Fontsize',fontsize),
FigRipplesInDownN2N3
FigRipplesInUpN2N3
edit FigTonesInDownN2N3.m
FigTonesInDownN2N3
FigTonesInUpN2N3
edit CrossCorrRipplesDownStatesSubstagePlot.mt
edit CrossCorrRipplesDownStatesSubstagePlot.m
CrossCorrRipplesDownStatesSubstagePlot
edit Fig2TonesUpDownDurationTransitions.m
Fig2TonesUpDownDurationTransitions
UpDownDurations
ProbabilityTonesUpDownTransition
Fig2TonesUpDownDurationTransitions
QuantifDelayShamStartEndDown
QuantifDelayTonesStartEndDown
ProbabilityTonesUpDownTransition
ProbabilityShamUpDownTransition
Fig2TonesUpDownDurationTransitions
ParcoursUpRipplesDescription
ParcoursUpRipplesDescriptionPlot
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
Fig2TonesUpDownDurationTransitions
set(gca,'ytick',0:20:100),
set(gca,'ytick',0:0.02:0.04),
FigTonesInUpN2N3
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/
FigTonesInDownN2N3
FigRipplesInUpN2N3
FigRipplesInDownN2N3
Fig2TonesUpDownDurationTransitions
edit Fig5RipplesUpDownDurationTransitions.m
Fig5RipplesUpDownDurationTransitions
edit ParcoursDownDurationDistribThresholdPlot.m
ParcoursDownDurationDistribThresholdPlot
edit ParcoursUpRipplesDescriptionPlot.m
ParcoursUpRipplesDescriptionPlot
line([75 75], [0 6e-3])
ParcoursUpRipplesDescriptionPlot
edit PathForExperimentsBasalSleepSpike.m
Dir=PathForExperimentsBasalSleepSpike
Dir=PathForExperimentsSleepRipplesSpikes
Dir=PathForExperimentsBasalSleepSpike('all')
Dir=PathForExperimentsSleepRipplesSpikes('all')
FigureISITrig490_2
%-- 24/09/2018 18:42:52 --%
LoadPathMOBs
edit FigureISIDeltaCurvePlot.m
FigureISIDeltaCurvePlot(6, 2, 'show_sig','none','paired',0);
FigureISIDeltaCurvePlot(6, 2, 'show_sig','sig','paired',0);
FigureISIDeltaCurvePlot(3, 2, 'show_sig','sig','paired',0);
FigureISIDeltaCurvePlot(6, 4, 'show_sig','sig','paired',0);
FigureISIDeltaCurvePlot(6, 5, 'show_sig','sig','paired',0);
FigureISIDeltaCurvePlot(6, 6, 'show_sig','sig','paired',0);
FigureISIDeltaCurvePlot(6, 6, 'show_sig','none','paired',0);
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2
FigureISIDeltaCurvePlot(6, 5, 'show_sig','none','paired',0);
FigureISIDeltaCurvePlot(6, 4, 'show_sig','none','paired',0);
%-- 25/09/2018 14:24:45 --%
LoadPathMOBs
edit FigTonesInUpN2N3.m
FigTonesInUpN2N3
TonesInUpN2N3Effect
FigTonesInUpN2N3
edit FigTonesInUpN2N3.m
sham_res.path';
FigTonesInUpN2N3
TonesInUpN2N3Effect
FigTonesInUpN2N3
%load
clear
load(fullfile(FolderDeltaDataKJ,'TonesInUpN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInUpN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'TonesInUpN2N3Raster.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInUpN2N3Raster.mat'))
%params
edges_delay = -400:5:400;
edges_norm  = 0:0.05:1;
animals = unique(sham_res.name);
animals = unique(tones_res.name);
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaT0');
Dir = MergePathForExperiment(Dir1,Dir2);
d
clear
load(fullfile(FolderDeltaDataKJ,'TonesInUpN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInUpN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'TonesInUpN2N3Raster.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInUpN2N3Raster.mat'))
%params
edges_delay = -400:5:400;
edges_norm  = 0:0.05:1;
animals = unique(tones_res.name);
%load
clear
load(fullfile(FolderDeltaDataKJ,'TonesInUpN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInUpN2N3Effect.mat'))
load(fullfile(FolderDeltaDataKJ,'TonesInUpN2N3Raster.mat'))
load(fullfile(FolderDeltaDataKJ,'ShamInUpN2N3Raster.mat'))
%params
edges_delay = -400:5:400;
edges_norm  = 0:0.05:1;
animals = unique(tones_res.name);
FigTonesInUpN2N3
ShamInUpN2N3Effect
FigTonesInUpN2N3
TonesInUpN2N3Raster
FigTonesInUpN2N3
edit shadedErrorBar.m
FigTonesInUpN2N3
h(1) = shadedErrorBar(x_norm.n2.tones, Smooth(d_norm.n2.tones, smoothing), Smooth(std_norm.n2.tones, smoothing), 'b')
h(2) = shadedErrorBar(x_norm.n2.sham, Smooth(d_norm.n2.sham, smoothing), Smooth(std_norm.n2.sham, smoothing), 'r')
h(1) = shadedErrorBar(x_norm.n2.tones, Smooth(d_norm.n2.tones, smoothing), Smooth(std_norm.n2.tones, smoothing));
Smooth(std_norm.n2.tones, smoothing)
Smooth(d_norm.n2.tones, smoothing)
shadedErrorBar(x_norm.n2.tones
x_norm.n2.tones
h(1) = shadedErrorBar(x_norm.n2.tones, Smooth(d_norm.n2.tones, smoothing), Smooth(std_norm.n2.tones, smoothing), 'color','b');
'color',
h(1) = shadedErrorBar(x_norm.n2.tones, Smooth(d_norm.n2.tones, smoothing), Smooth(std_norm.n2.tones, smoothing), 'b');
figure,
h(1) = shadedErrorBar(x_norm.n2.tones, Smooth(d_norm.n2.tones, smoothing), Smooth(std_norm.n2.tones, smoothing), 'b');
h(1) = shadedErrorBar(x_norm.n2.tones, Smooth(d_norm.n2.tones, smoothing), Smooth(std_norm.n2.tones, smoothing), '-b');
figure, hold on
h(1) = shadedErrorBar(x_norm.n2.tones, Smooth(d_norm.n2.tones, smoothing), Smooth(std_norm.n2.tones, smoothing), 'b');
h(2) = shadedErrorBar(x_norm.n2.sham, Smooth(d_norm.n2.sham, smoothing), Smooth(std_norm.n2.sham, smoothing), 'r');
tu(1) = shadedErrorBar(x_norm.n2.tones, Smooth(d_norm.n2.tones, smoothing), Smooth(std_norm.n2.tones, smoothing), 'b');
tu(2) = shadedErrorBar(x_norm.n2.sham, Smooth(d_norm.n2.sham, smoothing), Smooth(std_norm.n2.sham, smoothing), 'r');
FigTonesInUpN2N3
FigRipplesInUpN2N3
FigTonesInUpN2N3
ylim([0 0.8])
FigTonesInUpN2N3
edit PlotErrorBarN_KJ.m
FigTonesInUpN2N3
RipplesInUpN2N3Effect
RipplesInUpN2N3Raster
FigRipplesInUpN2N3
x_before.nrem.ripples>0;
FigRipplesInUpN2N3
%% PLOT
sz=25;
gap = [0.10 0.04];
smoothing = 1;
fontsize = 13;
paired = 0;
optiontest = 'ttest';
%%%%%%%%%%
%N2
%%%%%%%%%%
figure, hold on
%color map style
co=jet;
co(1,:)=[0 0 0]; %silences (M=0) are in black
colormap(co);
%TONES - raster plot
subtightplot(2,4,1,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n2.ripples,1), MatMUA.n2.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n2.ripples,1)], 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to ripples (s)'), ylabel('#ripples'),
title('Ripples inside up states - N2')
%SHAM - raster plot
subtightplot(2,4,5,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n2.sham,1), MatMUA.n2.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n2.sham,1)], 'ytick',0:1e4:2e4, 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside up states - N2')
% MUA
clear h
subtightplot(2,4,[2 6],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.n2, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.n2, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-400 400],'Fontsize',fontsize);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/random - N2'),
%Transition probability
subtightplot(2,4,3,gap), hold on
PlotErrorBarN_KJ({proba.n2.ripples proba.n2.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('probability of transition Up>Down'),
%Distrib of start and end of Up states
clear h
subtightplot(2,4,7,gap), hold on
h(1) = plot(x_before.n2.ripples, Smooth(d_before.n2.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.n2.ripples, Smooth(d_after.n2.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.n2.sham, Smooth(d_before.n2.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.n2.sham, Smooth(d_after.n2.sham, 0), 'color', 'r', 'linewidth',2);
set(gca,'ylim', [0 0.06], 'ytick',0:0.02:0.1, 'Fontsize',fontsize),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of up - N2'),
%Distrib occurence norm
clear h
subtightplot(2,4,[4 8],gap), hold on
h(1) = plot(x_norm.n2.ripples, Smooth(d_norm.n2.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.n2.sham, Smooth(d_norm.n2.sham, smoothing), 'color', 'r', 'linewidth',2);
xlabel('normalized time'), ylabel('probability'),
set(gca, 'ytick',0:0.02:0.08, 'Fontsize',fontsize),
lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title({'Occurence of ripples/random', 'in Up state (normalized) - N2'}),
%%%%%%%%%%
%N3
%%%%%%%%%%
figure, hold on
%color map style
co=jet;
co(1,:)=[0 0 0]; %silences (M=0) are in black
colormap(co);
%TONES - raster plot
subtightplot(2,4,1,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n3.ripples,1), MatMUA.n3.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n3.ripples,1)], 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to ripples (ms)'), ylabel('#ripples'),
title('Ripples inside up states - N3')
%SHAM - raster plot
subtightplot(2,4,5,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n3.sham,1), MatMUA.n3.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n3.sham,1)], 'ytick',0:1e4:2e4, 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside up states - N3')
% MUA
clear h
subtightplot(2,4,[2 6],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.n3, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.n3, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-400 400],'Fontsize',fontsize);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/sham - N3'),
%Transition probability
subtightplot(2,4,3,gap), hold on
PlotErrorBarN_KJ({proba.n3.ripples proba.n3.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('probability of transition Up>Down'),
%Distrib of start and end of Up states
clear h
subtightplot(2,4,7,gap), hold on
h(1) = plot(x_before.n3.ripples, Smooth(d_before.n3.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.n3.ripples, Smooth(d_after.n3.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.n3.sham, Smooth(d_before.n3.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.n3.sham, Smooth(d_after.n3.sham, 0), 'color', 'r', 'linewidth',2);
set(gca,'ylim', [0 0.06], 'ytick',0:0.02:0.1, 'Fontsize',fontsize),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of up - N3'),
%Distrib occurence norm
clear h
subtightplot(2,4,[4 8],gap), hold on
h(1) = plot(x_norm.n3.ripples, Smooth(d_norm.n3.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.n3.sham, Smooth(d_norm.n3.sham, smoothing), 'color', 'r', 'linewidth',2);
xlabel('normalized time'), ylabel('probability'),
set(gca, 'ytick',0:0.02:0.08, 'Fontsize',fontsize),
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title({'Occurence of ripples/random', 'in Up state (normalized) - N3'}),
%%%%%%%%%%
%NREM
%%%%%%%%%%
figure, hold on
%color map style
co=jet;
co(1,:)=[0 0 0]; %silences (M=0) are in black
colormap(co);
%TONES - raster plot
subtightplot(2,4,1,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.nrem.ripples,1), MatMUA.nrem.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.nrem.ripples,1)], 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to ripples (ms)'), ylabel('#ripples'),
title('Ripples inside up states - NREM')
%SHAM - raster plot
subtightplot(2,4,5,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.nrem.sham,1), MatMUA.nrem.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.nrem.sham,1)], 'ytick',0:1e4:2e4, 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside up states - NREM')
% MUA
clear h
subtightplot(2,4,[2 6],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.nrem, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.nrem, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-400 400],'Fontsize',fontsize);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/sham - NREM'),
%Transition probability
subtightplot(2,4,3,gap), hold on
PlotErrorBarN_KJ({proba.nrem.ripples proba.nrem.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('probability of transition Up>Down'),
%Distrib of start and end of Up states
clear h
subtightplot(2,4,7,gap), hold on
h(1) = plot(x_before.nrem.ripples, Smooth(d_before.nrem.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.nrem.ripples, Smooth(d_after.nrem.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.nrem.sham, Smooth(d_before.nrem.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.nrem.sham, Smooth(d_after.nrem.sham, 0), 'color', 'r', 'linewidth',2);
set(gca,'ylim', [0 0.06], 'ytick',0:0.02:0.1, 'Fontsize',fontsize),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of up - NREM'),
%Distrib occurence norm
clear h
subtightplot(2,4,[4 8],gap), hold on
h(1) = plot(x_norm.nrem.ripples, Smooth(d_norm.nrem.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.nrem.sham, Smooth(d_norm.nrem.sham, smoothing), 'color', 'r', 'linewidth',2);
hs(1) = shadedErrorBar(x_norm.nrem.ripples, Smooth(d_norm.nrem.ripples, smoothing), Smooth(std_norm.nrem.ripples, smoothing), 'b');
hs(2) = shadedErrorBar(x_norm.nrem.sham, Smooth(d_norm.nrem.sham, smoothing), Smooth(std_norm.nrem.sham, smoothing), 'r');
xlabel('normalized time'), ylabel('probability'),
set(gca, 'ytick',0:0.02:0.08, 'Fontsize',fontsize),
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title({'Occurence of ripples/random', 'in Up state (normalized) - NREM'}),
%% PLOT
sz=25;
gap = [0.10 0.04];
smoothing = 1;
fontsize = 13;
paired = 0;
optiontest = 'ranksum';
%%%%%%%%%%
%N2
%%%%%%%%%%
figure, hold on
%color map style
co=jet;
co(1,:)=[0 0 0]; %silences (M=0) are in black
colormap(co);
%TONES - raster plot
subtightplot(2,4,1,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n2.ripples,1), MatMUA.n2.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n2.ripples,1)], 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to ripples (s)'), ylabel('#ripples'),
title('Ripples inside up states - N2')
%SHAM - raster plot
subtightplot(2,4,5,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n2.sham,1), MatMUA.n2.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n2.sham,1)], 'ytick',0:1e4:2e4, 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside up states - N2')
% MUA
clear h
subtightplot(2,4,[2 6],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.n2, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.n2, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-400 400],'Fontsize',fontsize);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/random - N2'),
%Transition probability
subtightplot(2,4,3,gap), hold on
PlotErrorBarN_KJ({proba.n2.ripples proba.n2.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('probability of transition Up>Down'),
%Distrib of start and end of Up states
clear h
subtightplot(2,4,7,gap), hold on
h(1) = plot(x_before.n2.ripples, Smooth(d_before.n2.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.n2.ripples, Smooth(d_after.n2.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.n2.sham, Smooth(d_before.n2.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.n2.sham, Smooth(d_after.n2.sham, 0), 'color', 'r', 'linewidth',2);
set(gca,'ylim', [0 0.06], 'ytick',0:0.02:0.1, 'Fontsize',fontsize),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of up - N2'),
%Distrib occurence norm
clear h
subtightplot(2,4,[4 8],gap), hold on
h(1) = plot(x_norm.n2.ripples, Smooth(d_norm.n2.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.n2.sham, Smooth(d_norm.n2.sham, smoothing), 'color', 'r', 'linewidth',2);
xlabel('normalized time'), ylabel('probability'),
set(gca, 'ytick',0:0.02:0.08, 'Fontsize',fontsize),
lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title({'Occurence of ripples/random', 'in Up state (normalized) - N2'}),
%%%%%%%%%%
%N3
%%%%%%%%%%
figure, hold on
%color map style
co=jet;
co(1,:)=[0 0 0]; %silences (M=0) are in black
colormap(co);
%TONES - raster plot
subtightplot(2,4,1,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n3.ripples,1), MatMUA.n3.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n3.ripples,1)], 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to ripples (ms)'), ylabel('#ripples'),
title('Ripples inside up states - N3')
%SHAM - raster plot
subtightplot(2,4,5,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n3.sham,1), MatMUA.n3.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n3.sham,1)], 'ytick',0:1e4:2e4, 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside up states - N3')
% MUA
clear h
subtightplot(2,4,[2 6],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.n3, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.n3, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-400 400],'Fontsize',fontsize);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/sham - N3'),
%Transition probability
subtightplot(2,4,3,gap), hold on
PlotErrorBarN_KJ({proba.n3.ripples proba.n3.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('probability of transition Up>Down'),
%Distrib of start and end of Up states
clear h
subtightplot(2,4,7,gap), hold on
h(1) = plot(x_before.n3.ripples, Smooth(d_before.n3.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.n3.ripples, Smooth(d_after.n3.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.n3.sham, Smooth(d_before.n3.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.n3.sham, Smooth(d_after.n3.sham, 0), 'color', 'r', 'linewidth',2);
set(gca,'ylim', [0 0.06], 'ytick',0:0.02:0.1, 'Fontsize',fontsize),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of up - N3'),
%Distrib occurence norm
clear h
subtightplot(2,4,[4 8],gap), hold on
h(1) = plot(x_norm.n3.ripples, Smooth(d_norm.n3.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.n3.sham, Smooth(d_norm.n3.sham, smoothing), 'color', 'r', 'linewidth',2);
xlabel('normalized time'), ylabel('probability'),
set(gca, 'ytick',0:0.02:0.08, 'Fontsize',fontsize),
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title({'Occurence of ripples/random', 'in Up state (normalized) - N3'}),
%%%%%%%%%%
%NREM
%%%%%%%%%%
figure, hold on
%color map style
co=jet;
co(1,:)=[0 0 0]; %silences (M=0) are in black
colormap(co);
%TONES - raster plot
subtightplot(2,4,1,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.nrem.ripples,1), MatMUA.nrem.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.nrem.ripples,1)], 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to ripples (ms)'), ylabel('#ripples'),
title('Ripples inside up states - NREM')
%SHAM - raster plot
subtightplot(2,4,5,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.nrem.sham,1), MatMUA.nrem.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.nrem.sham,1)], 'ytick',0:1e4:2e4, 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside up states - NREM')
% MUA
clear h
subtightplot(2,4,[2 6],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.nrem, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.nrem, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-400 400],'Fontsize',fontsize);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/sham - NREM'),
%Transition probability
subtightplot(2,4,3,gap), hold on
PlotErrorBarN_KJ({proba.nrem.ripples proba.nrem.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('probability of transition Up>Down'),
%Distrib of start and end of Up states
clear h
subtightplot(2,4,7,gap), hold on
h(1) = plot(x_before.nrem.ripples, Smooth(d_before.nrem.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.nrem.ripples, Smooth(d_after.nrem.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.nrem.sham, Smooth(d_before.nrem.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.nrem.sham, Smooth(d_after.nrem.sham, 0), 'color', 'r', 'linewidth',2);
set(gca,'ylim', [0 0.06], 'ytick',0:0.02:0.1, 'Fontsize',fontsize),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of up - NREM'),
%Distrib occurence norm
clear h
subtightplot(2,4,[4 8],gap), hold on
h(1) = plot(x_norm.nrem.ripples, Smooth(d_norm.nrem.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.nrem.sham, Smooth(d_norm.nrem.sham, smoothing), 'color', 'r', 'linewidth',2);
hs(1) = shadedErrorBar(x_norm.nrem.ripples, Smooth(d_norm.nrem.ripples, smoothing), Smooth(std_norm.nrem.ripples, smoothing), 'b');
hs(2) = shadedErrorBar(x_norm.nrem.sham, Smooth(d_norm.nrem.sham, smoothing), Smooth(std_norm.nrem.sham, smoothing), 'r');
xlabel('normalized time'), ylabel('probability'),
set(gca, 'ytick',0:0.02:0.08, 'Fontsize',fontsize),
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title({'Occurence of ripples/random', 'in Up state (normalized) - NREM'}),
FigRipplesInUpN2N3
TonesInDownN2N3Effect
TonesInDownN2N3Effect
ShamInDownN2N3Effect
TonesInDownN2N3Raster
ShamInDownN2N3Raster
FigTonesInDownN2N3
RipplesInDownN2N3Raster
FigRipplesInDownN2N3
Data(raster_tsd)';
FigRipplesInDownN2N3
Data(ripraster_res.nrem.rasters.sham{p})';
Data(ripraster_res.nrem.rasters.sham{p+1})';
Data(ripraster_res.nrem.rasters.sham{p+2})';
RipplesInDownN2N3Raster
FigRipplesInDownN2N3
Data(ripraster_res.nrem.rasters.sham{p})';
Data(ripraster_res.nrem.rasters.sham{p+1})';
Data(ripraster_res.nrem.rasters.sham{p+2})';
Data(ripraster_res.nrem.rasters.sham{p+3})';
Data(ripraster_res.nrem.rasters.sham{p+4})';
Data(ripraster_res.nrem.rasters.sham{p+5})';
Data(ripraster_res.nrem.rasters.sham{p+2})';
RipplesInDownN2N3Raster
QuantificationDeltaDetectionLayer
PlotErrorBarN_KJ
QuantificationDeltaDetectionLayer
edit DeltaSingleChannelAnalysis
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MethodPaper/MidThesis2/
%-- 25/09/2018 20:21:17 --%
LoadPathMOBs
%-- 25/09/2018 20:21:50 --%
LoadPathMOBs
edit FigRipplesInUpN2N3.m
FigRipplesInUpN2N3
FigRipplesInDownN2N3
edit FigRipplesInDownN2N3
FigRipplesInDownN2N3
close all
FigRipplesInDownN2N3
FigRipplesInUpN2N3
FigRipplesInDownN2N3
RipplesInDownN2N3Effect
FigTonesInDownN2N3
FigTonesInUpN2N3
FigTonesInDownN2N3
FigRipplesInDownN2N3
RipplesInDownN2N3Effect
FigRipplesInDownN2N3
%% PLOT
sz=25;
gap = [0.10 0.04];
smoothing = 1;
fontsize = 13;
paired = 0;
optiontest = 'ranksum';
%%%%%%%%%%
%N2
%%%%%%%%%%
figure, hold on
%color map style
co=jet;
co(1,:)=[0 0 0]; %silences (M=0) are in black
colormap(co);
%TONES - raster plot
subtightplot(2,4,1,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n2.ripples,1), MatMUA.n2.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n2.ripples,1)], 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to ripples (s)'), ylabel('#ripples'),
title('Ripples inside Down states - N2')
%SHAM - raster plot
subtightplot(2,4,5,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n2.sham,1), MatMUA.n2.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n2.sham,1)], 'ytick',0:1e4:2e4, 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside Down states - N2')
% MUA
clear h
subtightplot(2,4,[2 6],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.n2, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.n2, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-400 400],'Fontsize',fontsize);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/random - N2'),
%Transition probability
subtightplot(2,4,3,gap), hold on
PlotErrorBarN_KJ({proba.n2.ripples proba.n2.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('probability of transition Down>Up'),
%Distrib of start and end of Down states
clear h
subtightplot(2,4,7,gap), hold on
h(1) = plot(x_before.n2.ripples, Smooth(d_before.n2.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.n2.ripples, Smooth(d_after.n2.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.n2.sham, Smooth(d_before.n2.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.n2.sham, Smooth(d_after.n2.sham, 0), 'color', 'r', 'linewidth',2);
set(gca,'ylim', [0 0.09], 'ytick',0:0.02:0.1, 'Fontsize',fontsize),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of down - N2'),
%Distrib occurence norm
clear h
subtightplot(2,4,[4 8],gap), hold on
h(1) = plot(x_norm.n2.ripples, Smooth(d_norm.n2.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.n2.sham, Smooth(d_norm.n2.sham, smoothing), 'color', 'r', 'linewidth',2);
hs(1) = shadedErrorBar(x_norm.n2.ripples, Smooth(d_norm.n2.ripples, smoothing), Smooth(std_norm.n2.ripples, smoothing), 'b');
hs(2) = shadedErrorBar(x_norm.n2.sham, Smooth(d_norm.n2.sham, smoothing), Smooth(std_norm.n2.sham, smoothing), 'r');
xlabel('normalized time'), ylabel('probability'),
set(gca, 'ytick',0:0.02:0.08, 'Fontsize',fontsize),
lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title({'Occurence of ripples/random', 'in Down state (normalized) - N2'}),
%%%%%%%%%%
%N3
%%%%%%%%%%
figure, hold on
%color map style
co=jet;
co(1,:)=[0 0 0]; %silences (M=0) are in black
colormap(co);
%TONES - raster plot
subtightplot(2,4,1,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n3.ripples,1), MatMUA.n3.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n3.ripples,1)], 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to ripples (ms)'), ylabel('#ripples'),
title('Ripples inside Down states - N3')
%SHAM - raster plot
subtightplot(2,4,5,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.n3.sham,1), MatMUA.n3.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.n3.sham,1)], 'ytick',0:1e4:2e4, 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside Down states - N3')
% MUA
clear h
subtightplot(2,4,[2 6],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.n3, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.n3, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-400 400],'Fontsize',fontsize);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/sham - N3'),
%Transition probability
subtightplot(2,4,3,gap), hold on
PlotErrorBarN_KJ({proba.n3.ripples proba.n3.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('probability of transition Down>Up'),
%Distrib of start and end of Down states
clear h
subtightplot(2,4,7,gap), hold on
h(1) = plot(x_before.n3.ripples, Smooth(d_before.n3.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.n3.ripples, Smooth(d_after.n3.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.n3.sham, Smooth(d_before.n3.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.n3.sham, Smooth(d_after.n3.sham, 0), 'color', 'r', 'linewidth',2);
set(gca,'ylim', [0 0.09], 'ytick',0:0.02:0.1, 'Fontsize',fontsize),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of down - N3'),
%Distrib occurence norm
clear h
subtightplot(2,4,[4 8],gap), hold on
h(1) = plot(x_norm.n3.ripples, Smooth(d_norm.n3.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.n3.sham, Smooth(d_norm.n3.sham, smoothing), 'color', 'r', 'linewidth',2);
hs(1) = shadedErrorBar(x_norm.n3.ripples, Smooth(d_norm.n3.ripples, smoothing), Smooth(std_norm.n3.ripples, smoothing), 'b');
hs(2) = shadedErrorBar(x_norm.n3.sham, Smooth(d_norm.n3.sham, smoothing), Smooth(std_norm.n3.sham, smoothing), 'r');
xlabel('normalized time'), ylabel('probability'),
set(gca, 'ytick',0:0.02:0.08, 'Fontsize',fontsize),
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title({'Occurence of ripples/random', 'in Down state (normalized) - N3'}),
%%%%%%%%%%
%NREM
%%%%%%%%%%
figure, hold on
%color map style
co=jet;
co(1,:)=[0 0 0]; %silences (M=0) are in black
colormap(co);
%TONES - raster plot
subtightplot(2,4,1,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.nrem.ripples,1), MatMUA.nrem.ripples), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.nrem.ripples,1)], 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to ripples (ms)'), ylabel('#ripples'),
title('Ripples inside Down states - NREM')
%SHAM - raster plot
subtightplot(2,4,5,gap), hold on
imagesc(x_mua/10, 1:size(MatMUA.nrem.sham,1), MatMUA.nrem.sham), hold on
axis xy, hold on
line([0 0], ylim,'linewidth',2,'color','w'), hold on
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
set(gca,'YLim', [0 size(MatMUA.nrem.sham,1)], 'ytick',0:1e4:2e4, 'XLim',[-400 400],'Fontsize',fontsize);
xlabel('time relative to random (ms)'), ylabel('#random'),
title('Random inside Down states - NREM')
% MUA
clear h
subtightplot(2,4,[2 6],gap), hold on
h(1) = plot(x_mua/10, y_mua_ripples.nrem, 'color', 'b', 'linewidth', 2);
h(2) = plot(x_mua/10, y_mua_sham.nrem, 'color', 'r', 'linewidth', 2);
set(gca,'YLim', [0 2],'xlim',[-400 400],'Fontsize',fontsize);
line([0 0],get(gca,'ylim'),'linewidth',2,'color',[0.7 0.7 0.7]);
line([40 40], ylim,'linewidth',1,'color',[0.7 0.7 0.7]), hold on
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
xlabel('time from ripples (ms)'),
title('Mean MUA on ripples/sham - NREM'),
%Transition probability
subtightplot(2,4,3,gap), hold on
PlotErrorBarN_KJ({proba.nrem.ripples proba.nrem.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('probability of transition Down>Up'),
%Distrib of start and end of Down states
clear h
subtightplot(2,4,7,gap), hold on
h(1) = plot(x_before.nrem.ripples, Smooth(d_before.nrem.ripples, 0), 'color', 'b', 'linewidth',1);
hh(1) = plot(x_after.nrem.ripples, Smooth(d_after.nrem.ripples, 0), 'color', 'b', 'linewidth',2);
h(2) = plot(x_before.nrem.sham, Smooth(d_before.nrem.sham, 0), 'color', 'r', 'linewidth',1);
hh(2) = plot(x_after.nrem.sham, Smooth(d_after.nrem.sham, 0), 'color', 'r', 'linewidth',2);
set(gca,'ylim', [0 0.09], 'ytick',0:0.02:0.1, 'Fontsize',fontsize),
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
xlabel('time from ripples (ms)'),
title('occurence of start/end of down - NREM'),
%Distrib occurence norm
clear h
subtightplot(2,4,[4 8],gap), hold on
h(1) = plot(x_norm.nrem.ripples, Smooth(d_norm.nrem.ripples, smoothing), 'color', 'b', 'linewidth',2);
h(2) = plot(x_norm.nrem.sham, Smooth(d_norm.nrem.sham, smoothing), 'color', 'r', 'linewidth',2);
hs(1) = shadedErrorBar(x_norm.nrem.ripples, Smooth(d_norm.nrem.ripples, smoothing), Smooth(std_norm.nrem.ripples, smoothing), 'b');
hs(2) = shadedErrorBar(x_norm.nrem.sham, Smooth(d_norm.nrem.sham, smoothing), Smooth(std_norm.nrem.sham, smoothing), 'r');
xlabel('normalized time'), ylabel('probability'),
set(gca, 'ytick',0:0.02:0.08, 'Fontsize',fontsize),
% lgd = legend(h, 'ripples', 'random'); lgd.Location='northwest';
title({'Occurence of ripples/random', 'in Down state (normalized) - NREM'}),
FigRipplesInDownN2N3
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2
FigRipplesInUpN2N3
edit FigTonesInUpN2N3.m
FigTonesInDownN2N3
FigTonesInUpN2N3
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/last/
FigTonesInUpN2N3
FigTonesInDownN2N3
yticks(0:0.02:0.2)
yticks(0:0.04:0.2)
FigRipplesInDownN2N3
FigRipplesInUpN2N3
yticks(0:5e4:10e4)
FigRipplesInDownN2N3
legend('tones','sham')
legend('ripples','sham')
FigTonesInUpN2N3
legend('tones','sham')
NeuronsResponseToTones_KJ
edit NeuronsResponseToTones_KJ
NeuronsResponseToRipples_KJ
NeuronsResponseToRipples2_KJ
edit NeuronsResponseToRipples2_KJ
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
NeuronsResponseToRipples2_KJ
FigNeuronsResponseRipples
[34,139,34]/255
[255,140,0]/255
FigNeuronsResponseRipples
NeuronsResponseToTones_KJ
NeuronsResponseToRipples2_KJ
FigNeuronsResponseRipples
NeuronsResponseToTones_KJ
FigNeuronsResponseRipples
colori_neur{i}
neuronClass{s,i}
FigNeuronsResponseRipples
runmean(mean(Zpeth_tones(neuronClass{i},:)),2);
neuronClass{i};
Zpeth_tones(neuronClass{i},:);
FigNeuronsResponseRipples2
FigNeuronsResponseRipples
NeuronsResponseToRipples2_KJ
FigNeuronsResponseRipples2
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
FigNeuronsResponseRipples2
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
ylim([-1 1.5])
line([0 0],get(gca,'ylim'),'color',[0.7 0.7 0.7])
set(gca,'XtickLabel',{}),
legend('1','2','3','4')
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/last/
FigNeuronsResponseRipples
FigNeuronsResponseRipples3
FigNeuronsResponseRipples
edit FigNeuronsResponseRipples
FigNeuronsResponseRipples
QuantificationDeltaDetectionLayer
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/CloseLoop/
RipplesDownBimodal_figures
RipplesDownBimodal_figures2
RipplesDownBimodalPlot
edit DeltaSingleChannelAnalysis
RipplesDownBimodalPlot
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MethodPaper/MidThesis2/
RipplesDownBimodalPlot2
figure, hold on
%PFC average - not inducing
subtightplot(3,3,1,gap); hold on
h(1) = plot(x_deep/1E4 , mean(MatDeep(end-nb_sample:end,:),1) , 'Linewidth',2,'color','r');
h(2) = plot(x_sup/1E4 , mean(MatSup(end-nb_sample:end,:),1) , 'Linewidth',2,'color','b');
yyaxis right
h(3) = plot(x_mua/1E4 , mean(MatMUA(end-nb_sample:end,:),1) , 'Linewidth',2,'color','k');
ylim(ylim_mua)
yyaxis left
line([0 0], ylim,'color',[0.7 0.7 0.7]), hold on
h_leg = legend(h,'PFCx deep', 'PFCx sup', 'MUA'); set(h_leg,'FontSize',fontsize);
set(gca, 'YTick',[-1000 0 1000],'Xticklabel',{[]},'XLim',x_lim, 'YLim',y_lim,'FontName','Times','fontsize',fontsize);
title('Ripples not inducing Down states');
%PFC average - inducing
subtightplot(3,3,2,gap); hold on
h(1) = plot(x_deep/1E4 , mean(MatDeep(1:sum(induce_down==1),:),1) , 'Linewidth',2,'color','r');
h(2) = plot(x_sup/1E4 , mean(MatSup(1:sum(induce_down==1),:),1) , 'Linewidth',2,'color','b');
yyaxis right
h(3) = plot(x_mua/1E4 , mean(MatMUA(1:sum(induce_down==1),:),1) , 'Linewidth',2,'color','k');
ylim(ylim_mua)
yyaxis left
line([0 0], ylim,'color',[0.7 0.7 0.7]), hold on
h_leg = legend(h,'PFCx deep', 'PFCx sup', 'MUA'); set(h_leg,'FontSize',fontsize);
set(gca, 'YTick',[-1000 0 1000],'Xticklabel',{[]},'XLim',x_lim, 'YLim',y_lim,'FontName','Times','fontsize',fontsize);
title('Ripples inducing Down states');
%PACx average - not inducing
subtightplot(3,3,4,gap); hold on
h(1) = plot(x_padeep/1E4 , mean(MatPaDeep(end-nb_sample:end,:),1) , 'Linewidth',2,'color','r');
h(2) = plot(x_pasup/1E4 , mean(MatPaSup(end-nb_sample:end,:),1) , 'Linewidth',2,'color','b');
yyaxis right
h(3) = plot(x_mua/1E4 , mean(MatMUA(end-nb_sample:end,:),1) , 'Linewidth',2,'color','k');
ylim(ylim_mua)
yyaxis left
line([0 0], ylim,'color',[0.7 0.7 0.7]), hold on
set(gca, 'YTick',[-1000 0 1000],'Xticklabel',{[]},'XLim',x_lim, 'FontName','Times','fontsize',fontsize);
title('PaCx')
%PACx average - inducing
subtightplot(3,3,5,gap); hold on
h(1) = plot(x_padeep/1E4 , mean(MatPaDeep(1:sum(induce_down==1),:),1) , 'Linewidth',2,'color','r');
h(2) = plot(x_pasup/1E4 , mean(MatPaSup(1:sum(induce_down==1),:),1) , 'Linewidth',2,'color','b');
yyaxis right
h(3) = plot(x_mua/1E4 , mean(MatMUA(1:sum(induce_down==1),:),1) , 'Linewidth',2,'color','k');
ylim(ylim_mua)
yyaxis left
line([0 0], ylim,'color',[0.7 0.7 0.7]), hold on
set(gca, 'YTick',[-1000 0 1000],'Xticklabel',{[]},'XLim',x_lim, 'FontName','Times','fontsize',fontsize);
title('PaCx')
%PACx average -on down states
subtightplot(3,3,6,gap); hold on
h(1) = plot(x_down/1E4 , mean(MatPaDownDeep,1) , 'Linewidth',2,'color','r');
h(2) = plot(x_down/1E4 , mean(MatPaDownSup,1) , 'Linewidth',2,'color','b');
line([0 0], ylim,'color',[0.7 0.7 0.7]), hold on
set(gca, 'YTick',[-1000 0 1000],'Xticklabel',{[]},'XLim',x_lim, 'FontName','Times','fontsize',fontsize);
title('PaCx on down states')
%MoCx average - not inducing
subtightplot(3,3,7,gap); hold on
h(1) = plot(x_modeep/1E4 , mean(MatMoDeep(end-nb_sample:end,:),1) , 'Linewidth',2,'color','r');
h(2) = plot(x_mosup/1E4 , mean(MatMoSup(end-nb_sample:end,:),1) , 'Linewidth',2,'color','b');
yyaxis right
h(3) = plot(x_mua/1E4 , mean(MatMUA(end-nb_sample:end,:),1) , 'Linewidth',2,'color','k');
ylim(ylim_mua)
yyaxis left
line([0 0], ylim,'color',[0.7 0.7 0.7]), hold on
set(gca, 'YTick',[-1000 0 1000],'Xticklabel',{[]},'XLim',x_lim, 'FontName','Times','fontsize',fontsize);
title('MoCx')
%MoCx average - inducing
subtightplot(3,3,8,gap); hold on
h(1) = plot(x_modeep/1E4 , mean(MatMoDeep(1:sum(induce_down==1),:),1) , 'Linewidth',2,'color','r');
h(2) = plot(x_mosup/1E4 , mean(MatMoSup(1:sum(induce_down==1),:),1) , 'Linewidth',2,'color','b');
yyaxis right
h(3) = plot(x_mua/1E4 , mean(MatMUA(1:sum(induce_down==1),:),1) , 'Linewidth',2,'color','k');
ylim(ylim_mua)
yyaxis left
line([0 0], ylim,'color',[0.7 0.7 0.7]), hold on
set(gca, 'YTick',[-1000 0 1000],'Xticklabel',{[]},'XLim',x_lim, 'FontName','Times','fontsize',fontsize);
title('MoCx')
%MoCx average -on down states
subtightplot(3,3,9,gap); hold on
h(1) = plot(x_down/1E4 , mean(MatMoDownDeep,1) , 'Linewidth',2,'color','r');
h(2) = plot(x_down/1E4 , mean(MatMoDownSup,1) , 'Linewidth',2,'color','b');
line([0 0], ylim,'color',[0.7 0.7 0.7]), hold on
set(gca, 'YTick',[-1000 0 1000],'Xticklabel',{[]},'XLim',x_lim, 'FontName','Times','fontsize',fontsize);
title('MoCx on down states')
RipplesDownBimodalPlot2
ylim
RipplesDownBimodalPlot2
ylim([-1000 1000])
RipplesDownBimodalPlot2
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/MethodPart/
line([0 0], ylim,'color','k','linewidth',2), hold on
legend('Deep','Sup','MUA')
RipplesDownBimodalPlot2
clc
clear
edit FigTonesInUpN2N3.m
FigTonesInUpN2N3
figure, hold on
%NREM
subtightplot(2,3,1,gap), hold on
PlotErrorBarN_KJ({proba.nrem.tones proba.nrem.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 0.7],'xtick',1:2,'XtickLabel',{'tones','sham'},'Fontsize',fontsize),
title('Tones in NREM')
%NREM
subtightplot(2,3,2,gap), hold on
PlotErrorBarN_KJ({proba.n2.tones proba.n2.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 0.7],'xtick',1:2,'XtickLabel',{'tones','sham'},'Fontsize',fontsize),
title('Tones in N2')
%NREM
subtightplot(2,3,3,gap), hold on
PlotErrorBarN_KJ({proba.n3.tones proba.n3.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 0.7], 'xtick',1:2,'XtickLabel',{'tones','sham'},'Fontsize',fontsize),
title('Tones in N3')
edit FigRipplesInUpN2N3.m
FigRipplesInUpN2N3
figure, hold on
%NREM
subtightplot(2,3,1,gap), hold on
PlotErrorBarN_KJ({proba.nrem.ripples proba.nrem.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in NREM')
%NREM
subtightplot(2,3,2,gap), hold on
PlotErrorBarN_KJ({proba.nrem.ripples proba.nrem.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in N2')
%NREM
subtightplot(2,3,3,gap), hold on
PlotErrorBarN_KJ({proba.nrem.ripples proba.nrem.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in N3')
%% PLOT Bar Transition probability
figure, hold on
%NREM
subtightplot(2,3,1,gap), hold on
PlotErrorBarN_KJ({proba.nrem.ripples proba.nrem.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in NREM')
%N2
subtightplot(2,3,2,gap), hold on
PlotErrorBarN_KJ({proba.n2.ripples proba.n2.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in N2')
%N3
subtightplot(2,3,3,gap), hold on
PlotErrorBarN_KJ({proba.n3.ripples proba.n3.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in N3')
FigRipplesInUpN2N3
FigTonesInUpN2N3
FigRipplesInUpN2N3
%NREM
subtightplot(2,3,4,gap), hold on
PlotErrorBarN_KJ({proba.nrem.ripples proba.nrem.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 0.2], 'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in NREM')
%N2
subtightplot(2,3,5,gap), hold on
PlotErrorBarN_KJ({proba.n2.ripples proba.n2.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 0.2], 'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in N2')
%N3
subtightplot(2,3,6,gap), hold on
PlotErrorBarN_KJ({proba.n3.ripples proba.n3.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 0.2], 'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in N3')
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/last/
%-- 26/09/2018 01:26:45 --%
LoadPathMOBs
FigTonesInUpN2N3
FigRipplesInUpN2N3
%NREM
subtightplot(2,3,4,gap), hold on
PlotErrorBarN_KJ({proba.nrem.ripples proba.nrem.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 0.2], 'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in NREM')
%N2
subtightplot(2,3,5,gap), hold on
PlotErrorBarN_KJ({proba.n2.ripples proba.n2.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 0.2], 'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in N2')
%N3
subtightplot(2,3,6,gap), hold on
PlotErrorBarN_KJ({proba.n3.ripples proba.n3.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 0.2], 'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in N3')
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/Mid-Thesis2/Tones/last/
FigTonesInDownN2N3
figure, hold on
fontsize = 20;
%NREM
subtightplot(2,3,1,gap), hold on
PlotErrorBarN_KJ({proba.nrem.tones proba.nrem.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 1],'ytick',0:0.2:1,'xtick',1:2,'XtickLabel',{'tones','sham'},'Fontsize',fontsize),
title('Tones in NREM')
%N2
subtightplot(2,3,2,gap), hold on
PlotErrorBarN_KJ({proba.n2.tones proba.n2.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 1],'ytick',0:0.2:1,'xtick',1:2,'XtickLabel',{'tones','sham'},'Fontsize',fontsize),
title('Tones in N2')
%N3
subtightplot(2,3,3,gap), hold on
PlotErrorBarN_KJ({proba.n3.tones proba.n3.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 1],'ytick',0:0.2:1, 'xtick',1:2,'XtickLabel',{'tones','sham'},'Fontsize',fontsize),
title('Tones in N3')
FigRipplesInDownN2N3
%NREM
subtightplot(2,3,4,gap), hold on
PlotErrorBarN_KJ({proba.nrem.ripples proba.nrem.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 0.6], 'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in NREM')
%N2
subtightplot(2,3,5,gap), hold on
PlotErrorBarN_KJ({proba.n2.ripples proba.n2.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 0.6], 'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in N2')
%N3
subtightplot(2,3,6,gap), hold on
PlotErrorBarN_KJ({proba.n3.ripples proba.n3.sham}, 'newfig',0, 'barcolors',{'b','r'}, 'paired',paired, 'optiontest',optiontest, 'showPoints',1,'ShowSigstar','sig');
set(gca,'ylim',[0 0.6], 'xtick',1:2,'XtickLabel',{'ripples','random'},'Fontsize',fontsize),
title('Ripples in N3')
xticks(0:0.2:1)
xticks(1:2)
yticks(0:0.2:1)
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MethodPaper/MidThesis2/
edit FigNeuronsResponseRipples.m
[0.13 0.54 0.13]*255
[1 0.55 0]*255
clc
clear
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/
QuantifSlowWaveSlowDynPlot
QuantifHypnogramSlowDyn
QuantifHypnogramSlowDynPlot
QuantifSlowDynDelayToneSlowWavePlot
cd(FolderSlowDynData)
%-- 03/10/2018 11:08:42 --%
LoadPathMOBs
ParcoursMotherCurvesSlowDyn
QuantifSlowWaveSlowDynPlot
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
clear
load(fullfile(FolderSlowDynData,'ParcoursMotherCurvesSlowDyn.mat'))
%age
all_ages = cell2mat(mother_res.age);
for i=1:length(age_range)-1
mother_curve.y{i} = [];
for p=1:length(mother_res.filename)
if mother_res.age{p}>=age_range(i) && mother_res.age{p}<age_range(i+1)
mother_curve.y{i} = [mother_curve.y{i} ; mother_res.met_tones{p,ch}(:,2)'];
end
end
end
ParcoursMotherCurvesSlowDynPlot
clear
load(fullfile(FolderSlowDynData,'ParcoursMotherCurvesSlowDyn.mat'))
%% init
%params
step = 10;
age_range = [20:step:50 90];
show_sig = 'sig';
showPoints = 1;
%colors
colori = [distinguishable_colors(length(age_range)-1)];
for i=1:length(age_range)-1
colori_cluster{i} = colori(i,:);
end
%labels
for i=1:length(age_range)-2
labels{i} = [num2str(age_range(i)) '-' num2str(age_range(i+1))];
end
labels{length(age_range)-1} = ['>' num2str(age_range(end-1))];
%%  pool
%age
all_ages = cell2mat(mother_res.age);
for ch=1:4
for i=1:length(age_range)-1
all_curves = [];
for p=1:length(mother_res.filename)
if mother_res.age{p}>=age_range(i) && mother_res.age{p}<age_range(i+1)
all_curves = [all_curves ; mother_res.met_tones{p,ch}(:,2)'];
end
end
%x, y & std
mean_curves.y{i,ch} = mean(all_curves,1);
std_curves.y{i,ch} = std(all_curves,1) / sqrt(size(all_curves,1));
std_curves.x{i,ch} = mother_res.met_tones{p,ch}(:,1);
end
end
ParcoursMotherCurvesSlowDynPlot
mother_res.met_tones{p,ch}(:,2)';
%age
all_ages = cell2mat(mother_res.age);
for ch=1:4
for i=1:length(age_range)-1
all_curves = [];
for p=1:length(mother_res.filename)
if mother_res.age{p}>=age_range(i) && mother_res.age{p}<age_range(i+1) && mother_res.nb_stim{p}>100
all_curves = [all_curves ; mother_res.met_tones{p,ch}(:,2)'];
end
end
%x, y & std
mean_curves.y{i,ch} = mean(all_curves,1);
std_curves.y{i,ch} = std(all_curves,1) / sqrt(size(all_curves,1));
std_curves.x{i,ch} = mother_res.met_tones{p,ch}(:,1);
end
end
ParcoursMotherCurvesSlowDynPlot
% QuantifEffectStimSlowDynPlot
% 02.10.2018 KJ
%
% Infos
%   for each night :
%       - effect of stim
%       - success ratio
%
% SEE
%   QuantifEffectStimSlowDyn
%
clear
load(fullfile(FolderSlowDynData,'QuantifEffectStimSlowDyn.mat'))
%% init
%params
step = 10;
age_range = [20:step:50 90];
show_sig = 'sig';
showPoints = 1;
%colors
colori = [distinguishable_colors(length(age_range)-1)];
for i=1:length(age_range)-1
colori_age{i} = colori(i,:);
end
%labels
for i=1:length(age_range)-2
labels{i} = [num2str(age_range(i)) '-' num2str(age_range(i+1))];
end
labels{length(age_range)-1} = ['>' num2str(age_range(end-1))];
QuantifEffectStimSlowDynPlot
QuantifSlowWaveSlowDynPlot
QuantifHypnogramSlowDynPlot
QuantifSlowWaveSlowDynPlot2
%% plot
figure, hold on
%PFC down>up
subplot(2,2,1), hold on
for ch=1:length(labels_ch)
h(ch) = plot(x_success.down{ch}, y_success.down{ch}, 'color', colori_ch{ch}); hold on
end
line([0 0], ylim,'color','k','linewidth',2), hold on
xlabel('time from tones'),
legend(h, labels_ch);
title('Tones down>up')
%PFC down>down
subplot(2,2,2), hold on
for ch=1:length(labels_ch)
h(ch) = plot(x_failed.down{ch}, y_failed.down{ch}, 'color', colori_ch{ch}); hold on
end
line([0 0], ylim,'color','k','linewidth',2), hold on
xlabel('time from tones'),
legend(h, labels_ch);
title('Tones down>down')
%PFC up>up
subplot(2,2,3), hold on
for ch=1:length(labels_ch)
h(ch) = plot(x_failed.up{ch}, y_failed.up{ch}, 'color', colori_ch{ch}); hold on
end
line([0 0], ylim,'color','k','linewidth',2), hold on
xlabel('time from tones'),
legend(h, labels_ch);
title('Tones up>up')
%PFC up>down
subplot(2,2,4), hold on
for ch=1:length(labels_ch)
h(ch) = plot(x_success.up{ch}, y_success.up{ch}, 'color', colori_ch{ch}); hold on
end
line([0 0], ylim,'color','k','linewidth',2), hold on
xlabel('time from tones'),
legend(h, labels_ch);
title('Tones up>down')
suplabel('PFC signals','t');
%% Plot 2
figure, hold on
%down>up
subplot(2,2,1), hold on
for ch=1:length(labels_ch2)
h(ch) = plot(x_success2.down{ch}, y_success2.down{ch}, 'color', colori_ch2{ch}); hold on
end
line([0 0], ylim,'color','k','linewidth',2), hold on
xlabel('time from tones'),
legend(h, labels_ch2);
title('Tones down>up')
%down>down
subplot(2,2,2), hold on
for ch=1:length(labels_ch2)
h(ch) = plot(x_failed2.down{ch}, y_failed2.down{ch}, 'color', colori_ch2{ch}); hold on
end
line([0 0], ylim,'color','k','linewidth',2), hold on
xlabel('time from tones'),
legend(h, labels_ch2);
title('Tones  down>down')
%up>up
subplot(2,2,3), hold on
for ch=1:length(labels_ch2)
h(ch) = plot(x_failed2.up{ch}, y_failed2.up{ch}, 'color', colori_ch2{ch}); hold on
end
line([0 0], ylim,'color','k','linewidth',2), hold on
xlabel('time from tones'),
legend(h, labels_ch2);
title('Tones up>up')
%up>down
subplot(2,2,4), hold on
for ch=1:length(labels_ch2)
h(ch) = plot(x_success2.up{ch}, y_success2.up{ch}, 'color', colori_ch2{ch}); hold on
end
line([0 0], ylim,'color','k','linewidth',2), hold on
xlabel('time from tones'),
legend(h, labels_ch2);
title('Tones up>down')
Dir=PathForExperimentsDeltaSleepSpikes('RdmTone');
cd(Dir.path{1})
ScriptTonesOnDeltaWavesEffect
TonesAndLfpOnTransitions
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243/ChannelsToAnalyse/PFCx_clusters.mat')
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243/ChannelsToAnalyse/PFCx_locations.mat')
TonesAndLfpOnTransitions
%load
clear
load(fullfile(FolderDeltaDataKJ,'TonesAndLfpOnTransitions.mat'))
%params
TonesAndLfpOnTransitionsPlot
%% plot
figure, hold on
labels_cl = {'1','2','3','4','5'};
colors_cl = {'b', 'r', 'g', 'k', 'm'};
%PFC down>up
subplot(2,3,1), hold on
for c=1:nb_clusters
h(c) = plot(x_met, mean_tones.down.up{c} , 'color', colors_cl{c}); hold on
end
line([0 0], ylim,'color',[0.7 0.7 0.7],'linewidth',1), hold on
xlabel('time from tones'),
legend(h, labels_cl);
title('Tones down>up')
%PFC down>down
subplot(2,3,2), hold on
for c=1:nb_clusters
h(c) = plot(x_met, mean_tones.down.down{c} , 'color', colors_cl{c}); hold on
end
line([0 0], ylim,'color',[0.7 0.7 0.7],'linewidth',1), hold on
xlabel('time from tones'),
legend(h, labels_cl);
title('Tones down>down')
%PFC on start of down
subplot(2,3,3), hold on
for c=1:nb_clusters
h(c) = plot(x_met, mean_tones.st_down{c} , 'color', colors_cl{c}); hold on
end
line([0 0], ylim,'color',[0.7 0.7 0.7],'linewidth',1), hold on
xlabel('time from tones'),
legend(h, labels_cl);
title('Tones on start down')
%PFC up>up
subplot(2,3,4), hold on
for c=1:nb_clusters
h(c) = plot(x_met, mean_tones.up.up{c} , 'color', colors_cl{c}); hold on
end
line([0 0], ylim,'color',[0.7 0.7 0.7],'linewidth',1), hold on
xlabel('time from tones'),
legend(h, labels_cl);
title('Tones up>up')
%PFC up>down
subplot(2,3,5), hold on
for c=1:nb_clusters
h(c) = plot(x_met, mean_tones.up.down{c} , 'color', colors_cl{c}); hold on
end
line([0 0], ylim,'color',[0.7 0.7 0.7],'linewidth',1), hold on
xlabel('time from tones'),
legend(h, labels_cl);
title('Tones up>down')
%PFC on end of down
subplot(2,3,6), hold on
for c=1:nb_clusters
h(c) = plot(x_met, mean_tones.end_down{c} , 'color', colors_cl{c}); hold on
end
line([0 0], ylim,'color',[0.7 0.7 0.7],'linewidth',1), hold on
xlabel('time from tones'),
legend(h, labels_cl);
title('Tones on end down')
suplabel('PFC response','t');
TonesAndLfpOnTransitionsPlot
[255 20 147]/255
100/255
TonesAndLfpOnTransitionsPlot
[50 205 50]/255
TonesAndLfpOnTransitionsPlot
69/255
TonesAndLfpOnTransitionsPlot
xlim([-400 800]),
RipplesInUpN2N3Effect
RipplesAndLfpOnTransitions
ClusterToneEffectonNeurons
clear
clc
LoadPathMOBs
edit LFPlayerInfluenceOnDetection.m
edit RipplesInDownN2N3Effect.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/
load(fullfile(FolderDeltaDataKJ,'LFPonDownStatesLayer.mat'));
layer_res.path';
clear
load(fullfile(FolderDeltaDataKJ,'LFPonDownStatesLayer.mat'));
meancurves = layer_res.down.meandown2;
layer_res.channels';
p=1
MakeData_PFCxClusters
RipplesAndLfpOnTransitions
QuantifHypnogramSlowDyn2
%-- 03/10/2018 22:38:58 --%
LoadPathMOBs
QuantifHypnogramSlowDyn2
QuantifHypnogramSlowDynPlot2
edit QuantifHypnogramSlowDynPlot2
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
HistogramDatasetSlowdyn
cd(FolderSlowDynFigures)
min(all_ages)
max(all_ages)
QuantifHypnogramSlowDynPlot
QuantifHypnogramSlowDynPlot2
QuantifSlowWaveSlowDynPlot2
%% Plot 2
sz = 25;
figure, hold on
%number of slow waves
subplot(2,2,1), hold on
scatter(all_ages, all_nbslowwaves, sz, 'filled'), hold on
plot(all_ages, yfit.nbslowwaves,'r-.')
title('Number of slow waves'),
text_info = {['r = ' num2str(rc.nbslowwaves(1,2))],['p = ' num2str(pv.nbslowwaves(1,2))]};
x_lim = xlim; y_lim = ylim;
text(x_lim(2), y_lim(1), text_info)
%density of slow waves
subplot(2,2,2), hold on
scatter(all_ages, all_swdensity, sz, 'filled'), hold on
plot(all_ages, yfit.swdensity,'r-.')
title('Density of slow waves'),
text_info = {['r = ' num2str(rc.swdensity(1,2))],['p = ' num2str(pv.swdensity(1,2))]};
x_lim = xlim; y_lim = ylim;
text(x_lim(2), y_lim(1), text_info)
%Density slope
subplot(2,2,3), hold on
scatter(all_ages, all_densityslope, sz, 'filled'), hold on
plot(all_ages, yfit.densityslope,'r-.')
title('Slope of SW density'),
text_info = {['r = ' num2str(rc.densityslope(1,2))],['p = ' num2str(pv.densityslope(1,2))]};
x_lim = xlim; y_lim = ylim;
text(x_lim(2), y_lim(1), text_info)
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
p=100;
clearvars -except Dir p quantif_res
disp(' ')
disp('****************************************************************')
disp(Dir.filename{p})
%% init
quantif_res.filename{p} = Dir.filename{p};
quantif_res.filereference{p} = Dir.filereference{p};
quantif_res.subject{p} = Dir.subject{p};
quantif_res.date{p} = Dir.date(p);
quantif_res.age{p} = Dir.age{p};
quantif_res.gender{p} = Dir.gender{p};
%load signals and data
[signals, ~, stimulations, StageEpochs, labels_eeg] = GetRecordDreem(Dir.filename{p});
N1 = StageEpochs{1}; N2 = StageEpochs{2}; N3 = StageEpochs{3};
%quality - choose a channel
try
[~, NoiseEpoch, ~] = GetDreemQuality(Dir.filereference{p});
duration_noise = [];
for i=1:4
duration_noise(i,1) = tot_length(NoiseEpoch{i});
end
[~,idx] = min(duration_noise);
channel_sw = [1 2 5 6];
channel_sw = channel_sw(idx);
catch
channel_sw = 1;
end
quantif_res.channel_sw{p} = channel_sw;
%load slow waves
sw_file = fullfile(FolderSlowDynPreprocess, 'SlowWaves2', ['SlowWaves_' num2str(Dir.filereference{p}) '.mat']);
if exist(sw_file,'file')==2
load(sw_file);
else
[SlowWaveEpochs, ~] = MakeSlowWavesDreemRecord(p,Dir,'savefolder',fullfile(FolderSlowDynPreprocess, 'SlowWaves2'));
end
%% params
%params density
windowsize = 60e4; %60s
smoothing = 1;
%params isi
step=100;
edges=0:step:10000;
%% night duration and intervals
for st=1:length(StageEpochs)
try
endst(st) = max(End(StageEpochs{st}));
catch
endst(st) = nan;
end
end
night_duration = max(endst);
QuantifSlowWaveSlowDyn
%-- 03/10/2018 23:34:32 --%
LoadPathMOBs
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
p=1
clearvars -except Dir p quantif_res
%     disp(' ')
%     disp('****************************************************************')
%     disp(Dir.filename{p})
%
%     %% init
%
%     quantif_res.filename{p} = Dir.filename{p};
%     quantif_res.filereference{p} = Dir.filereference{p};
%     quantif_res.subject{p} = Dir.subject{p};
%     quantif_res.date{p} = Dir.date(p);
%     quantif_res.age{p} = Dir.age{p};
%     quantif_res.gender{p} = Dir.gender{p};
%load signals and data
[signals, ~, stimulations, StageEpochs, labels_eeg] = GetRecordDreem(Dir.filename{p});
N1 = StageEpochs{1}; N2 = StageEpochs{2}; N3 = StageEpochs{3};
%params density
windowsize = 60e4; %60s
smoothing = 1;
%     %params isi
step=100;
edges=0:step:10000;
%% night duration and intervals
for st=1:length(StageEpochs)
try
endst(st) = max(End(StageEpochs{st}));
catch
endst(st) = nan;
end
end
night_duration = max(endst);
quantif_res.night_duration{p} = night_duration;
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
QuantifSlowDynDelayToneSlowWavePlot
yticks(0:0.005:0.02)
QuantifSlowDynDelayToneSlowWavePlot
cd(FolderSlowDynFigures)
cd(FolderSlowDyn)
cd(FolderSlowDynFigures)
edit PlotOneMotherCurve
PlotOneMotherCurve
rec = 229446;
p = find(cell2mat(Dir.filereference)==rec);
PlotOneMotherCurve
QuantifSlowWaveSlowDynPlot2
clear
load(fullfile(FolderSlowDynData,'QuantifSlowWaveSlowDyn.mat'))
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
all_subject = Dir.subject;
subject_list = unique(all_subject);
all_subject = quantif_res.subject;
subject_list = unique(all_subject);
clear
load(fullfile(FolderSlowDynData,'QuantifSlowWaveSlowDyn.mat'))
%% init
%params
age_range = [20 30 40 50 90];
show_sig = 'sig';
%%  pool
%age
all_ages = cell2mat(quantif_res.age);
all_subject = quantif_res.subject;
%night variable
all_densityslope = cell2mat(quantif_res.density_slope);
all_nbslowwaves = cell2mat(quantif_res.nb_slowwaves);
all_nightdur     = cell2mat(quantif_res.night_duration)/1e4;
all_swdensity    = all_nbslowwaves ./ all_nightdur;
%isi
all_isipeak = [];
for p=1:length(quantif_res.filename)
[~,idx] = max(Smooth(quantif_res.y_isi{p},1));
all_isipeak(p) = quantif_res.x_isi{p}(idx);
end
%others
all_slopes = [];
all_durations = [];
all_peak = [];
all_trough = [];
for p=1:length(quantif_res.filename)
all_slopes(p) = nanmedian(quantif_res.slopes{p});
all_durations(p) = nanmedian(quantif_res.durations{p})/10;
all_peak(p) = nanmedian(quantif_res.amplitude.peak{p});
all_trough(p) = nanmedian(quantif_res.amplitude.trough{p});
end
%% average per subject
%unique
subject_info = table2cell(unique(table(all_subject, all_ages)));
subject_name = subject_info(:,1);
subject_age  = cell2mat(subject_info(:,2));
%unique
all_subject = quantif_res.subject;
subject_list = unique(all_subject);
QuantifSlowWaveSlowDynPlot2
table(all_subject, all_ages)
subject_info = table2cell(unique(table(all_subject', all_ages')));
s=1
idx = strcmpi(all_subject, subject_name{s});
clear
load(fullfile(FolderSlowDynData,'QuantifSlowWaveSlowDyn.mat'))
%% init
%params
age_range = [20 30 40 50 90];
show_sig = 'sig';
%%  pool
%age
all_ages = cell2mat(quantif_res.age);
all_subject = quantif_res.subject;
%night variable
all_densityslope = cell2mat(quantif_res.density_slope);
all_nbslowwaves  = cell2mat(quantif_res.nb_slowwaves);
all_nightdur     = cell2mat(quantif_res.night_duration)/1e4;
all_swdensity    = all_nbslowwaves ./ all_nightdur;
%isi
all_isipeak = [];
for p=1:length(quantif_res.filename)
[~,idx] = max(Smooth(quantif_res.y_isi{p},1));
all_isipeak(p) = quantif_res.x_isi{p}(idx);
end
%others
all_slopes = [];
all_durations = [];
all_peak = [];
all_trough = [];
for p=1:length(quantif_res.filename)
all_slopes(p) = nanmedian(quantif_res.slopes{p});
all_durations(p) = nanmedian(quantif_res.durations{p})/10;
all_peak(p) = nanmedian(quantif_res.amplitude.peak{p});
all_trough(p) = nanmedian(quantif_res.amplitude.trough{p});
end
%% average per subject
%unique
subject_info = table2cell(unique(table(all_subject', all_ages')));
subject_name = subject_info(:,1);
subject_age  = cell2mat(subject_info(:,2));
%by subject
sub_densityslope    = [];
sub_nbslowwaves     = [];
sub_nightdur        = [];
sub_swdensity       = [];
sub_isipeak         = [];
sub_slopes      = [];
sub_durations   = [];
sub_peak        = [];
sub_trough      = [];
% data per subject
for s=1:length(subject_name)
idx = strcmpi(all_subject, subject_name{s});
sub_densityslope(s) = mean(all_densityslope(idx));
end
QuantifSlowWaveSlowDynPlot2
cd(FolderSlowDynFigures)
QuantifSlowWaveSlowDynPlot2
ylim([700 2000])
yticks(0:250:2000)
QuantifSlowWaveSlowDynPlot2
ylim([0 4500])
ylim([0 10])
QuantifHypnogramSlowDynPlot2
table(all_subject', all_ages')
subject_info = table2cell(unique(table(all_subject', all_ages)));
QuantifHypnogramSlowDynPlot2
close all
QuantifHypnogramSlowDynPlot2
yticks(0:1000:3000)
sub_sleepeff=sub_sleepeff*100;
cla
%Sleep efficiency
subplot(2,2,2), hold on
scatter(subject_age, sub_sleepeff, sz, sc_color, 'filled'), hold on
plot(subject_age, yfit.sleep_eff,'k')
title('Sleep efficiency'),
set(gca, 'xtick', 20:10:70, 'fontsize',fontsize),
xlabel('age'), ylabel('%'),
text_info = {['r = ' num2str(rc.sleep_eff(1,2))],['p = ' num2str(pv.sleep_eff(1,2))]};
x_lim = xlim; y_lim = ylim;
text(x_lim(2), y_lim(1), text_info)
QuantifHypnogramSlowDynPlot2
yticks(0:1000:3000)
QuantifHypnogramSlowDynPlot2
ylim([0 60])
edit QuantifSlowDynDelayToneSlowWavePlot.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/Stim/
%load
clear
load(fullfile(FolderSlowDynData, 'QuantifSlowDynDelayToneSlowWave.mat'))
QuantifSlowDynDelayToneSlowWaveAgePlot
uiopen('/home/mobsjunior/Dropbox/DataKJ/Dreem/SlowDyn/Figures/Characterisation/MeanSlowWaveDetected.fig',1)
xlabel('time from slow wave start (ms)'), ylabel('µV')
edit PlotOneDensityCurve.m
PlotOneDensityCurve
cd(FolderSlowDynFigures)
quantif_res.age{p}
QuantifSlowWaveSlowDynPlot2
all_subject';
PlotOneDensityCurve
ylim([0 35])
PlotOneDensityCurve
ylim([0 35])
PlotOneDensityCurve
QuantifSlowDynDelayToneSlowWavePlot
PlotOneDensityCurve
quantif_res.density_slope{p}
PlotOneDensityCurve
quantif_res.density_slope{p}
PlotOneDensityCurve
quantif_res.density_slope{p}
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/Stim/
PlotOneMotherCurve
ParcoursMotherCurvesSlowDynPlot
PlotOneMotherCurve
yticks(-100:25:100)
cd(FolderSlowDynFigures)
QuantifSlowDynDelayToneSlowWavePlot
edit QuantifSlowDynDelayToneSlowWavePlot
QuantifSlowDynDelayToneSlowWavePlot
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/Stim/
QuantifEffectStimSlowDynPlot
set(gca, 'ylim',[0 600],'ytick', 0:200:800, 'fontsize', 26),
QuantifEffectStimSlowDynPlot
cd(FolderSlowDynFigures)
edit PlotOneDensityCurve.m
clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
load(fullfile(FolderSlowDynData,'QuantifSlowWaveSlowDyn.mat'),'quantif_res')
%rec
rec = 96579;
rec = 161924;
rec = 203752;
rec = 199984;
p = find(cell2mat(Dir.filereference)==rec);
%params
channel_frontal = [1 2 5 6];
binsize_met = 10;
nbBins_met  = 300;
%load signals and data
channel_sw = quantif_res.channel_sw{p};
clear
load(fullfile(FolderSlowDynData,'QuantifSlowWaveSlowDyn.mat'),'quantif_res')
%rec
rec = 96579;
rec = 161924;
rec = 203752;
rec = 199984;
p = find(cell2mat(quantif_res.filereference)==rec);
%load signals and data
channel_sw = quantif_res.channel_sw{p};
edit PlotIDDreemSlowDyn.m
PlotOneIsiCurve
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/Characteristation/
load(fullfile(FolderSlowDynData,'QuantifSlowWaveSlowDyn.mat'),'quantif_res')
cell2mat(quantif_res.night_duration);
nd= cell2mat(quantif_res.night_duration);
hist(nd)
close all
hist(nd/3600e4,50)
% clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
%load channels sw
load(fullfile(FolderSlowDynData,'QuantifSlowWaveSlowDyn.mat'),'quantif_res')
all_channels_sw = quantif_res.channel_sw; clear quantif_res
%load channels sw
load(fullfile(FolderSlowDynData,'QuantifHypnogramSlowDyn.mat'),'hypno_res')
all_sol = hypno_res.sol; clear hypno_res
all_sol = cell2mat(hypno_res.sol); clear hypno_res
% clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
%load channels sw
load(fullfile(FolderSlowDynData,'QuantifSlowWaveSlowDyn.mat'),'quantif_res')
all_channels_sw = quantif_res.channel_sw; clear quantif_res
%load channels sw
load(fullfile(FolderSlowDynData,'QuantifHypnogramSlowDyn.mat'),'hypno_res')
all_sol = cell2mat(hypno_res.sol); clear hypno_res
all_sol/3600e4;
load(fullfile(FolderSlowDynData,'QuantifSlowWaveSlowDyn.mat'),'quantif_res')
% clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
%load channels sw
load(fullfile(FolderSlowDynData,'QuantifSlowWaveSlowDyn.mat'),'quantif_res')
all_channels_sw = quantif_res.channel_sw;
all_nightDur = cell2mat(quantif_res.night_duration); clear hypno_res
%load channels sw
load(fullfile(FolderSlowDynData,'QuantifHypnogramSlowDyn.mat'),'hypno_res')
all_sol = cell2mat(hypno_res.sol); clear hypno_res
QuantifSlowWaveStartEndSlowDyn
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/Characteristation/
clear
load(fullfile(FolderSlowDynData,'QuantifSlowWaveStartEndSlowDyn.mat'))
%% init
%params
age_range = [20 30 40 50 90];
show_sig = 'sig';
showPoints = 1;
%colors
colori = [distinguishable_colors(length(age_range)-1)];
for i=1:length(age_range)-1
colori_cluster{i} = colori(i,:);
end
%labels
for i=1:length(age_range)-2
labels{i} = [num2str(age_range(i)) '-' num2str(age_range(i+1))];
end
labels{length(age_range)-1} = ['>' num2str(age_range(end-1))];
clear
load(fullfile(FolderSlowDynData,'QuantifSlowWaveStartEndSlowDyn.mat'))
%% init
%params
age_range = [20 30 40 50 90];
show_sig = 'sig';
showPoints = 1;
%colors
colori = [distinguishable_colors(length(age_range)-1)];
for i=1:length(age_range)-1
colori_cluster{i} = colori(i,:);
end
%labels
for i=1:length(age_range)-2
labels{i} = [num2str(age_range(i)) '-' num2str(age_range(i+1))];
end
labels{length(age_range)-1} = ['>' num2str(age_range(end-1))];
%%  pool
%age
all_ages = cell2mat(quantif_res.age);
all_subject = hypno_res.subject;
%start/end
all_start = cell2mat(quantif_res.nb_start);
all_end = cell2mat(quantif_res.nb_end);
%% average per subject
%unique
subject_info = table2cell(unique(table(all_subject', all_ages)));
subject_name = subject_info(:,1);
subject_age  = cell2mat(subject_info(:,2))';
%by subject
sub_start = [];
sub_end   = [];
% data per subject
for s=1:length(subject_name)
idx = strcmpi(all_subject, subject_name{s});
sub_start(s) = mean(all_start(idx));
sub_end(s)   = mean(all_end(idx));
end
clear
load(fullfile(FolderSlowDynData,'QuantifSlowWaveStartEndSlowDyn.mat'))
%% init
%params
age_range = [20 30 40 50 90];
show_sig = 'sig';
showPoints = 1;
%colors
colori = [distinguishable_colors(length(age_range)-1)];
for i=1:length(age_range)-1
colori_cluster{i} = colori(i,:);
end
%labels
for i=1:length(age_range)-2
labels{i} = [num2str(age_range(i)) '-' num2str(age_range(i+1))];
end
labels{length(age_range)-1} = ['>' num2str(age_range(end-1))];
%%  pool
%age
all_ages = cell2mat(quantif_res.age);
all_subject = quantif_res.subject;
%start/end
all_start = cell2mat(quantif_res.nb_start);
all_end = cell2mat(quantif_res.nb_end);
%% average per subject
%unique
subject_info = table2cell(unique(table(all_subject', all_ages)));
subject_name = subject_info(:,1);
subject_age  = cell2mat(subject_info(:,2))';
%by subject
sub_start = [];
sub_end   = [];
% data per subject
for s=1:length(subject_name)
idx = strcmpi(all_subject, subject_name{s});
sub_start(s) = mean(all_start(idx));
sub_end(s)   = mean(all_end(idx));
end
clear
load(fullfile(FolderSlowDynData,'QuantifSlowWaveStartEndSlowDyn.mat'))
%% init
%params
age_range = [20 30 40 50 90];
show_sig = 'sig';
showPoints = 1;
%colors
colori = [distinguishable_colors(length(age_range)-1)];
for i=1:length(age_range)-1
colori_cluster{i} = colori(i,:);
end
%labels
for i=1:length(age_range)-2
labels{i} = [num2str(age_range(i)) '-' num2str(age_range(i+1))];
end
labels{length(age_range)-1} = ['>' num2str(age_range(end-1))];
%%  pool
%age
all_ages = cell2mat(quantif_res.age);
all_subject = quantif_res.subject;
%start/end
all_start = cell2mat(quantif_res.nb_start);
all_end = cell2mat(quantif_res.nb_end);
%% average per subject
%unique
subject_info = table2cell(unique(table(all_subject', all_ages')));
subject_name = subject_info(:,1);
subject_age  = cell2mat(subject_info(:,2))';
%by subject
sub_start = [];
sub_end   = [];
% data per subject
for s=1:length(subject_name)
idx = strcmpi(all_subject, subject_name{s});
sub_start(s) = mean(all_start(idx));
sub_end(s)   = mean(all_end(idx));
end
QuantifSlowWaveStartEndSlowDynPlot
ylim([0 2500])
cd(FolderSlowDynFigures)
edit CreateSleepSignals.m
%-- 09/10/2018 16:49:01 --%
LoadPathMOBs
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
p=90
clearvars -except Dir p quantif_res
disp(' ')
disp('****************************************************************')
disp(Dir.filename{p})
%load slow waves
sw_file = fullfile(FolderSlowDynPreprocess, 'SlowWaves2', ['SlowWaves_' num2str(Dir.filereference{p}) '.mat']);
if exist(sw_file,'file')==2
load(sw_file);
else
[SlowWaveEpochs, ~] = MakeSlowWavesDreemRecord(p,Dir,'savefolder',fullfile(FolderSlowDynPreprocess, 'SlowWaves2'));
end
%% params
params density
windowsize = 60e4; %60s
smoothing = 1;
%params isi
step=100;
edges=0:step:10000;
windowsize = 60e4; %60s
smoothing = 1;
%params isi
step=100;
edges=0:step:10000;
QuantifSlowWaveSlowDyn
% clear
load(fullfile(FolderSlowDyn,'PathSlowDyn2.mat'))
load(fullfile(FolderSlowDynData,'QuantifSlowWaveSlowDyn.mat'), 'quantif_res')
p=90
clearvars -except Dir p quantif_res
disp(' ')
disp('****************************************************************')
disp(Dir.filename{p})
%     %% init
%
%     quantif_res.filename{p} = Dir.filename{p};
%     quantif_res.filereference{p} = Dir.filereference{p};
%     quantif_res.subject{p} = Dir.subject{p};
%     quantif_res.date{p} = Dir.date(p);
%     quantif_res.age{p} = Dir.age{p};
%     quantif_res.gender{p} = Dir.gender{p};
%
%     %load signals and data
%     [signals, ~, stimulations, StageEpochs, labels_eeg] = GetRecordDreem(Dir.filename{p});
%     N1 = StageEpochs{1}; N2 = StageEpochs{2}; N3 = StageEpochs{3};
%
%     %quality - choose a channel
%     try
%         [~, NoiseEpoch, ~] = GetDreemQuality(Dir.filereference{p});
%         duration_noise = [];
%         for i=1:4
%             duration_noise(i,1) = tot_length(NoiseEpoch{i});
%         end
%         [~,idx] = min(duration_noise);
%
%         channel_sw = [1 2 5 6];
%         channel_sw = channel_sw(idx);
%
%     catch
%         channel_sw = 1;
%     end
%     quantif_res.channel_sw{p} = channel_sw;
channel_sw = quantif_res.channel_sw{p};
%load slow waves
sw_file = fullfile(FolderSlowDynPreprocess, 'SlowWaves2', ['SlowWaves_' num2str(Dir.filereference{p}) '.mat']);
if exist(sw_file,'file')==2
load(sw_file);
else
[SlowWaveEpochs, ~] = MakeSlowWavesDreemRecord(p,Dir,'savefolder',fullfile(FolderSlowDynPreprocess, 'SlowWaves2'));
end
%% params
%     params density
windowsize = 60e4; %60s
smoothing = 1;
%params isi
step=100;
edges=0:step:10000;
%     %% night duration and intervals
%     for st=1:length(StageEpochs)
%         try
%             endst(st) = max(End(StageEpochs{st}));
%         catch
%             endst(st) = nan;
%         end
%     end
%     night_duration = max(endst);
%
%     %intervals
%     intervals_start = 0:windowsize:night_duration;
%     x_intervals = (intervals_start + windowsize/2)/(3600E4);
%% slow-waves
%     center_slowwaves = (Start(SlowWaveEpochs{channel_sw}) + End(SlowWaveEpochs{channel_sw})) / 2;
start_slowwaves = Start(SlowWaveEpochs{channel_sw});
%% ISI
[quantif_res.y_isi{p}, quantif_res.x_isi{p}] = histcounts(diff(start_slowwaves/10), edges);
quantif_res.x_isi{p} = quantif_res.x_isi{p}(1:end-1) + diff(quantif_res.x_isi{p});
quantif_res.isi_peak{p} = mode(diff(start_slowwaves/10));
quantif_res.isi_std{p} = std(diff(start_slowwaves/10));
QuantifSlowWaveSlowDyn
QuantifSlowWaveSlowDynPlot2
QuantifSlowWaveSlowDyn
QuantifSlowWaveSlowDynPlot2
edit PlotIDSleepData.m
QuantifSlowWaveSlowDynPlot2
edit PathForExperimentsBasalSleepSpike.m
edit PathForExperimentsSleepRipplesSpikes.m
load('SpikeData.mat', 'tetrodeChannels')
clear
load('SpikeData.mat', 'tetrodeChannels')
load('SpikeData.mat', 'neuronsLayers')
load('SpikeData.mat', 'TT')
load('SpikeData.mat', 'cellnames')
edit LoadPathMOBs.m
TonesAndLfpOnTransitionsPlot
edit PathForExperimentsSleepRipplesSpikes.m
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150401/Breath-Mouse-243-244-01042015/Mouse243
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150401/Breath-Mouse-243-244-01042015/Mouse244/LFPData/InfoLFP.mat')
clear
edit CreateSleepSignals.m
load('DownState.mat')
evt.time=Start(down_PFCx)/1E4;
for i=1:length(evt.time)
evt.description{i}='down_states';
end
CreateEvent(evt, 'down_states', 'dow')
load('SpikeData.mat')
length(Start(down_PFCx))
clear
load('DownState.mat')
evt.time=Start(down_PFCx)/1E4;
for i=1:length(evt.time)
evt.description{i}='down_states';
end
CreateEvent(evt, 'down_states', 'dow')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MethodPaper/
EndDownVertexLFPLayer
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150409/Breath-Mouse-243-244-09042015/Mouse243/ChannelsToAnalyse/PFCx_locations.mat')
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150409/Breath-Mouse-243-244-09042015/Mouse243/LFPData/LFP0.mat')
clear
load(fullfile(FolderDeltaDataKJ,'LFPonDownStatesLayer.mat'));
layer_res.path'
p=4
disp(' ')
disp('****************************************************************')
eval(['cd(layer_res.path{',num2str(p),'}'')'])
disp(pwd)
if exist('ChannelsToAnalyse/PFCx_clusters.mat','file')==2
continue
end
clearvars -except layer_res p
rec_curves = layer_res.down.meandown2{p};
rec_channels = layer_res.channels{p};
clusters = [];
for i=1:length(rec_channels)
x = rec_curves{i}(1,:);
y = rec_curves{i}(2,:);
%% features
%postive deflection
if sum(y(x>0 & x<=150))>0
x1 = x>0 & x<=200;
x2 = x>150 & x<=350;
[feat1, feat3] = max(y(x1));
[feat2, feat4] = min(y(x2));
x1 = x(x1);
x2 = x(x2);
feat3 = x1(feat3);
feat4 = x2(feat4);
%negative deflection
else
x1 = x>0 & x<=250;
x2 = x>200 & x<=350;
[feat1, feat3] = min(y(x1));
[feat2, feat4] = max(y(x2));
x1 = x(x1);
x2 = x(x2);
feat3 = x1(feat3);
feat4 = x2(feat4);
end
%% clusters
xp = feat1;
yp = feat2;
if yp>(0.8*xp-200)
clusters(i) = 1;
elseif yp<=(0.8*xp-200) & yp>(0.8*xp-900)
clusters(i) = 2;
elseif yp<=(0.8*xp-900) & yp>(0.8*xp-1600)
clusters(i) = 3;
elseif yp<=(0.8*xp-1600) & yp>(0.7*xp-2140)
clusters(i) = 4;
elseif yp<=(0.7*xp-2140)
clusters(i) = 5;
end
end
clearvars -except layer_res p
rec_curves = layer_res.down.meandown2{p};
rec_channels = layer_res.channels{p};
clusters = [];
for i=1:length(rec_channels)
x = rec_curves{i}(1,:);
y = rec_curves{i}(2,:);
%% features
%postive deflection
if sum(y(x>0 & x<=150))>0
x1 = x>0 & x<=200;
x2 = x>150 & x<=350;
[feat1, feat3] = max(y(x1));
[feat2, feat4] = min(y(x2));
x1 = x(x1);
x2 = x(x2);
feat3 = x1(feat3);
feat4 = x2(feat4);
%negative deflection
else
x1 = x>0 & x<=250;
x2 = x>200 & x<=350;
[feat1, feat3] = min(y(x1));
[feat2, feat4] = max(y(x2));
x1 = x(x1);
x2 = x(x2);
feat3 = x1(feat3);
feat4 = x2(feat4);
end
%% clusters
xp = feat1;
yp = feat2;
if yp>(0.8*xp-200)
clusters(i) = 1;
elseif yp<=(0.8*xp-200) & yp>(0.8*xp-900)
clusters(i) = 2;
elseif yp<=(0.8*xp-900) & yp>(0.8*xp-1600)
clusters(i) = 3;
elseif yp<=(0.8*xp-1600) & yp>(0.7*xp-2140)
clusters(i) = 4;
elseif yp<=(0.7*xp-2140)
clusters(i) = 5;
end
end
disp(' ')
disp('****************************************************************')
eval(['cd(layer_res.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except layer_res p
rec_curves = layer_res.down.meandown2{p};
rec_channels = layer_res.channels{p};
clusters = [];
i=1
x = rec_curves{i}(1,:);
y = rec_curves{i}(2,:);
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150409/Breath-Mouse-243-244-09042015/Mouse243/ChannelsToAnalyse/PFCx_clusters.mat')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/MethodPaper/
EndDownVertexLFPLayer
LoadPathMOBs
ch=1;
func_slope = @(a) slopeLFPonEpoch(a);
[slopeLfp, peakamp, troughamp] = functionOnEpochs(PFC{ch}, intv_enddown, func_slope);
ch=1;
func_slope = @(a) slopeLFPonEpoch(a,'coucou');
[slopeLfp, peakamp, troughamp] = functionOnEpochs(PFC{ch}, intv_enddown, func_slope);
[slopeLfp, peakamp, troughamp] = functionOnEpochs(PFC{ch}, intv_enddown, func_slope);
min(y_data(x_data>x_center-500, x_data<x_center+500))
x_data>x_center-500, x_data<x_center+500
y_data(x_data>x_center-500, x_data<x_center+500)
[slopeLfp, peakamp, troughamp] = functionOnEpochs(PFC{ch}, intv_enddown, func_slope);
y_data(x_data>x_center-500, x_data<x_center+500)
troughamp = min(y_data(x_data>x_center-500 & x_data<x_center+500));
x_trough = x(y_data==troughamp);
peakamp = max(y_data(x_data>x_trough-800 & x_data<x_trough));
x_peak = x(y_data==peakamp);
slopeLfp = (troughamp - peakamp) / (x_trough - x_peak);
x_trough = x(y_data==troughamp);
y_data==troughamp
find(y_data==troughamp)
troughamp = min(y_data(x_data>x_center-500 & x_data<x_center+500));
x_trough = x_data(find(y_data==troughamp));
peakamp = max(y_data(x_data>x_trough-800 & x_data<x_trough));
x_peak = x_data(y_data==peakamp);
slopeLfp = (troughamp - peakamp) / (x_trough - x_peak);
[slopeLfp, peakamp, troughamp] = functionOnEpochs(PFC{ch}, intv_enddown, func_slope);
y_data(x_data>x_trough-800 & x_data<x_trough)
max(y_data(x_data>x_trough-800 & x_data<x_trough));
[slopeLfp, peakamp, troughamp] = functionOnEpochs(PFC{ch}, intv_enddown, func_slope);
peakamp = max(y_data(x_data>x_trough-800 & x_data<x_trough));
y_data(x_data>x_trough-800 & x_data<x_trough)
x_data>x_trough-800 & x_data<x_trough
x_data>x_trough-800
[slopeLfp, peakamp, troughamp] = functionOnEpochs(PFC{ch}, intv_enddown, func_slope);
hist(slopeLfp)
hist(slopeLfp,100)
EndDownVertexLFPLayer
clear
EndDownVertexLFPLayer
load('ChannelsToAnalyse/PFCx_locations.mat')
hist(slopeLfp{5},100)
figure, hold on
for i=1:length(PFC)
subplot(2,3,i), hold on
hist(slopeLfp{ch},100),
end
figure, hold on
for i=1:length(PFC)
subplot(2,3,i), hold on
hist(slopeLfp{ch},100),
%     xlim()
end
figure, hold on
for i=1:length(PFC)
subplot(2,3,i), hold on
hist(slopeLfp{ch},100),
xlim([-20 5]),
end
figure, hold on
for ch=1:length(PFC)
subplot(2,3,ch), hold on
hist(slopeLfp{ch},100),
xlim([-20 5]),
end
figure, hold on
for ch=1:length(PFC)
subplot(2,3,ch), hold on
hist(slopeLfp{ch},100),
xlim([-40 5]),
end
figure, hold on
for ch=1:length(PFC)
subplot(2,3,ch), hold on
hist(slopeLfp{ch},200),
xlim([-20 5]),
end
%-- 13/11/2018 16:31:31 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
cd(FolderSlowDyn)
ReadSlowdynDatasetOctober
load(fullfile(FolderSlowDyn,'PathSlowDynOctober.mat'))
p=1
Dir.filename{p}
exist(Dir.filename{p},'file')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
%-- 13/11/2018 17:35:19 --%
LoadPathMOBs
ParcoursGenerateSlowWavesSlowDyn
ReadSlowdynDatasetOctober
ParcoursGenerateSlowWavesSlowDyn
%-- 14/11/2018 16:48:32 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 14/11/2018 16:57:14 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 14/11/2018 16:59:02 --%
LoadPathMOBs
edit QuantifSlowWaveSlowDynPlot2.m
QuantifSlowWaveSlowDynPlot2
ParcoursGenerateIDDreemSlowDyn
%-- 14/11/2018 17:01:20 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 14/11/2018 17:19:00 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 14/11/2018 18:59:59 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 14/11/2018 19:02:58 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 14/11/2018 19:15:27 --%
LoadPathMOBs
load(fullfile(FolderSlowDyn,'PathSlowDynOctober.mat'))
length(Dir.filename)
10:1
ParcoursGenerateIDDreemSlowDyn
%-- 14/11/2018 19:17:58 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 14/11/2018 19:20:35 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 15/11/2018 11:24:49 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 15/11/2018 11:44:30 --%
LoadPathMOBs
load(fullfile(FolderSlowDyn,'PathSlowDynOctober.mat'))
ParcoursGenerateIDDreemSlowDyn
%-- 15/11/2018 12:23:14 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 15/11/2018 16:10:56 --%
LoadPathMOBs
edit DreemIDSlowDyn.m
FolderSlowDynRecords
edit FolderSlowDynRecords.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
clear
%params
filename_rec1 = fullfile(FolderSlowDyn,'dataset', 'Slowdyn_dataset_sorted.xlsx');
filename_rec2 = fullfile(FolderSlowDyn,'dataset', 'records_of_users_in_selection_with_date.xlsx');
folder_record = FolderSlowDynRecords;
folder_record = '/media/karim/Elements/Dreem/SlowDyn/Records/';
%% Dataset2
[~,~,raw]  = xlsread(filename_rec2);
ReadSlowdynDatasetSfrms
dir_attr = fieldnames(Dir1);
Dir = FusionListOfDreemRecord(Dir1,Dir2);
dir_attr{i}
Dir1.(dir_attr{i});
Dir2.(dir_attr{i});
ReadSlowdynDatasetSfrms
clear
%params
filename_rec1 = fullfile(FolderSlowDyn,'dataset', 'Slowdyn_dataset_sorted.xlsx');
filename_rec2 = fullfile(FolderSlowDyn,'dataset', 'records_of_users_in_selection_with_date.xlsx');
try
cd(FolderSlowDynRecords)
folder_record = FolderSlowDynRecords;
catch
try
cd('/media/karim/Elements/Dreem/SlowDyn/Records/')
folder_record = '/media/karim/Elements/Dreem/SlowDyn/Records/';
catch
cd('/media/mobsjunior/Elements/Dreem/SlowDyn/Records/')
folder_record = '/media/mobsjunior/Elements/Dreem/SlowDyn/Records/';
end
end
%% Dataset1
[~,~,raw]  = xlsread(filename_rec1);
record_status = [0 ; cell2mat(raw(2:end, 12))];
Dir1.filereference = raw(record_status==1, 3);
Dir1.date = datetime(cell2mat(raw(record_status==1, 4)),'ConvertFrom','posixtime');
Dir1.gender = raw(record_status==1, 7);
Dir1.subject = raw(record_status==1, 8);
Dir1.age = raw(record_status==1, 10);
for i=1:length(Dir1.filereference)
Dir1.filename{i,1}= [folder_record num2str(Dir1.filereference{i}) '.h5'];
end
%% Dataset2
[~,~,raw]  = xlsread(filename_rec2);
record_status = [0 ; cell2mat(raw(2:end, 19))];
Dir2.filereference = raw(record_status==1, 3);
Dir2.date = datetime(cell2mat(raw(record_status==1, 17)),'ConvertFrom','posixtime');
Dir2.gender = raw(record_status==1, 11);
Dir2.subject = raw(record_status==1, 12);
Dir2.age = raw(record_status==1, 14);
for i=1:length(Dir2.filereference)
Dir2.filename{i,1}= [folder_record num2str(Dir2.filereference{i}) '.h5'];
end
%% Merge and clean
Dir = FusionListOfDreemRecord(Dir1,Dir2);
list_record = [];
list_idx = [];
for i=1:length(Dir.filereference)
if ~ismember(Dir.filereference{i},list_record) && exist(Dir2.filename{i},'file')==2
list_record = [list_record ; Dir.filereference{i}];
list_idx = [list_idx ; i];
end
end
ReadSlowdynDatasetSfrms
for i=1:length(Dir.filereference)
if ~ismember(Dir.filereference{i},list_record) && exist(Dir.filename{i},'file')==2
list_record = [list_record ; Dir.filereference{i}];
list_idx = [list_idx ; i];
end
end
%% Merge and clean
Dir = FusionListOfDreemRecord(Dir1,Dir2);
list_record = [];
list_idx = [];
for i=1:length(Dir.filereference)
if ~ismember(Dir.filereference{i},list_record) && exist(Dir.filename{i},'file')==2
list_record = [list_record ; Dir.filereference{i}];
list_idx = [list_idx ; i];
end
end
dir_attr = fieldnames(Dir);
for i=1:length(dir_attr)
Dir.(dir_attr{i}) = Dir.(dir_attr{i})(list_idx);
end
ReadSlowdynDatasetOctober
%% saving data
cd(FolderSlowDyn)
save PathSlowDynSfrms.mat Dir
ReadSlowdynDatasetSfrms
ParcoursGenerateIDDreemSlowDyn
clear
ParcoursGenerateIDDreemSlowDyn
edit ParcoursGenerateSlowWavesSlowDyn.m
ParcoursGenerateIDDreemSlowDyn
ParcoursGenerateIDDreemSlowDyn
%-- 17/11/2018 16:58:30 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 17/11/2018 17:03:27 --%
LoadPathMOBs
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
raw = cell(0)
raw(:,1)=Dir.filereference;
raw(:,2)=Dir.date;
raw(:,3)=Dir.subject;
raw(:,4)=Dir.gender;
raw(:,5)=Dir.age;
a=Dir.date;
a{1}
%-- 17/11/2018 17:40:37 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem
edit LoadPathMOBs
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem
ParcoursGenerateSlowWavesSlowDyn
%-- 17/11/2018 18:02:33 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/
cd /media/mobsjunior/Elements/Dreem/SlowDyn/Records/
x = '*.fig';
x = '*.h5';
filelist = dir(x);
filelist.name;
edit ParcoursGenerateSlowWavesSlowDyn.m
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
good_rec = cell2mat(Dir.filereference);
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
good_rec = cell2mat(Dir.filereference);
x = '*.h5';
filelist = dir(x);
record_list = [];
for i=1:length(filelist)
rec_num = str2num(filelist(i).name(1:end-3));
if ~ismember(rec_num, good_rec)
record_list = [record_list ; rec_num];
end
end
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
good_rec = cell2mat(Dir.filereference);
newFolder = '/media/mobsjunior/Elements/Dreem/SlowDyn/BadRecord/';
x = '*.h5';
filelist = dir(x);
record_list = [];
for i=1:length(filelist)
rec_num = str2num(filelist(i).name(1:end-3));
if ~ismember(rec_num, good_rec)
record_list = [record_list ; rec_num];
filename = [num2str(rec_num) '.h5'];
movefile(filename, newFolder)
end
end
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
good_rec = cell2mat(Dir.filereference);
newFolder = '/media/mobsjunior/Elements/Dreem/SlowDyn/BadRecord/';
x = '*.h5';
filelist = dir(x);
record_list = [];
for i=1:length(filelist)
rec_num = str2num(filelist(i).name(1:end-3));
if ~ismember(rec_num, good_rec)
record_list = [record_list ; rec_num];
%         filename = [num2str(rec_num) '.h5'];
%         movefile(filename, newFolder)
end
end
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils/
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
good_rec = cell2mat(Dir.filereference);
newFolder = '/media/mobsjunior/Elements/Dreem/SlowDyn/BadRecord/quality/';
x = '*.h5';
filelist = dir(x);
record_list = [];
filelist(i).name(1:end-8)
i=10
filelist(i).name(1:end-8)
filelist(i).name(1:end-11)
filename = filelist(i).name;
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
good_rec = cell2mat(Dir.filereference);
newFolder = '/media/mobsjunior/Elements/Dreem/SlowDyn/BadRecord/quality/';
x = '*.h5';
filelist = dir(x);
record_list = [];
for i=1:length(filelist)
filename = filelist(i).name;
rec_num = str2num(filename(1:end-11));
if ~ismember(rec_num, good_rec)
record_list = [record_list ; rec_num];
movefile(filename, newFolder)
end
end
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
good_rec = cell2mat(Dir.filereference);
x = '*.h5';
filelist = dir(x);
record_list = [];
for i=1:length(filelist)
record_list = [record_list ; str2num(filelist(i).name(1:end-11))];
end
missing_rec = [];
for i=1:length(good_rec)
if ~ismember(good_rec(i), record_list)
missing_rec = [missing_rec ; good_rec(i)];
end
end
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem
clear
%% files
folderec = '/home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem/Record';
records = [169015, 169021, 170725,170841, 172127];
filerec = fullfile(folderec, [num2str(records(1)) '.h5']);
filequality = fullfile(folderec, [num2str(records(1)) '_quality.h5']);
sw_data = fullfile(folderec, ['SlowWaves_' num2str(records(1)) '.mat']);
%load
[eeg, accelero, stimulations, StageEpochs, labels_eeg, pulse_oximeter] = GetRecordDreem(filerec);
[stim_tmp, sham_tmp, int_stim, stim_train, sham_train, ~, ~] = SortDreemStimSham(stimulations);
load(sw_data);
%% format data
for i=1:length(SlowWaveEpochs)
start_sw{i} = Start(SlowWaveEpochs{i})';
sw_duration{i} = End(SlowWaveEpochs{i})' - Start(SlowWaveEpochs{i})';
end
%% signals
for ch=1:length(labels_eeg)
signals{ch} = [Range(eeg{ch})'/1E4 ; Data(eeg{ch})'];
end
%% Viewer
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.add_verticals(stim_tmp, ch)
vdr.set_title(labels{ch}, ch);
%epoch
vdr.add_rectangles(start_sw{ch} /1e4, sw_duration{ch}/1e4, ch);
%ylim
vdr.set_ymin(ch, -200); vdr.set_ymax(ch, 200);
end
vdr.set_time_events([stim_tmp/1e4 ; start_sw{1}'/1e4]);
vdr.run_window
%% Viewer
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.add_verticals(stim_tmp, ch)
vdr.set_title(labels{ch}, ch);
%epoch
vdr.add_rectangles(start_sw{ch} /1e4, sw_duration{ch}/1e4, ch);
%ylim
vdr.set_ymin(ch, -200); vdr.set_ymax(ch, 200);
end
vdr.set_time_events([stim_tmp/1e4 ; start_sw{1}'/1e4]);
vdr.run_window
vdr = SignalObserverGUI(signals,'DisplayWindow',[5 5]);
which SignalObserverGUI
which ViewerDreemRecord
LoadPathTPDreem
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
vdr = ViewerDreemRecord(signals);
vdr = ViewerDreemRecord;
TP_Dreem_Espci
filename = filerec
%eeg channels
fileinfo = h5info(filename);
chan = find(contains({fileinfo.Groups.Name}, 'channel'));
for i=1:length(chan)
chgroup = fileinfo.Groups(chan(i)).Name;
EEG{i} = double(h5read(filename,[chgroup '/visualization/']));
try
labels_eeg{i} = h5readatt(filename,chgroup,'location');
catch
labels_eeg{i} = ['CH' chgroup(9:end)];
end
end
x_EEG = (0:(length(EEG{1})-1))' / fs_eeg;
%% params
fs_eeg = 250;
fs_breathing = 50;
fs_accelero = 50;
fs_pulseoxy = 50;
stage_epoch_duration = 30E4;
NameSleepStage = {'N1','N2','N3','REM','Wake','Unknown'};
stage_ind = 1:5;
delay_stim = 0.312; %312ms
%% load
%eeg channels
fileinfo = h5info(filename);
chan = find(contains({fileinfo.Groups.Name}, 'channel'));
for i=1:length(chan)
chgroup = fileinfo.Groups(chan(i)).Name;
EEG{i} = double(h5read(filename,[chgroup '/visualization/']));
try
labels_eeg{i} = h5readatt(filename,chgroup,'location');
catch
labels_eeg{i} = ['CH' chgroup(9:end)];
end
end
%accelero
Accelero = double(h5read(filename,'/accelerometer/norm/'));
%breathing
respi.x =  double(h5read(filename,'/accelerometer/respiration_x/'));
respi.y =  double(h5read(filename,'/accelerometer/respiration_y/'));
respi.z =  double(h5read(filename,'/accelerometer/respiration_z/'));
%pulse oxymeter
PulseOxi =  double(h5read(filename,'/pulse_oximeter/infrared_filtered/'));
%stim
stimulations = double(h5read(filename,'/stimulations/stimulations/'));
stimulations_int =  double(h5read(filename,'/stimulations/stimulations_intensity/'));
%hypnograms
try
Hypnogram = double(h5read(filename,'/reporting/hypnograms/'));
catch
try
Hypnogram = double(h5read(filename,'/algo/dreemnogram/'));
catch
try
Hypnogram = double(h5read(filename,'/reporting/dreemnogram/'));
catch
Hypnogram = [];
end
end
end
%% times
x_EEG = (0:(length(EEG{1})-1))' / fs_eeg;
x_accelero = (0:(length(Accelero)-1))' / fs_accelero;
x_breathing = (0:(length(respi.x)-1))' / fs_breathing;
x_pulseoxi = (0:(length(PulseOxi)-1))' / fs_pulseoxy;
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils/
cd /home/mobsjunior/Dropbox/DataKJ/Dreem/SlowDyn/IDdata/
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
good_rec = cell2mat(Dir.filereference);
newFolder = '/home/mobsjunior/Dropbox/DataKJ/Dreem/SlowDyn/Old/iddata/';
x = '*.mat';
filelist = dir(x);
i=10
filelist(i).name(1:end-4)
filelist(i).name(10:end-4)
filelist(i).name(14:end-4)
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
good_rec = cell2mat(Dir.filereference);
newFolder = '/home/mobsjunior/Dropbox/DataKJ/Dreem/SlowDyn/Old/iddata/';
x = '*.mat';
filelist = dir(x);
record_list = [];
for i=1:length(filelist)
rec_num = str2num(filelist(i).name(14:end-4));
if ~ismember(rec_num, good_rec)
record_list = [record_list ; rec_num];
filename = ['IdFigureData_' num2str(rec_num) '.mat'];
movefile(filename, newFolder)
end
end
edit ParcoursGenerateIDDreemSlowDyn
ParcoursGenerateIDDreemSlowDyn
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils/
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
for p=1:length(Dir.filereference)
if exist(fullfile(FolderSlowDynID,['IdFigureData_' num2str(Dir.filereference{p}) '.mat']),'file')~=2
%         if exist(Dir.filename{p},'file')~=2
disp(p)
%         end
end
end
for p=1:length(Dir.filereference)
if exist(fullfile(FolderSlowDynID,['IdFigureData_' num2str(Dir.filereference{p}) '.mat']),'file')~=2
%         if exist(Dir.filename{p},'file')~=2
disp(p)
%         end
end
end
d = dir(pwd);
isub = [d(:).isdir];
nameFolds = {d(isub).name}';
d = dir(pwd);
isub = [d(:).isdir];
nameFolds = {d(isub).name}';
nameFolds = nameFolds(3:end);
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
good_rec = cell2mat(Dir.filereference);
newFolder = '/media/mobsjunior/Elements/Dreem/SlowDyn/Preprocess/Spectrograms/';
d = dir(pwd);
isub = [d(:).isdir];
nameFolds = {d(isub).name}';
nameFolds = nameFolds(3:end);
record_list = [];
for i=1:length(filelist)
rec_num = str2num(nameFolds{i});
if ~ismember(rec_num, good_rec)
record_list = [record_list ; rec_num];
movefile(nameFolds{i}, newFolder)
end
end
record_list = [];
for i=1:length(nameFolds)
rec_num = str2num(nameFolds{i});
if ~ismember(rec_num, good_rec)
record_list = [record_list ; rec_num];
movefile(nameFolds{i}, newFolder)
end
end
ParcoursGenerateIDDreemSlowDyn
end
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
for p=1:length(Dir.filereference)
if exist(fullfile(FolderSlowDynID,['IdFigureData_' num2str(Dir.filereference{p}) '.mat']),'file')~=2
%         if exist(Dir.filename{p},'file')~=2
disp(p)
%         end
end
end
%-- 18/11/2018 17:16:50 --%
LoadPathMOBs
edit ParcoursGenerateIDDreemSlowDyn
cd(FolderSlowDynFigures)
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 17:19:23 --%
LoadPathMOBs
edit ParcoursGenerateIDDreemSlowDyn
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
for p=1:length(Dir.filereference)
datafile = fullfile(FolderSlowDynID,['IdFigureData_' num2str(Dir.filereference{p}) '.mat']);
load(datafile, infos);
infos.subject = Dir.subject{p};
save(savefile,'-append', 'infos')
end
load(datafile, infos);
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
for p=1:length(Dir.filereference)
datafile = fullfile(FolderSlowDynID,['IdFigureData_' num2str(Dir.filereference{p}) '.mat']);
load(datafile, 'infos');
infos.subject = Dir.subject{p};
save(savefile,'-append', 'infos')
end
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
for p=1:length(Dir.filereference)
datafile = fullfile(FolderSlowDynID,['IdFigureData_' num2str(Dir.filereference{p}) '.mat']);
load(datafile, 'infos');
infos.subject = Dir.subject{p};
save(datafile,'-append', 'infos')
end
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:07:22 --%
LoadPathMOBs
edit ParcoursGenerateIDDreemSlowDyn
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:09:46 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:10:07 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:18:36 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:18:34 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:20:27 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:20:53 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:21:37 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:25:14 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:26:01 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:30:42 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:32:45 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:35:41 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:43:10 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:43:30 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:45:43 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:46:19 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:47:20 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:49:56 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:50:16 --%
LoadPathMOBs
%-- 18/11/2018 18:51:03 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:53:53 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:55:17 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 18:57:58 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 18/11/2018 19:07:48 --%
LoadPathMOBs
ParcoursGenerateIDDreemSlowDyn
%-- 19/11/2018 14:12:00 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/DataKJ/Dreem/SlowDyn/Figures/IDfigures1/
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils/
edit utils_ID_figure.m
edit FolderSlowDynRecords.m
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
for p=1:length(Dir.filereference)
%% plot
%title
filename_png = ['IDfigures_' num2str(Dir.filereference{p})  '.png'];
filename_png = fullfile(FolderSlowDynFigures, 'IDfigures1',filename_png);
if exist(filename_png,'file')~=2
disp(' ')
disp('****************************************************************')
disp(Dir.filename{p})
end
end
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
FolderSlowDynRecords
cd(FolderSlowDynRecords)
ReadSlowdynDatasetSfrms
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
dir_attr = fieldnames(Dir);
k=0;
for p=1:length(Dir.filereference)
if exist(filename_png,'file')~=2
k=k+1;
for i=1:length(dir_attr)
newDir.(dir_attr{i}){k} = Dir.(dir_attr{i}){p};
end
end
end
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
dir_attr = fieldnames(Dir);
k=0;
for p=1:length(Dir.filereference)
if exist(Dir.filename{p},'file')~=2
k=k+1;
for i=1:length(dir_attr)
newDir.(dir_attr{i}){k} = Dir.(dir_attr{i}){p};
end
end
end
newDir
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
dir_attr = fieldnames(Dir);
Dir2 = cell(0=;
k=0;
for p=1:length(Dir.filereference)
if exist(Dir.filename{p},'file')~=2
k=k+1;
for i=1:length(dir_attr)
Dir2.(dir_attr{i}){k} = Dir.(dir_attr{i}){p};
end
end
end
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
dir_attr = fieldnames(Dir);
Dir2 = cell(0);
k=0;
for p=1:length(Dir.filereference)
if exist(Dir.filename{p},'file')==2
k=k+1;
for i=1:length(dir_attr)
Dir2.(dir_attr{i}){k} = Dir.(dir_attr{i}){p};
end
end
end
(dir_attr{i})
Dir.(dir_attr{i}){p}
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
list_path = [];
for p=1:length(Dir.filereference)
if exist(Dir.filename{p},'file')==2
list_path = [list_path ; p];
end
end
dir_attr = fieldnames(Dir);
for i=1:length(dir_attr)
newDir.(dir_attr{i}) = Dir.(dir_attr{i})(list_path);
end
Dir= newDir;
cd(FolderSlowDyn)
save PathSlowDynSfrms.mat Dir
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
good_rec = cell2mat(Dir.filereference);
x = '*.png';
filelist = dir(x);
record_list = [];
i=10
str2num(filelist(i).name(14:end-3))
filelist(i).name
str2num(filelist(i).name(11:end-3))
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
good_rec = cell2mat(Dir.filereference);
x = '*.png';
filelist = dir(x);
record_list = [];
for i=1:length(filelist)
rec_num = str2num(filelist(i).name(11:end-3));
if ~ismember(rec_num, good_rec)
disp(filelist(i).name)
end
end
FolderSlowDyn
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
clear
%status
filestatus = fullfile(FolderSlowDyn,'dataset','RecordSFRMS.mat');
[~,~,raw]  = xlsread(filestatus);
clear
%status
filestatus = fullfile(FolderSlowDyn,'dataset','RecordSFRMS.xlsx');
[~,~,raw]  = xlsread(filestatus);
good_rec = cell2mat((raw(2:end,:)));
good_status = [0 ; cell2mat((raw(2:end,7))==1);
good_status = [0 ; cell2mat((raw(2:end,7))==1)];
good_status = [0 ; cell2mat(raw(2:end,7))==1];
good_rec = cell2mat((raw(good_status,1)));
raw(good_status==1,1);
clear
%status
filestatus = fullfile(FolderSlowDyn,'dataset','RecordSFRMS.xlsx');
[~,~,raw]  = xlsread(filestatus);
good_status = [0 ; cell2mat(raw(2:end,7))==1];
good_rec = cell2mat(raw(good_status==1,1));
clear
%status
filestatus = fullfile(FolderSlowDyn,'dataset','RecordSFRMS.xlsx');
[~,~,raw]  = xlsread(filestatus);
good_status = [0 ; cell2mat(raw(2:end,7))==1];
good_rec = cell2mat(raw(good_status==1,1));
%all record
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
all_rec = Dir.filereference;
list_idx = ismember(all_rec,good_rec);
dir_attr = fieldnames(Dir);
for i=1:length(dir_attr)
newDir.(dir_attr{i}) = Dir.(dir_attr{i})(list_idx);
end
clear
%status
filestatus = fullfile(FolderSlowDyn,'dataset','RecordSFRMS.xlsx');
[~,~,raw]  = xlsread(filestatus);
good_status = [0 ; cell2mat(raw(2:end,7))==1];
good_rec = cell2mat(raw(good_status==1,1));
%all record
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
all_rec = Dir.filereference;
list_idx = ismember(all_rec,good_rec);
clear
%status
filestatus = fullfile(FolderSlowDyn,'dataset','RecordSFRMS.xlsx');
[~,~,raw]  = xlsread(filestatus);
good_status = [0 ; cell2mat(raw(2:end,7))==1];
good_rec = cell2mat(raw(good_status==1,1));
%all record
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
all_rec = cell2mat(Dir.filereference);
list_idx = ismember(all_rec,good_rec);
dir_attr = fieldnames(Dir);
for i=1:length(dir_attr)
newDir.(dir_attr{i}) = Dir.(dir_attr{i})(list_idx);
end
%% SlowDyn move records
clear
%status
filestatus = fullfile(FolderSlowDyn,'dataset','RecordSFRMS.xlsx');
[~,~,raw]  = xlsread(filestatus);
good_status = [0 ; cell2mat(raw(2:end,7))==1];
good_rec = cell2mat(raw(good_status==1,1));
%all record
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
all_rec = cell2mat(Dir.filereference);
list_idx = ismember(all_rec,good_rec);
dir_attr = fieldnames(Dir);
for i=1:length(dir_attr)
newDir.(dir_attr{i}) = Dir.(dir_attr{i})(list_idx);
end
cd(FolderSlowDyn)
save PathSlowDynSfrms.mat Dir
Dir=newDir;
cd(FolderSlowDyn)
save PathSlowDynSfrms.mat Dir
clear
Dir.filename{1};
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
Dir.filename{1};
Dir.filename{1}
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
HistogramDatasetSlowdyn
QuantifHypnogramSlowDyn
ParcoursMotherCurvesSlowDyn
QuantifSlowWaveSlowDyn
clear
clc
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
MeanSlowWaveDetected
%% plot observer
labels = labels_eeg([1 2 5 6]);
sog = SignalObserverGUI(signals,'DisplayWindow',[5 5]);
for ch=1:sog.nb_channel
sog.add_verticals(stim_tmp, ch)
sog.set_title(labels{ch}, ch);
%epoch
%     sog.add_rectangles(start_sw{ch} /1e4, sw_duration{ch}/1e4, ch);
sog.add_rectangles(start_spi{ch} /1e4, spi_duration{ch}/1e4, ch);
end
sog.set_time_events(start_spi{1}'/1e4);
sog.set_ymin(1, -200); sog.set_ymax(1, 200);
sog.set_ymin(2, -200); sog.set_ymax(2, 200);
sog.set_ymin(3, -200); sog.set_ymax(3, 200);
sog.set_ymin(4, -200); sog.set_ymax(4, 200);
sog.run_window
clear
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
%% load
p=451;
[eeg, accelero, stimulations, StageEpochs, labels_eeg, pulse_oximeter] = GetRecordDreem(Dir.filename{p});
%quality
% [~, NoiseEpoch] = GetDreemQuality(Dir.filereference{p});
%stimulation
[stim_tmp, sham_tmp, int_stim, stim_train, sham_train, ~, ~] = SortDreemStimSham(stimulations);
%slow waves
eeg_occipital = eeg([1 2 5 6]);
sw_file = fullfile(FolderSlowDynPreprocess, 'SlowWaves', ['SlowWaves_' num2str(Dir.filereference{p}) '.mat']);
load(sw_file);
SlowWaveEpochs = SlowWaveEpochs([1 2 5 6]);
for i=1:length(SlowWaveEpochs)
start_sw{i} = Start(SlowWaveEpochs{i})';
sw_duration{i} = End(SlowWaveEpochs{i})' - Start(SlowWaveEpochs{i})';
end
%spindles
for i=1:length(eeg)
SpindlesEpoch{i} = DetectSpindles_Mensen(eeg{i});
start_spi{i} = Start(SpindlesEpoch{i})';
spi_duration{i} = End(SpindlesEpoch{i})' - Start(SpindlesEpoch{i})';
end
%% signals
signals{1} = [Range(eeg{1})'/1E4 ; Data(eeg{1})'];
signals{2} = [Range(eeg{2})'/1E4  ; Data(eeg{2})'];
signals{3} = [Range(eeg{3})'/1E4  ; Data(eeg{3})'];
signals{4} = [Range(eeg{4})'/1E4  ; Data(eeg{4})'];
signals{5} = [Range(eeg{5})'/1E4  ; Data(eeg{5})'];
signals{6} = [Range(eeg{6})'/1E4  ; Data(eeg{6})'];
%% plot observer
labels = labels_eeg(1:6);
sog = SignalObserverGUI(signals,'DisplayWindow',[5 5]);
for ch=1:sog.nb_channel
sog.add_verticals(stim_tmp, ch)
sog.set_title(labels{ch}, ch);
sog.set_ymin(ch, -200); sog.set_ymax(ch, 200);
%epoch
%     sog.add_rectangles(start_sw{ch} /1e4, sw_duration{ch}/1e4, ch);
sog.add_rectangles(start_spi{ch} /1e4, spi_duration{ch}/1e4, ch);
end
sog.set_time_events(start_spi{1}'/1e4);
sog.run_window
FindSpindlesDreem
DataSlowDynObserver
edit FindRipplesKarimSB.m
edit FindRipples_DB.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/Detectors/
%-- 20/11/2018 13:42:47 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
PlotOneMotherCurve
edit CleanUpEpoch.m
edit FindRipplesKJ.m
DataSlowDynObserver
[~, NoiseEpoch] = GetDreemQuality(Dir.filereference{p});
FolderSlowDynRecords
%spindles
for i=1:length(eeg)
SpindlesEpoch{i} = FindSpindlesDreem(eeg{i},'method','karimjr','params',{'',NoiseEpoch});
start_spi{i} = Start(SpindlesEpoch{i})';
spi_duration{i} = End(SpindlesEpoch{i})' - Start(SpindlesEpoch{i})';
end
params.noise_epoch = NoiseEpoch;
for i=1:length(eeg)
SpindlesEpoch{i} = FindSpindlesDreem(eeg{i},'method','karimjr','params',params);
start_spi{i} = Start(SpindlesEpoch{i})';
spi_duration{i} = End(SpindlesEpoch{i})' - Start(SpindlesEpoch{i})';
end
%spindles
for i=1:length(eeg)
params.noise_epoch = NoiseEpoch{i};
SpindlesEpoch{i} = FindSpindlesDreem(eeg{i},'method','karimjr','params',params);
start_spi{i} = Start(SpindlesEpoch{i})';
spi_duration{i} = End(SpindlesEpoch{i})' - Start(SpindlesEpoch{i})';
end
for i=1:length(eeg)
params.noise_epoch = NoiseEpoch{i};
SpindlesEpoch{i} = FindSpindlesDreem(eeg{i},'method','karimjr','params',params);
start_spi{i} = Start(SpindlesEpoch{i})';
spi_duration{i} = End(SpindlesEpoch{i})' - Start(SpindlesEpoch{i})';
end
NoiseEpoch{5} = NoiseEpoch{1};
NoiseEpoch{6} = NoiseEpoch{2};
%spindles
for i=5:length(eeg)
params.noise_epoch = NoiseEpoch{i};
SpindlesEpoch{i} = FindSpindlesDreem(eeg{i},'method','karimjr','params',params);
start_spi{i} = Start(SpindlesEpoch{i})';
spi_duration{i} = End(SpindlesEpoch{i})' - Start(SpindlesEpoch{i})';
end
eeg = eeg(1:6);
%% signals
signals{1} = [Range(eeg{1})'/1E4 ; Data(eeg{1})'];
signals{2} = [Range(eeg{2})'/1E4  ; Data(eeg{2})'];
signals{3} = [Range(eeg{3})'/1E4  ; Data(eeg{3})'];
signals{4} = [Range(eeg{4})'/1E4  ; Data(eeg{4})'];
signals{5} = [Range(eeg{5})'/1E4  ; Data(eeg{5})'];
signals{6} = [Range(eeg{6})'/1E4  ; Data(eeg{6})'];
%% plot observer
labels = labels_eeg(1:6);
sog = SignalObserverGUI(signals,'DisplayWindow',[5 5]);
for ch=1:sog.nb_channel
sog.add_verticals(stim_tmp, ch)
sog.set_title(labels{ch}, ch);
sog.set_ymin(ch, -200); sog.set_ymax(ch, 200);
%epoch
%     sog.add_rectangles(start_sw{ch} /1e4, sw_duration{ch}/1e4, ch);
sog.add_rectangles(start_spi{ch} /1e4, spi_duration{ch}/1e4, ch);
end
sog.set_time_events(start_spi{1}'/1e4);
sog.run_window
edit DetectSlowWaves_KJ.m
DataSlowDynObserver
edit DetectSlowWaves_KJ.m
edit MakeSpindlesDreemRecord.m
FolderSlowDynPreprocess
FolderSlowDyn
clear
try
cd(FolderSlowDynRecords)
folder_record = FolderSlowDynRecords;
catch
try
cd('/media/karim/Elements/Dreem/SlowDyn/Records/')
folder_record = '/media/karim/Elements/Dreem/SlowDyn/Records/';
catch
try
cd('/media/mobsjunior/Elements/Dreem/SlowDyn/Records/')
folder_record = '/media/mobsjunior/Elements/Dreem/SlowDyn/Records/';
catch
cd('/media/mobsjunior/Data2/Dreem/Slowdyn/Records/')
folder_record = '/media/mobsjunior/Data2/Dreem/Slowdyn/Records/';
end
end
end
load(fullfile(FolderSlowDyn,'PathSlowDynSfrms.mat'))
for p=1:length(Dir.filereference)
Dir.filename{p} = fullfile(folder_record,[num2str(Dir.filereference{p}) '.h5']);
end
%% saving data
cd(FolderSlowDyn)
save PathSlowDynSfrms.mat Dir
HistogramDatasetSlowdyn
p=100;
[signals, ~, ~, StageEpochs, labels] = GetRecordDreem(Dir.filename{p});
sw_file = fullfile(FolderSlowDynPreprocess, 'SlowWaves', ['SlowWaves_' num2str(Dir.filereference{p}) '.mat'])
exist(sw_file,'file')
FolderSlowDynPreprocess
edit FolderSlowDynPreprocess
sw_file = fullfile(FolderSlowDynPreprocess, 'SlowWaves', ['SlowWaves_' num2str(Dir.filereference{p}) '.mat'])
exist(sw_file,'file')
load(sw_file)
clear
clc
ParcoursGenerateSpindlesSlowDyn
thresh = 0.7; %70%
fs_eeg    = 250; %250Hz
mergeTh   = 5e4; %5sec
filename = fullfile(folderdata,'quality',[num2str(filereference) '_quality.h5']);
if exist(filename, 'file') == 2
try
qualities = double(h5read(filename,['/quality/']));
end
for i=1:4
channel_quality{i} = qualities(i,:)';
end
else
disp(['File ' filename ' does not exist'])
end
folderdata = FolderSlowDynRecords;
folderdata
clear
clc
ParcoursGenerateSpindlesSlowDyn
clear
%-- 20/11/2018 15:53:32 --%
LoadPathMOBs
ParcoursGenerateSpindlesSlowDyn
ParcoursGenerateSpindlesSlowDyn
ParcoursGenerateSpindlesSlowDyn
clear
clc
clear
clc
clear
clc
ParcoursGenerateSpindlesSlowDyn
%-- 26/11/2018 10:08:09 --%
LoadPathMOBs
edit FolderSlowDynPreprocess
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem
%-- 26/11/2018 15:33:34 --%
LoadPathTPDreem
TP_Dreem_Espci
%-- 27/11/2018 12:01:23 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem
TP_Dreem_Espci
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
clear
cl
edit MakeSlowWavesDreemRecord.m
edit MakeSpindlesDreemRecord.m
clear
%% files
folderTP = fullfile(FolderDropBox, 'Dropbox/Mobs_member/KarimJr/TP_Dreem');
folderec = fullfile(folderTP, 'Record');
records = [169015, 169021, 170725, 172127, 615580, 617212, 619421, 619762];
records_channel = [1, 1, 1, 2, 1, 2, 1, 1];
p=1
channel_good = records_channel(p);
current_folder = fullfile(folderec, num2str(records(p)));
filerec = fullfile(current_folder, [num2str(records(p)) '.h5']);
filequality = fullfile(current_folder, [num2str(records(p)) '_quality.h5']);
%% Get quality
thresh = 0.7; %70%
fs_eeg    = 250; %250Hz
mergeTh   = 5e4; %5sec
if exist(filequality, 'file') == 2
qualities = double(h5read(filequality,['/quality/']));
for i=1:6
channel_quality{i} = qualities(i,:)';
end
else
disp(['File ' filequality ' does not exist'])
end
%tsd
x_quality = (0:(length(channel_quality{1})-1))' / fs_eeg;
for ch=1:length(channel_quality)
tquality{ch} = tsd(x_quality*1E4, channel_quality{ch});
end
%epochs
TotalNoise = intervalSet([],[]);
for ch=1:length(tquality)
intv = thresholdIntervals(tquality{ch}, thresh,'Direction','Below');
NoiseEpoch{ch} = mergeCloseIntervals(intv, mergeTh);
end
%% load
[eeg, ~, breathing, pulse_oximeter, StageEpochs, Hypnogram, stimulations, ~, labels_eeg] = GetRecordDreemTP(filerec);
breathing(:,2) = breathing(:,2) * 1000;
LoadPathTPDreem
%% load
[eeg, ~, breathing, pulse_oximeter, StageEpochs, Hypnogram, stimulations, ~, labels_eeg] = GetRecordDreemTP(filerec);
breathing(:,2) = breathing(:,2) * 1000;
eeg = eeg([1 2 5 6]);
labels_eeg = labels_eeg([1 2 5 6]);
NREM = or(or(StageEpochs{2}, StageEpochs{3}), StageEpochs{1});
tEEG = tsd(eeg{channel_good}(:,1), eeg{channel_good}(:,2));
spectro_file = fullfile(current_folder, ['Spectro_' num2str(records(p)) '.mat']);
spectro_file
exist(spectro_file,'file')~=2
%% spectro
spectro_file = fullfile(current_folder, ['Spectro_' num2str(records(p)) '.mat']);
if exist(spectro_file,'file')~=2
%params
params.fpass  = [0.4 40];
params.tapers = [3 5];
movingwin     = [3 0.2];
params.Fs     = 250;
[Sp,t,f] = mtspecgramc(eeg{channel_good}(:,2), movingwin, params);
Spectro  = {Sp,t,f};
label=labels_eeg{channel_good}; channel=num2str(channel_good);
save(spectro_file,'Spectro','label','params','movingwin', 'channel', '-v7.3')
end
%% slow waves
sw_file = fullfile(current_folder, ['SlowWaves_' num2str(records(p)) '.mat']);
if exist(sw_file,'file')==2
load(sw_file);
else
SlowWaveEpochs= and(FindSlowWaves(tEEG), NREM);
save(sw_file,'SlowWaveEpochs')
end
slowwaves_start = Start(SlowWaveEpochs);
slowwaves_duration = End(SlowWaveEpochs) - Start(SlowWaveEpochs);
SlowWaveEpochs= and(FindSlowWaves(tEEG), NREM);
min(Data(EEG))
max(Data(EEG))
tot_length(Predetect)
tEEG = tsd(eeg{channel_good}(:,1)*1e4, eeg{channel_good}(:,2));
%% slow waves
sw_file = fullfile(current_folder, ['SlowWaves_' num2str(records(p)) '.mat']);
if exist(sw_file,'file')==2
load(sw_file);
else
SlowWaveEpochs= and(FindSlowWaves(tEEG), NREM);
save(sw_file,'SlowWaveEpochs')
end
slowwaves_start = Start(SlowWaveEpochs);
slowwaves_duration = End(SlowWaveEpochs) - Start(SlowWaveEpochs);
%% spindles
spi_file = fullfile(current_folder, ['Spindles_' num2str(records(p)) '.mat']);
if exist(spi_file,'file')==2
load(spi_file);
else
params.noise_epoch = NoiseEpoch{channel_good};
SpindlesEpoch = and(FindSpindlesDreem(tEEG,'method','mensen','params',params), NREM);
save(spi_file,'SpindlesEpoch')
end
spindles_start = Start(SpindlesEpoch);
spindles_duration = End(SpindlesEpoch) - Start(SpindlesEpoch);
%% spindles
spi_file = fullfile(current_folder, ['Spindles_' num2str(records(p)) '.mat']);
if exist(spi_file,'file')==2
load(spi_file);
else
params_spi.noise_epoch = NoiseEpoch{channel_good};
SpindlesEpoch = and(FindSpindlesDreem(tEEG,'method','mensen','params',params_spi), NREM);
save(spi_file,'SpindlesEpoch')
end
spindles_start = Start(SpindlesEpoch);
spindles_duration = End(SpindlesEpoch) - Start(SpindlesEpoch);
%% Get Hypnograms
Hypnogram(Hypnogram==0) = 5; %wake
Hypnogram(:,3) = Hypnogram(:,1);
Hypnogram(:,1) = (0:size(Hypnogram,1)-1)*30;
Hypnogram(:,2) = (1:size(Hypnogram,1))*30;
%stage epoch
SleepStage = [];
st_epoch = 0;
for i=2:size(Hypnogram,1)
if Hypnogram(i,3)~=Hypnogram(i-1,3)
newStage = [st_epoch Hypnogram(i-1,2) Hypnogram(i-1,3)];
SleepStage = [SleepStage ; newStage];
st_epoch = Hypnogram(i,1);
end
end
%save in xls
filexlsx = fullfile(folderTP, 'TP_records', num2str(records(p)), [num2str(records(p)) '_hypnogram.xlsx']);
xlswrite(filexlsx,Hypnogram)
filexlsx = fullfile(folderTP, 'TP_records', num2str(records(p)), [num2str(records(p)) '_sleepstage.xlsx']);
xlswrite(filexlsx,SleepStage)
mkdir(fullfile(folderTP, 'TP_records', num2str(records(p))));
%save in xls
filexlsx = fullfile(folderTP, 'TP_records', num2str(records(p)), [num2str(records(p)) '_hypnogram.xlsx']);
xlswrite(filexlsx,Hypnogram)
filexlsx = fullfile(folderTP, 'TP_records', num2str(records(p)), [num2str(records(p)) '_sleepstage.xlsx']);
xlswrite(filexlsx,SleepStage)
%% Process Hypnogram
% load
N1=StageEpochs{1};
N2=StageEpochs{2};
N3=StageEpochs{3};
REM=StageEpochs{4};
WAKE=StageEpochs{5};
% Sleep Stages
Rec=or(or(or(N1,or(N2,N3)),REM),WAKE);
Epochs={N1,N2,N3,REM,WAKE};
num_substage=[2 1.5 1 3 4]; %ordinate in graph
indtime=min(Start(Rec)):1E4:max(Stop(Rec));
timeTsd=tsd(indtime,zeros(length(indtime),1));
SleepStages=zeros(1,length(Range(timeTsd)))+4.5;
rg=Range(timeTsd);
sample_size = median(diff(rg))/10; %in ms
time_stages = zeros(1,5);
meanDuration_sleepstages = zeros(1,5);
for ep=1:length(Epochs)
idx=find(ismember(rg,Range(Restrict(timeTsd,Epochs{ep})))==1);
SleepStages(idx)=num_substage(ep);
time_stages(ep) = length(idx) * sample_size;
meanDuration_sleepstages(ep) = mean(diff([0;find(diff(idx)~=1);length(idx)])) * sample_size;
end
SleepStages=tsd(rg,SleepStages');
percentvalues_NREM = zeros(1,3);
for ep=1:3
percentvalues_NREM(ep) = time_stages(ep)/sum(time_stages(1:3));
end
percentvalues_NREM = round(percentvalues_NREM*100,2);
record_name = fullfile(folderTP, 'TP_records', num2str(records(p)), [num2str(records(p)) '_signals.mat']);
hypno_name = fullfile(folderTP, 'TP_records', num2str(records(p)), [num2str(records(p)) '_hypno.mat']);
id_name = fullfile(folderTP, 'TP_records', num2str(records(p)), [num2str(records(p)) '_id.mat']);
save(record_name, '-v7.3', 'eeg', 'labels_eeg', 'breathing', 'pulse_oximeter', 'stimulations')
save(record_name, '-append', 'slowwaves_start', 'slowwaves_duration', 'spindles_start', 'spindles_duration');
save(hypno_name, 'Hypnogram', 'SleepStage')
%params
windowsize = 60e4; %60s
step=100; %isi
edges=0:step:10000;
night_duration = max(range(tEEG));
%intervals
intervals_start = 0:windowsize:night_duration;
x_intervals = (intervals_start + windowsize/2)/(3600E4);
%Slow Wave density
center_slowwaves = Start(SlowWaveEpochs);
slowwaves_density = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
slowwaves_density(t) = length(Restrict(ts(center_slowwaves),intv)); %per min
end
slowwaves_density_t = x_intervals;
slowwaves_density_y = slowwaves_density;
%ISI
[isi_sw_y, isi_sw_x] = histcounts(diff(center_slowwaves/10), edges);
isi_sw_x = isi_sw_x(1:end-1) + diff(isi_sw_x);
night_duration = max(Range(tEEG));
%intervals
intervals_start = 0:windowsize:night_duration;
x_intervals = (intervals_start + windowsize/2)/(3600E4);
%Slow Wave density
center_slowwaves = Start(SlowWaveEpochs);
slowwaves_density = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
slowwaves_density(t) = length(Restrict(ts(center_slowwaves),intv)); %per min
end
slowwaves_density_t = x_intervals;
slowwaves_density_y = slowwaves_density;
%ISI
[isi_sw_y, isi_sw_x] = histcounts(diff(center_slowwaves/10), edges);
isi_sw_x = isi_sw_x(1:end-1) + diff(isi_sw_x);
ProcessData_DreemTP
test_name = fullfile(folderTP, 'TP_records', num2str(records(p)),[num2str(records(p)) '_signals.mat']);
exist(test_name,'file')~=2
exist(test_name,'file')==2
ProcessData_DreemTP
clear
ProcessData_DreemTP
clear
%% files
folderec = fullfile(FolderDropBox, 'Dropbox/Mobs_member/KarimJr/TP_Dreem/TP_records');
records = [169015, 169021, 170725, 172127, 615580, 617212, 619421, 619762];
records_channel = [1, 1, 1, 2, 1, 2, 1, 1];
i=1;
filerec = fullfile(folderec, num2str(records(i)), [num2str(records(i)) '_signals.mat']);
filehypno = fullfile(folderec, num2str(records(i)), [num2str(records(i)) '_hypno.mat']);
load(filerec);
%% signals
signals{1} = [eeg{1}(:,1)' ; eeg{1}(:,2)'];
signals{2} = [eeg{2}(:,1)' ; eeg{2}(:,2)'];
signals{3} = [pulse_oximeter(:,1)' ; pulse_oximeter(:,2)'];
signals{4} = [breathing(:,1)' ; breathing(:,2)'];
TP_Dreem_Espci
vdr.set_time_events(stimulations);
vdr.run_window
idx = find(SleepStage(:,3)~=5 & SleepStage(:,2)-SleepStage(:,1)>=60,1);
sol = SleepStage(idx,1);
idx = find(SleepStage(:,3)==5 & SleepStage(:,1)>=sol);
size(SleepStage,1)
idx = find(SleepStage(:,3)==5 & SleepStage(:,1)>=sol);
idx(idx==size(SleepStage,1))=[];
waso = sum(SleepStage(idx,2) - SleepStage(idx,1));
unique(SleepStage(:,3))
night_duration = max(eeg{1}(:,1));
nb_window = floor(night_duration/windowsize);
load(filerec,'slowwaves_start');
night_duration = max(eeg{1}(:,1));
windowsize = 60;
nb_window = floor(night_duration/windowsize);
load(filerec,'slowwaves_start');
night_duration = max(eeg{1}(:,1));
windowsize = 60;
nb_minute = floor(night_duration/windowsize);
load(filerec,'slowwaves_start');
night_duration = max(eeg{1}(:,1));
windowsize = 60;
nb_minute = floor(night_duration/windowsize);
timestamps = 0:nb_minute;
density_slowwaves = [];
for t=1:length(timestamps)
density_slowwaves(t) = sum(slowwaves_start>=timestamps(t)*60 & slowwaves_start>=(timestamps(t)+1)*60);
end
load(filerec,'slowwaves_start');
night_duration = max(eeg{1}(:,1));
windowsize = 60;
nb_minute = floor(night_duration/windowsize);
timestamps = 0:nb_minute;
density_slowwaves = [];
for t=1:length(timestamps)
density_slowwaves(t) = sum(slowwaves_start>=timestamps(t)*60 & slowwaves_start<(timestamps(t)+1)*60);
end
edit PlotIDDreemSlowDyn.m
cd(fullfile(folderec, num2str(records(i)))
cd(fullfile(folderec, num2str(records(i))))
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem
clear
%% files
folderTP = fullfile(FolderDropBox, 'Dropbox/Mobs_member/KarimJr/TP_Dreem');
folderec = fullfile(folderTP, 'Record');
records = [169015, 169021, 170725, 172127, 615580, 617212, 619421, 619762];
records_channel = [1, 1, 1, 2, 1, 2, 1, 1];
ProcessData_DreemTP
clear
%% files
folderec = fullfile(FolderDropBox, 'Dropbox/Mobs_member/KarimJr/TP_Dreem/TP_records');
records = [169015, 169021, 170725, 172127, 615580, 617212, 619421, 619762];
records_channel = [1, 1, 1, 2, 1, 2, 1, 1];
i=1;
cd(fullfile(folderec, num2str(records(i))))
filerec = fullfile(folderec, num2str(records(i)), [num2str(records(i)) '_signals.mat']);
filehypno = fullfile(folderec, num2str(records(i)), [num2str(records(i)) '_hypno.mat']);
load(filerec);
load(filehypno);
%% signals
signals{1} = [eeg{1}(:,1)' ; eeg{1}(:,2)'];
signals{2} = [eeg{2}(:,1)' ; eeg{2}(:,2)'];
signals{3} = [pulse_oximeter(:,1)' ; pulse_oximeter(:,2)'];
signals{4} = [breathing(:,1)' ; breathing(:,2)'];
%% Viewer
labels = {labels_eeg{1}, labels_eeg{2}, 'pulse oxymeter','respi'};
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.add_verticals(stimulations, ch)
vdr.set_title(labels{ch}, ch);
end
%epoch
vdr.add_rectangles(slowwaves_start, slowwaves_duration, records_channel(i));
%ylim
vdr.set_ymin(1, -200); vdr.set_ymax(1, 200);
vdr.set_ymin(2, -200); vdr.set_ymax(2, 200);
vdr.set_ymin(3, -500); vdr.set_ymax(3, 500);
vdr.set_ymin(4, -2); vdr.set_ymax(4, 2);
vdr.set_time_events(stimulations);
vdr.run_window
%% Sleep metrics
%SOL
% two first consecutives epochs of sleep
idx = find(SleepStage(:,3)~=5 & SleepStage(:,2)-SleepStage(:,1)>=60,1);
sol = SleepStage(idx,1);
%WASO
% total duration of wake period after sleep onset and before waking
idx = find(SleepStage(:,3)==5 & SleepStage(:,1)>=sol);
idx(idx==size(SleepStage,1))=[];
waso = sum(SleepStage(idx,2) - SleepStage(idx,1));
%TST - total sleep time
idx = find(SleepStage(:,3)~=5);
tst = sum(SleepStage(idx,2) - SleepStage(idx,1));
%TIB - time in bed
tib = SleepStage(end,2); % total time of record
%Sleep efficiency
sleep_efficiency = tst / tib;
%% Sleep stage duration and ratio
%N1
idx = find(SleepStage(:,3)==1);
n1_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
n1_ratio = n1_duration / tst;
%N2
idx = find(SleepStage(:,3)==2);
n2_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
n2_ratio = n2_duration / tst;
%N3
idx = find(SleepStage(:,3)==3);
n3_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
n3_ratio = n3_duration / tst;
%REM
idx = find(SleepStage(:,3)==4);
rem_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
rem_ratio = rem_duration / tst;
%% Delta waves and density
load(filerec,'slowwaves_start');
night_duration = max(eeg{1}(:,1));
windowsize = 60;
nb_minute = floor(night_duration/windowsize);
timestamps = 0:nb_minute;
density_slowwaves = [];
for t=1:length(timestamps)
density_slowwaves(t) = sum(slowwaves_start>=timestamps(t)*60 & slowwaves_start<(timestamps(t)+1)*60);
end
load('Spectro_169015.mat', 'label')
load('Spectro_169015.mat', 'Spectro')
['Spectrogram - ' label]
clear
%% files
folderTP = fullfile(FolderDropBox, 'Dropbox/Mobs_member/KarimJr/TP_Dreem');
folderec = fullfile(folderTP, 'Record');
records = [169015, 169021, 170725, 172127, 612198, 615580, 617212, 619421, 619762];
records_channel = [1, 1, 1, 2, 1, 1, 2, 1, 1];
disp(' ')
disp('****************************************************************')
disp(records(p))
ProcessData_DreemTP
clear
clc
TP_Dreem_Espci
edit PlotIDDreemSlowDyn.m
%plot
figure, hold on
%spectrogram
subplot(3,1,1), hold on
imagesc(t/3600, frequencies, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca,'Yticklabel',5:5:25, 'xlim', [0 max(t/3600)]);
title(['Spectrogram - ' label])
%hypnogram
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram'); xlabel('Time (h)')
figure, hold on
%spectrogram
subplot(3,1,1), hold on
imagesc(t/3600, frequencies, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca,'Yticklabel',5:5:25, 'xlim', [0 max(t/3600)]);
title(['Spectrogram - ' label])
%hypnogram
subplot(3,1,2), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram'); xlabel('Time (h)')
%hypnogram
subplot(3,1,2), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram'); xlabel('Time (h)')
clear
%% files
folderTP = fullfile(FolderDropBox, 'Dropbox/Mobs_member/KarimJr/TP_Dreem');
records = [169015, 169021, 170725, 172127, 612198, 615580, 617212, 619421, 619762];
for p=1:length(records)
disp(' ')
disp('****************************************************************')
disp(records(p))
hypno_name = fullfile(folderTP, 'TP_records', num2str(records(p)), [num2str(records(p)) '_hypno.mat']);
load(hypno_name, 't_hypno')
t_hypno=t_hypno/3600;
save(hypno_name, '-append','t_hypno')
end
TP_Dreem_Espci
line([1.3 1.3], ylim, 'color','r')
line([2.5 2.5], ylim, 'color','r')
line([5.3 5.3], ylim, 'color','r')
line([7.6 7.6], ylim, 'color','r')
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
%% Slope of slow-waves density curve
x_density = timestamps/60;
y_density = density_slowwaves;
[p_density,~] = polyfit(x_density, y_density, 1);
subplot(3,1,3), hold on
plot(x_density, density_slowwaves, 'b', 'linewidth',1), hold on,
%plot
figure, hold on
%spectrogram
subplot(3,1,1), hold on
imagesc(t/3600, frequencies, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca,'Yticklabel',5:5:25, 'xlim', [0 max(t/3600)]);
title(['Spectrogram - ' label])
%hypnogram
subplot(3,1,2), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram'); xlabel('Time (h)')
%density of slow waves
subplot(3,1,3), hold on
plot(timestamps/60, density_slowwaves, 'k', 'linewidth',2), hold on,
xlim([0 max(timestamps/60)]), xlabel('Time (h)'), ylabel('density of slow waves per min')
title('Density of slow-waves');
% line for cycles
line([1.3 1.3], ylim, 'color','r')
line([2.5 2.5], ylim, 'color','r')
line([5.3 5.3], ylim, 'color','r')
line([7.6 7.6], ylim, 'color','r')
%% Slope of slow-waves density curve
x_density = timestamps/60;
y_density = density_slowwaves;
[p_density,~] = polyfit(x_density, y_density, 1);
slope = p_density(1);
y_slope = polyval(p_density,x_density);
subplot(3,1,3), hold on
plot(x_density, y_slope, 'b', 'linewidth',1), hold on,
ylim([0 30])
cd(fullfile(folderec, num2str(records(i))))
load('169015_hypno.mat', 't_hypno')
load('169021_hypno.mat')
clear
clc
clear
%% files
folderTP = fullfile(FolderDropBox, 'Dropbox/Mobs_member/KarimJr/TP_Dreem');
folderec = fullfile(folderTP, 'Record');
records = [169015, 169021, 170725, 172127, 612198, 615580, 617212, 619421, 619762];
records_channel = [1, 1, 1, 2, 1, 1, 2, 1, 1];
p=1
disp(' ')
disp('****************************************************************')
disp(records(p))
%% init
channel_good = records_channel(p);
current_folder = fullfile(folderec, num2str(records(p)));
filerec = fullfile(current_folder, [num2str(records(p)) '.h5']);
filequality = fullfile(current_folder, [num2str(records(p)) '_quality.h5']);
[eeg, ~, breathing, pulse_oximeter, StageEpochs, Hypnogram, stimulations, ~, labels_eeg] = GetRecordDreemTP(filerec);
%% Get Hypnograms
Hypnogram(Hypnogram==0) = 5; %wake
Hypnogram(:,3) = Hypnogram(:,1);
Hypnogram(:,1) = (0:size(Hypnogram,1)-1)*30;
Hypnogram(:,2) = (1:size(Hypnogram,1))*30;
%stage epoch
SleepStage = [];
st_epoch = 0;
for i=2:size(Hypnogram,1)
if Hypnogram(i,3)~=Hypnogram(i-1,3)
newStage = [st_epoch Hypnogram(i-1,2) Hypnogram(i-1,3)];
SleepStage = [SleepStage ; newStage];
st_epoch = Hypnogram(i,1);
end
end
%% Process Hypnogram for ID info
% load
N1=StageEpochs{1};
N2=StageEpochs{2};
N3=StageEpochs{3};
REM=StageEpochs{4};
WAKE=StageEpochs{5};
% Sleep Stages
Rec=or(or(or(N1,or(N2,N3)),REM),WAKE);
Epochs={N1,N2,N3,REM,WAKE};
num_substage=[2 1.5 1 3 4]; %ordinate in graph
indtime=min(Start(Rec)):1E4:max(Stop(Rec));
timeTsd=tsd(indtime,zeros(length(indtime),1));
SleepStages=zeros(1,length(Range(timeTsd)))+4.5;
rg=Range(timeTsd);
sample_size = median(diff(rg))/10; %in ms
time_stages = zeros(1,5);
meanDuration_sleepstages = zeros(1,5);
for ep=1:length(Epochs)
idx=find(ismember(rg,Range(Restrict(timeTsd,Epochs{ep})))==1);
SleepStages(idx)=num_substage(ep);
time_stages(ep) = length(idx) * sample_size;
meanDuration_sleepstages(ep) = mean(diff([0;find(diff(idx)~=1);length(idx)])) * sample_size;
end
SleepStages=tsd(rg,SleepStages');
percentvalues_NREM = zeros(1,3);
for ep=1:3
percentvalues_NREM(ep) = time_stages(ep)/sum(time_stages(1:3));
end
percentvalues_NREM = round(percentvalues_NREM*100,2);
%to plot
t_hypno = Range(SleepStages)/1e4;
y_hypno = Data(SleepStages);
t_hypno/3600
ProcessData_DreemTP
TP_Dreem_Espci
% quantify slow waves in each cycle
for i=1:length(cycles_border)-1
nb_slowwaves_cycle(i) = sum(slowwaves_start>=cycles_border(i) & slowwaves_start<cycles_border(i+1);
duration_cycle(i) = (cycles_border(i+1) - cycles_border(i))/3600;
end
slowwaves_density_cycle = nb_slowwaves_cycle ./ duration_cycle;
% quantify slow waves in each cycle
for i=1:length(cycles_border)-1
nb_slowwaves_cycle(i) = sum(slowwaves_start>=cycles_border(i) & slowwaves_start<cycles_border(i+1));
duration_cycle(i) = (cycles_border(i+1) - cycles_border(i))/3600;
end
slowwaves_density_cycle = nb_slowwaves_cycle ./ duration_cycle;
cycles_border = [sol 1.3*3600 2.5*3600 5.3*3600 7.6*3600 night_duration];
% quantify slow waves in each cycle
for i=1:length(cycles_border)-1
nb_slowwaves_cycle(i) = sum(slowwaves_start>=cycles_border(i) & slowwaves_start<cycles_border(i+1));
duration_cycle(i) = (cycles_border(i+1) - cycles_border(i))/3600;
end
slowwaves_density_cycle = nb_slowwaves_cycle ./ duration_cycle;
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
idx = find(SleepStage(:,3)~=5 & SleepStage(:,2)-SleepStage(:,1)>=60,'last');
night_duration = SleepStage(idx,2);
idx = find(SleepStage(:,3)~=5 & SleepStage(:,2)-SleepStage(:,1)>=60,1,'last');
night_duration = SleepStage(idx,2);
%last sleep
idx = find(SleepStage(:,3)~=5,1,'last');
night_duration = SleepStage(idx,2);
night_duration
TP_Dreem_Espci
sol
waso
sleep_efficiency
tib
tst
nb_slowwaves_beginning
nb_slowwaves_end
%plot
figure, hold on
%spectrogram
subplot(3,1,1), hold on
imagesc(t/3600, frequencies, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca,'Yticklabel',5:5:18, 'xlim', [0 max(t/3600)]);
title(['Spectrogram - ' label])
%hypnogram
subplot(3,1,2), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram'); xlabel('Time (h)')
%density of slow waves
subplot(3,1,3), hold on
plot(timestamps/60, density_slowwaves, 'k', 'linewidth',2), hold on,
xlim([0 max(timestamps/60)]), xlabel('Time (h)'), ylabel('density of slow waves per min')
title('Density of slow-waves');
% line for cycles
cycles_border = [sol 1.3*3600 2.5*3600 5.3*3600 7.6*3600 night_duration];
for i=2:length(cycles_border)-1
line([cycles_border(i) cycles_border(i)]/3600, ylim, 'color','r')
end
%% Homeostasis
% quantify slow waves in each cycle
for i=1:length(cycles_border)-1
nb_slowwaves_cycle(i) = sum(slowwaves_start>=cycles_border(i) & slowwaves_start<cycles_border(i+1));
duration_cycle(i) = (cycles_border(i+1) - cycles_border(i))/3600;
end
slowwaves_density_cycle = nb_slowwaves_cycle ./ duration_cycle;
%beginning and end of the night
nb_slowwaves_beginning = sum(slowwaves_start>=sol & slowwaves_start<sol+2*3600);
nb_slowwaves_end = sum(slowwaves_start>=night_duration-2*3600 & slowwaves_start<night_duration);
%Slope of slow-waves density curve
x_density = timestamps/60;
y_density = density_slowwaves;
[p_density,~] = polyfit(x_density, y_density, 1);
slope = p_density(1);
y_slope = polyval(p_density,x_density);
subplot(3,1,3), hold on
plot(x_density, y_slope, 'b', 'linewidth',1), hold on,
ylim([0 30])
%% Compare to a large database
%plot
figure, hold on
%spectrogram
subplot(3,1,1), hold on
imagesc(t/3600, frequencies, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca,'Yticklabel',5:5:15, 'xlim', [0 max(t/3600), 'ylim', [0 15]]);
title(['Spectrogram - ' label])
%hypnogram
subplot(3,1,2), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram'); xlabel('Time (h)')
%density of slow waves
subplot(3,1,3), hold on
plot(timestamps/60, density_slowwaves, 'k', 'linewidth',2), hold on,
xlim([0 max(timestamps/60)]), xlabel('Time (h)'), ylabel('density of slow waves per min')
title('Density of slow-waves');
% line for cycles
cycles_border = [sol 1.3*3600 2.5*3600 5.3*3600 7.6*3600 night_duration];
for i=2:length(cycles_border)-1
line([cycles_border(i) cycles_border(i)]/3600, ylim, 'color','r')
end
%% Homeostasis
% quantify slow waves in each cycle
for i=1:length(cycles_border)-1
nb_slowwaves_cycle(i) = sum(slowwaves_start>=cycles_border(i) & slowwaves_start<cycles_border(i+1));
duration_cycle(i) = (cycles_border(i+1) - cycles_border(i))/3600;
end
slowwaves_density_cycle = nb_slowwaves_cycle ./ duration_cycle;
%beginning and end of the night
nb_slowwaves_beginning = sum(slowwaves_start>=sol & slowwaves_start<sol+2*3600);
nb_slowwaves_end = sum(slowwaves_start>=night_duration-2*3600 & slowwaves_start<night_duration);
%Slope of slow-waves density curve
x_density = timestamps/60;
y_density = density_slowwaves;
[p_density,~] = polyfit(x_density, y_density, 1);
slope = p_density(1);
y_slope = polyval(p_density,x_density);
subplot(3,1,3), hold on
plot(x_density, y_slope, 'b', 'linewidth',1), hold on,
ylim([0 30])
%% Compare to a large database
%plot
figure, hold on
%spectrogram
subplot(3,1,1), hold on
imagesc(t/3600, frequencies, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca,'Yticklabel',5:5:15, 'xlim', [0 max(t/3600)], 'ylim', [0 15]);
title(['Spectrogram - ' label])
%hypnogram
subplot(3,1,2), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram'); xlabel('Time (h)')
%density of slow waves
subplot(3,1,3), hold on
plot(timestamps/60, density_slowwaves, 'k', 'linewidth',2), hold on,
xlim([0 max(timestamps/60)]), xlabel('Time (h)'), ylabel('density of slow waves per min')
title('Density of slow-waves');
% line for cycles
cycles_border = [sol 1.3*3600 2.5*3600 5.3*3600 7.6*3600 night_duration];
for i=2:length(cycles_border)-1
line([cycles_border(i) cycles_border(i)]/3600, ylim, 'color','r')
end
%% Homeostasis
% quantify slow waves in each cycle
for i=1:length(cycles_border)-1
nb_slowwaves_cycle(i) = sum(slowwaves_start>=cycles_border(i) & slowwaves_start<cycles_border(i+1));
duration_cycle(i) = (cycles_border(i+1) - cycles_border(i))/3600;
end
slowwaves_density_cycle = nb_slowwaves_cycle ./ duration_cycle;
%beginning and end of the night
nb_slowwaves_beginning = sum(slowwaves_start>=sol & slowwaves_start<sol+2*3600);
nb_slowwaves_end = sum(slowwaves_start>=night_duration-2*3600 & slowwaves_start<night_duration);
%Slope of slow-waves density curve
x_density = timestamps/60;
y_density = density_slowwaves;
[p_density,~] = polyfit(x_density, y_density, 1);
slope = p_density(1);
y_slope = polyval(p_density,x_density);
subplot(3,1,3), hold on
plot(x_density, y_slope, 'b', 'linewidth',1), hold on,
ylim([0 30])
%% Compare to a large database
%plot
figure, hold on
%spectrogram
subplot(3,1,1), hold on
imagesc(t/3600, frequencies, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca,'Yticklabel',5:5:15, 'xlim', [0 max(t/3600)], 'ylim', [0.5 15]);
title(['Spectrogram - ' label])
%hypnogram
subplot(3,1,2), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram'); xlabel('Time (h)')
%density of slow waves
subplot(3,1,3), hold on
plot(timestamps/60, density_slowwaves, 'k', 'linewidth',2), hold on,
xlim([0 max(timestamps/60)]), xlabel('Time (h)'), ylabel('density of slow waves per min')
title('Density of slow-waves');
% line for cycles
cycles_border = [sol 1.3*3600 2.5*3600 5.3*3600 7.6*3600 night_duration];
for i=2:length(cycles_border)-1
line([cycles_border(i) cycles_border(i)]/3600, ylim, 'color','r')
end
%% Homeostasis
% quantify slow waves in each cycle
for i=1:length(cycles_border)-1
nb_slowwaves_cycle(i) = sum(slowwaves_start>=cycles_border(i) & slowwaves_start<cycles_border(i+1));
duration_cycle(i) = (cycles_border(i+1) - cycles_border(i))/3600;
end
slowwaves_density_cycle = nb_slowwaves_cycle ./ duration_cycle;
%beginning and end of the night
nb_slowwaves_beginning = sum(slowwaves_start>=sol & slowwaves_start<sol+2*3600);
nb_slowwaves_end = sum(slowwaves_start>=night_duration-2*3600 & slowwaves_start<night_duration);
%Slope of slow-waves density curve
x_density = timestamps/60;
y_density = density_slowwaves;
[p_density,~] = polyfit(x_density, y_density, 1);
slope = p_density(1);
y_slope = polyval(p_density,x_density);
subplot(3,1,3), hold on
plot(x_density, y_slope, 'b', 'linewidth',1), hold on,
ylim([0 30])
%% Compare to a large database
cd
cd(FolderTPDreem)
edit(FolderTPDreem)
edit FolderTPDreem.m
cd(FolderTPDreem)
load
clear
folder_database = fullfile(FolderTPDreem, 'population_data');
load('PopulationData.mat', 'sub_waso')
load('PopulationData.mat', 'sub_sol')
clear
load('PopulationData.mat')
save('PopulationData.mat')
clear
load('PopulationDataSlowWaves.mat')
save('PopulationDataSlowWaves.mat')
clear
file_popdata = fullfile(FolderTPDreem, 'population_data','PopulationData.mat');
load(file_popdata);
PopulationData = [subject_age' subject_sol' subject_waso' subject_sleep' subject_sleepeff' subject_N1ratio' subject_N2ratio' subject_N3ratio' subject_REMratio'];
filexlsx = fullfile(FolderTPDreem, 'population_data','PopulationData.xlsx');
xlswrite(filexlsx,PopulationData)
load('PopulationDataSlowWaves.mat')
clear
file_popdata = fullfile(FolderTPDreem, 'population_data','PopulationDataSlowWaves.mat');
load(file_popdata);
PopulationDataSlowWaves = [subject_age' subject_nbslowwaves' subject_swdensity' subject_densityslope' subject_isipeak'];
filexlsx = fullfile(FolderTPDreem, 'population_data','PopulationDataSlowWaves.xlsx');
xlswrite(filexlsx,PopulationDataSlowWaves)
file_popdata = fullfile(FolderTPDreem, 'population_data','PopulationData.mat');
load(file_popdata);
TP_Dreem_Espci
load(fullfile(FolderTPDreem, 'population_data','PopulationData.mat'));
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
%load sleep metrics
load(fullfile(FolderTPDreem, 'population_data','PopulationData.mat'));
%plot
scattersize = 25;
scatter_color = [0.3 0.3 0.3];
figure, hold on
subplot(2,2,1), hold on
scatter(subject_age, subject_sol, scattersize, scatter_color, 'filled'), hold on
%plot
scattersize = 25;
scatter_color = [0.3 0.3 0.3];
figure, hold on
subplot(2,2,1), hold on
scatter(subject_age, subject_sol, scattersize, scatter_color, 'filled'), hold on
xlabel('duration (s)'), ylabel('age'), title('Sleep Onset latency (SOL)')
figure, hold on
%sol
subplot(2,2,1), hold on
scatter(subject_age, subject_sol, scattersize, scatter_color, 'filled'), hold on
xlabel('duration (s)'), ylabel('age'), title('Sleep Onset latency (SOL)')
pfit = polyfit(subject_age, subject_sol,1);
yfit = pfit(1)*subject_age + pfit(2);
[rc, pv] = corrcoef(subject_age,subject_sol);
figure, hold on
%sol
subplot(2,2,1), hold on
scatter(subject_age, subject_sol, scattersize, scatter_color, 'filled'), hold on
xlabel('duration (s)'), ylabel('age'), title('Sleep Onset latency (SOL)')
pfit = polyfit(subject_age, subject_sol,1);
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_sol);
myAge = 30;
%load sleep metrics
load(fullfile(FolderTPDreem, 'population_data','PopulationData.mat'));
%plot
scattersize = 25;
scatter_color = [0.3 0.3 0.3];
figure, hold on
%sol
subplot(2,2,1), hold on
scatter(subject_age, subject_sol, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('duration (s)'), title('Sleep Onset latency (SOL)')
plot(myAge,sol,'r*')
pfit = polyfit(subject_age, subject_sol,1);
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_sol);
plot(myAge,sol,'bx')
plot(myAge,sol,'bx','MarkerSize',20)
myAge = 30;
%load sleep metrics
load(fullfile(FolderTPDreem, 'population_data','PopulationData.mat'));
%plot
scattersize = 25;
scatter_color = [0.3 0.3 0.3];
figure, hold on
%sol
subplot(2,2,1), hold on
scatter(subject_age, subject_sol, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('duration (s)'), title('Sleep Onset latency (SOL)')
plot(myAge,sol,'bx','linewidth',3,'MarkerSize',20)
pfit = polyfit(subject_age, subject_sol,1);
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_sol);
myAge = 30;
%load sleep metrics
load(fullfile(FolderTPDreem, 'population_data','PopulationData.mat'));
%plot
scattersize = 25;
scatter_color = [0.3 0.3 0.3];
figure, hold on
%total sleep time
subplot(2,2,1), hold on
scatter(subject_age, subject_sleep, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('duration (s)'), title('Total sleep time (TST)')
plot(myAge,tst,'bx','linewidth',3,'MarkerSize',20), %my point
pfit = polyfit(subject_age, subject_sleep,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_sleep); % correlations
%sleep efficiency
subplot(2,2,2), hold on
scatter(subject_age, subject_sleepeff, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('duration (s)'), title('Sleep efficiency')
plot(myAge,sleep_efficiency,'bx','linewidth',3,'MarkerSize',20), %my point
pfit = polyfit(subject_age, subject_sleepeff,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_sleepeff); % correlations
%sol
subplot(2,2,3), hold on
scatter(subject_age, subject_sol, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('duration (s)'), title('Sleep Onset latency (SOL)')
plot(myAge,sol,'bx','linewidth',3,'MarkerSize',20), %my point
pfit = polyfit(subject_age, subject_sol,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_sol); % correlations
%waso
subplot(2,2,4), hold on
scatter(subject_age, subject_waso, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('duration (s)'), title('Wake after sleep onset (WASO)')
plot(myAge,waso,'bx','linewidth',3,'MarkerSize',20), %my point
pfit = polyfit(subject_age, subject_waso,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_waso); % correlations
sleep_efficiency=sleep_efficiency*100
myAge = 30;
%load sleep metrics
load(fullfile(FolderTPDreem, 'population_data','PopulationData.mat'));
%plot
scattersize = 25;
scatter_color = [0.3 0.3 0.3];
figure, hold on
%total sleep time
subplot(2,2,1), hold on
scatter(subject_age, subject_sleep, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('duration (s)'), title('Total sleep time (TST)')
plot(myAge,tst/3600,'bx','linewidth',3,'MarkerSize',20), %my point
pfit = polyfit(subject_age, subject_sleep,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_sleep); % correlations
%sleep efficiency
subplot(2,2,2), hold on
scatter(subject_age, subject_sleepeff, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('duration (s)'), title('Sleep efficiency')
plot(myAge,sleep_efficiency,'bx','linewidth',3,'MarkerSize',20), %my point
pfit = polyfit(subject_age, subject_sleepeff,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_sleepeff); % correlations
%sol
subplot(2,2,3), hold on
scatter(subject_age, subject_sol, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('duration (s)'), title('Sleep Onset latency (SOL)')
plot(myAge,sol,'bx','linewidth',3,'MarkerSize',20), %my point
pfit = polyfit(subject_age, subject_sol,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_sol); % correlations
%waso
subplot(2,2,4), hold on
scatter(subject_age, subject_waso, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('duration (s)'), title('Wake after sleep onset (WASO)')
plot(myAge,waso,'bx','linewidth',3,'MarkerSize',20), %my point
pfit = polyfit(subject_age, subject_waso,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_waso); % correlations
cd(FolderTPDreem)
clear
load('PopulationData.mat')
save('PopulationData.mat')
TP_Dreem_Espci
%plot
scattersize = 25;
scatter_color = [0.3 0.3 0.3];
figure, hold on
%N1 percentage
subplot(2,2,1), hold on
scatter(subject_age, subject_N1percentage, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('%'), title('N1 %')
plot(myAge,n1_ratio*100,'bx','linewidth',3,'MarkerSize',20), %my point
pfit = polyfit(subject_age, subject_N1percentage,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_N1percentage); % correlations
%N2 percentage
subplot(2,2,2), hold on
scatter(subject_age, subject_N2percentage, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('%'), title('N2 %')
plot(myAge,n2_ratio*100,'bx','linewidth',3,'MarkerSize',20), %my point
pfit = polyfit(subject_age, subject_N2percentage,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_N2percentage); % correlations
%N3 percentage
subplot(2,2,3), hold on
scatter(subject_age, subject_N3percentage, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('%'), title('N3 %')
plot(myAge,n3_ratio*100,'bx','linewidth',3,'MarkerSize',20), %my point
pfit = polyfit(subject_age, subject_N3percentage,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_N3percentage); % correlations
% REM percentage
subplot(2,2,4), hold on
scatter(subject_age, subject_REMpercentage, scattersize, scatter_color, 'filled'), hold on
xlabel('age'), ylabel('%'), title('REM %')
plot(myAge,rem_ratio*100,'bx','linewidth',3,'MarkerSize',20), %my point
pfit = polyfit(subject_age, subject_REMpercentage,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
[rc, pv] = corrcoef(subject_age,subject_REMpercentage); % correlations
cd(FolderTPDreem)
load('PopulationDataSlowWaves.mat')
clear
load(fullfile(FolderTPDreem, 'population_data','PopulationDataSlowWaves.mat'));
edit QuantifSlowWaveSlowDynPlot2.m
TP_Dreem_Espci
slowwaves_rate = nb_slowwaves / (tst/60);
close all
clear
TP_Dreem_Espci
clear
%% files
folderec = fullfile(FolderDropBox, 'Dropbox/Mobs_member/KarimJr/TP_Dreem/TP_records');
records = [169015, 169021, 170725, 172127, 615580, 617212, 619421, 619762];
records_channel = [1, 1, 1, 2, 1, 2, 1, 1];
i=1;
cd(fullfile(folderec, num2str(records(i))))
filerec = fullfile(folderec, num2str(records(i)), [num2str(records(i)) '_signals.mat']);
filehypno = fullfile(folderec, num2str(records(i)), [num2str(records(i)) '_hypno.mat']);
load(filerec);
load(filehypno);
%% signals
signals{1} = eeg{1};
signals{2} = eeg{2};
signals{3} = pulse_oximeter;
signals{4} = breathing;
%% Viewer
labels = {labels_eeg{1}, labels_eeg{2}, 'pulse oxymeter','respi'};
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.add_verticals(stimulations, ch)
vdr.set_title(labels{ch}, ch);
end
vdr.add_rectangles(slowwaves_start, slowwaves_duration, records_channel(i));
labels = {labels_eeg{1}, labels_eeg{2}, 'pulse oxymeter','respiration'};
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.add_verticals(stimulations, ch)
vdr.set_title(labels{ch}, ch);
vdr.autoscale_ylim(ch)
end
%epoch
vdr.add_rectangles(slowwaves_start, slowwaves_duration, records_channel(i));
vdr.run_window
signals{1} = eeg{1}';
signals{2} = eeg{2}';
signals{3} = pulse_oximeter';
signals{4} = breathing';
%% Viewer
labels = {labels_eeg{1}, labels_eeg{2}, 'pulse oxymeter','respiration'};
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.add_verticals(stimulations, ch)
vdr.set_title(labels{ch}, ch);
vdr.autoscale_ylim(ch)
end
%epoch
vdr.add_rectangles(slowwaves_start, slowwaves_duration, records_channel(i));
vdr.run_window
%% Viewer
labels = {labels_eeg{1}, labels_eeg{2}, 'pulse oxymeter','respiration'};
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.add_verticals(stimulations, ch)
vdr.set_title(labels{ch}, ch);
end
%epoch
vdr.add_rectangles(slowwaves_start, slowwaves_duration, records_channel(i));
%ylim
vdr.set_ymin(1, -200); vdr.set_ymax(1, 200);
vdr.set_ymin(2, -200); vdr.set_ymax(2, 200);
vdr.set_ymin(3, -500); vdr.set_ymax(3, 500);
vdr.set_ymin(4, -2); vdr.set_ymax(4, 2);
% vdr.set_time_events(stimulations);
vdr.run_window
%% Viewer
labels = {labels_eeg{1}, labels_eeg{2}, 'pulse oxymeter','respiration'};
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.add_verticals(stimulations, ch)
vdr.set_title(labels{ch}, ch);
end
%epoch
vdr.add_rectangles(slowwaves_start, slowwaves_duration, records_channel(i));
%ylim
vdr.set_ymin(1, -200); vdr.set_ymax(1, 200);
vdr.set_ymin(2, -200); vdr.set_ymax(2, 200);
vdr.set_ymin(3, -500); vdr.set_ymax(3, 500);
vdr.set_ymin(4, -3); vdr.set_ymax(4, 3);
% vdr.set_time_events(stimulations);
vdr.run_window
cd(FolderTPDreem)
clear
clear
%% files
folderTP = fullfile(FolderDropBox, 'Dropbox/Mobs_member/KarimJr/TP_Dreem');
folderec = fullfile(folderTP, 'Record');
records = [169015, 169021, 170725, 172127, 612198, 615580, 617212, 619421, 619762];
records_channel = [1, 1, 1, 2, 1, 1, 2, 1, 1];
p=1
disp('****************************************************************')
disp(records(p))
clearvars -except folderTP folderec records records_channel
test_name = fullfile(folderTP, 'TP_records', num2str(records(p)),[num2str(records(p)) '_signals.mat']);
if exist(test_name,'file')==2
continue
end
%params
fs_eeg    = 250; %250Hz
fs_hr = 250;
%% init
channel_good = records_channel(p);
current_folder = fullfile(folderec, num2str(records(p)));
filerec = fullfile(current_folder, [num2str(records(p)) '.h5']);
filequality = fullfile(current_folder, [num2str(records(p)) '_quality.h5']);
filehr =  fullfile(current_folder, [num2str(records(p)) '_heart.h5']);
filevc =  fullfile(current_folder, [num2str(records(p)) '_vc.h5']);
p=1
disp(' ')
disp('****************************************************************')
disp(records(p))
clearvars -except folderTP folderec records records_channel p
test_name = fullfile(folderTP, 'TP_records', num2str(records(p)),[num2str(records(p)) '_signals.mat']);
if exist(test_name,'file')==2
continue
end
%params
fs_eeg    = 250; %250Hz
fs_hr = 250;
%% init
channel_good = records_channel(p);
current_folder = fullfile(folderec, num2str(records(p)));
filerec = fullfile(current_folder, [num2str(records(p)) '.h5']);
filequality = fullfile(current_folder, [num2str(records(p)) '_quality.h5']);
filehr =  fullfile(current_folder, [num2str(records(p)) '_heart.h5']);
filevc =  fullfile(current_folder, [num2str(records(p)) '_vc.h5']);
%params
fs_eeg    = 250; %250Hz
fs_hr = 250;
%% init
channel_good = records_channel(p);
current_folder = fullfile(folderec, num2str(records(p)));
filerec = fullfile(current_folder, [num2str(records(p)) '.h5']);
filequality = fullfile(current_folder, [num2str(records(p)) '_quality.h5']);
filehr =  fullfile(current_folder, [num2str(records(p)) '_heart.h5']);
filevc =  fullfile(current_folder, [num2str(records(p)) '_vc.h5']);
%% Get quality
thresh = 0.7; %70%
mergeTh   = 5e4; %5sec
if exist(filequality, 'file') == 2
qualities = double(h5read(filequality,['/quality/']));
for i=1:6
channel_quality{i} = qualities(i,:)';
end
else
disp(['File ' filequality ' does not exist'])
end
%tsd
x_quality = (0:(length(channel_quality{1})-1))' / fs_eeg;
for ch=1:length(channel_quality)
tquality{ch} = tsd(x_quality*1E4, channel_quality{ch});
end
%epochs
TotalNoise = intervalSet([],[]);
for ch=1:length(tquality)
intv = thresholdIntervals(tquality{ch}, thresh,'Direction','Below');
NoiseEpoch{ch} = mergeCloseIntervals(intv, mergeTh);
end
%% load
[eeg, ~, breathing, pulse_oximeter, StageEpochs, Hypnogram, stimulations, ~, labels_eeg] = GetRecordDreemTP(filerec);
eeg = eeg([1 2 5 6]);
labels_eeg = labels_eeg([1 2 5 6]);
%breathing
breathing(:,2) = breathing(:,2) * 1000; %rescale
%heart rate
HR = double(h5read(filehr,'/heart_rate/')); %load
x_hr = (0:(length(HR)-1))' / fs_hr;
heart_rate = [x_hr, HR];
%NREM
NREM = or(or(StageEpochs{2}, StageEpochs{3}), StageEpochs{1});
%% virtual channels
EEG = double(h5read(filevc,'/virtual_channel/')); %load
x_EEG = (0:(length(EEG)-1))' / fs_eeg;
eeg_vc = [x_EEG, EEG];
eeg{5} = eeg_vc; labels_eeg{5} = 'virtual channel';
tEEG = tsd(eeg_vc(:,1)*1e4, eeg_vc(:,2));
%params
params.fpass  = [0.4 40];
params.tapers = [3 5];
movingwin     = [3 0.2];
params.Fs     = 250;
[Sp,t,f] = mtspecgramc(eeg_vc(:,2), movingwin, params);
Spectro  = {Sp,t,f};
%% slow waves
sw_file = fullfile(current_folder, ['SlowWaves_' num2str(records(p)) '.mat']);
if exist(sw_file,'file')==2
load(sw_file);
else
SlowWaveEpochs= and(FindSlowWaves(tEEG), NREM);
save(sw_file,'SlowWaveEpochs')
end
slowwaves_start = Start(SlowWaveEpochs)/1e4;
slowwaves_duration = (End(SlowWaveEpochs) - Start(SlowWaveEpochs))/1e4;
%% spindles
spi_file = fullfile(current_folder, ['Spindles_' num2str(records(p)) '.mat']);
if exist(spi_file,'file')==2
load(spi_file);
else
params_spi.noise_epoch = NoiseEpoch{5};
SpindlesEpoch = and(FindSpindlesDreem(tEEG,'method','mensen','params',params_spi), NREM);
save(spi_file,'SpindlesEpoch')
end
spindles_start = Start(SpindlesEpoch)/1e4;
spindles_duration = (End(SpindlesEpoch) - Start(SpindlesEpoch))/1e4;
%% density and ISI
%params
windowsize = 60e4; %60s
step=100; %isi
edges=0:step:10000;
night_duration = max(Range(tEEG));
%intervals
intervals_start = 0:windowsize:night_duration;
x_intervals = (intervals_start + windowsize/2)/(3600E4);
%Slow Wave density
center_slowwaves = Start(SlowWaveEpochs);
slowwaves_density = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
slowwaves_density(t) = length(Restrict(ts(center_slowwaves),intv)); %per min
end
slowwaves_density_t = x_intervals;
slowwaves_density_y = slowwaves_density;
%ISI
[isi_sw_y, isi_sw_x] = histcounts(diff(center_slowwaves/10), edges);
isi_sw_x = isi_sw_x(1:end-1) + diff(isi_sw_x);
%% Get Hypnograms
Hypnogram(Hypnogram==0) = 5; %wake
Hypnogram(:,3) = Hypnogram(:,1);
Hypnogram(:,1) = (0:size(Hypnogram,1)-1)*30;
Hypnogram(:,2) = (1:size(Hypnogram,1))*30;
%stage epoch
SleepStage = [];
st_epoch = 0;
for i=2:size(Hypnogram,1)
if Hypnogram(i,3)~=Hypnogram(i-1,3)
newStage = [st_epoch Hypnogram(i-1,2) Hypnogram(i-1,3)];
SleepStage = [SleepStage ; newStage];
st_epoch = Hypnogram(i,1);
end
end
%% Process Hypnogram for ID info
% load
N1=StageEpochs{1};
N2=StageEpochs{2};
N3=StageEpochs{3};
REM=StageEpochs{4};
WAKE=StageEpochs{5};
% Sleep Stages
Rec=or(or(or(N1,or(N2,N3)),REM),WAKE);
Epochs={N1,N2,N3,REM,WAKE};
num_substage=[2 1.5 1 3 4]; %ordinate in graph
indtime=min(Start(Rec)):1E4:max(Stop(Rec));
timeTsd=tsd(indtime,zeros(length(indtime),1));
SleepStages=zeros(1,length(Range(timeTsd)))+4.5;
rg=Range(timeTsd);
sample_size = median(diff(rg))/10; %in ms
time_stages = zeros(1,5);
meanDuration_sleepstages = zeros(1,5);
for ep=1:length(Epochs)
idx=find(ismember(rg,Range(Restrict(timeTsd,Epochs{ep})))==1);
SleepStages(idx)=num_substage(ep);
time_stages(ep) = length(idx) * sample_size;
meanDuration_sleepstages(ep) = mean(diff([0;find(diff(idx)~=1);length(idx)])) * sample_size;
end
SleepStages=tsd(rg,SleepStages');
percentvalues_NREM = zeros(1,3);
for ep=1:3
percentvalues_NREM(ep) = time_stages(ep)/sum(time_stages(1:3));
end
percentvalues_NREM = round(percentvalues_NREM*100,2);
%to plot
t_hypno = Range(SleepStages)/1e4;
y_hypno = Data(SleepStages);
ProcessData_DreemTP
label
%plot
figure, hold on
%spectrogram
subplot(3,1,1), hold on
imagesc(t/3600, frequencies, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca, 'xlim', [0 max(t/3600)], 'ylim', [0.5 15]);
caxis([-5 10]),
title(['Spectrogram - ' label])
clear
clc
edit mtspectrumc.m
clc
clear
%% files
folderec = fullfile(FolderDropBox, 'Dropbox/Mobs_member/KarimJr/TP_Dreem/TP_records');
records = [169015, 169021, 170725, 172127, 615580, 617212, 619421, 619762];
records_channel = [1, 1, 1, 2, 1, 2, 1, 1];
i=1;
cd(fullfile(folderec, num2str(records(i))))
filerec = fullfile(folderec, num2str(records(i)), [num2str(records(i)) '_signals.mat']);
filehypno = fullfile(folderec, num2str(records(i)), [num2str(records(i)) '_hypno.mat']);
load(filerec);
load(filehypno);
%% signals
signals{1} = eeg{1};
signals{2} = eeg{2};
signals{3} = pulse_oximeter;
signals{4} = breathing;
%% Viewer
labels = {labels_eeg{1}, labels_eeg{2}, 'pulse oxymeter','respiration'};
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.add_verticals(stimulations, ch)
vdr.set_title(labels{ch}, ch);
end
%epoch
vdr.add_rectangles(slowwaves_start, slowwaves_duration, records_channel(i));
%ylim
vdr.set_ymin(1, -200); vdr.set_ymax(1, 200);
vdr.set_ymin(2, -200); vdr.set_ymax(2, 200);
vdr.set_ymin(3, -500); vdr.set_ymax(3, 500);
vdr.set_ymin(4, -3); vdr.set_ymax(4, 3);
% vdr.set_time_events(stimulations);
vdr.run_window
%% Sleep metrics
%SOL
% two first consecutives epochs of sleep
idx = find(SleepStage(:,3)~=5 & SleepStage(:,2)-SleepStage(:,1)>=60,1);
sol = SleepStage(idx,1);
%WASO
% total duration of wake period after sleep onset and before waking
idx = find(SleepStage(:,3)==5 & SleepStage(:,1)>=sol);
idx(idx==size(SleepStage,1))=[];
waso = sum(SleepStage(idx,2) - SleepStage(idx,1));
%TST - total sleep time
idx = find(SleepStage(:,3)~=5);
tst = sum(SleepStage(idx,2) - SleepStage(idx,1));
%TIB - time in bed
tib = SleepStage(end,2); % total time of record
%Sleep efficiency
sleep_efficiency = 100 * tst / tib;
%last sleep
idx = find(SleepStage(:,3)~=5,1,'last');
night_duration = SleepStage(idx,2);
%% Sleep stage duration and ratio
%N1
idx = find(SleepStage(:,3)==1);
n1_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
n1_ratio = n1_duration / tst;
%N2
idx = find(SleepStage(:,3)==2);
n2_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
n2_ratio = n2_duration / tst;
%N3
idx = find(SleepStage(:,3)==3);
n3_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
n3_ratio = n3_duration / tst;
%REM
idx = find(SleepStage(:,3)==4);
rem_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
rem_ratio = rem_duration / tst;
%% Delta waves and density
load(filerec,'slowwaves_start');
record_duration = max(eeg{1}(:,1));
windowsize = 60;
nb_minute = floor(record_duration/windowsize);
timestamps = 0:nb_minute;
density_slowwaves = [];
for t=1:length(timestamps)
density_slowwaves(t) = sum(slowwaves_start>=timestamps(t)*60 & slowwaves_start<(timestamps(t)+1)*60);
end
%number and rate
nb_slowwaves = length(slowwaves_start);
slowwaves_rate = nb_slowwaves / (tst/60);
%% plot hypnogram/spectrogram/delta
%spectrogram
load('Spectro_169015.mat', 'label','Spectro')
spectrogram = Spectro{1};
t = Spectro{2};
frequencies = Spectro{3};
%plot
figure, hold on
%spectrogram
subplot(4,1,1), hold on
imagesc(t/3600, frequencies, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca, 'xlim', [0 max(t/3600)], 'ylim', [0.5 15]);
caxis([-5 10]),
title(['Spectrogram - ' label])
%heart rate
subplot(4,1,2), hold on
plot(heart_rate(:,1)/3600, heart_rate(:,1), 'k', 'linewidth',2), hold on,
xlim([0 max(heart_rate(:,1)/60)]), xlabel('Time (h)'), ylabel('pulse/min')
title('Heart rate');
%hypnogram
subplot(4,1,3), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram'); xlabel('Time (h)')
%density of slow waves
subplot(4,1,4), hold on
plot(timestamps/60, density_slowwaves, 'k', 'linewidth',2), hold on,
xlim([0 max(timestamps/60)]), xlabel('Time (h)'), ylabel('density of slow waves per min')
title('Density of slow-waves');
% line for cycles
cycles_border = [sol 1.3*3600 2.5*3600 5.3*3600 7.6*3600 night_duration];
for i=2:length(cycles_border)-1
line([cycles_border(i) cycles_border(i)]/3600, ylim, 'color','r')
end
plot(heart_rate(:,1)/3600, heart_rate(:,1), 'k', 'linewidth',2), hold on,
figure, hold on
plot(heart_rate(:,1)/3600, heart_rate(:,1), 'k', 'linewidth',2), hold on,
%plot
figure, hold on
%spectrogram
subplot(4,1,1), hold on
imagesc(t/3600, frequencies, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca, 'xlim', [0 max(t/3600)], 'ylim', [0.5 15]);
caxis([-5 10]),
title(['Spectrogram - ' label])
%heart rate
subplot(4,1,2), hold on
plot(heart_rate(:,1)/3600, heart_rate(:,2), 'k', 'linewidth',2), hold on,
xlim([0 max(heart_rate(:,1)/60)]), xlabel('Time (h)'), ylabel('pulse/min')
title('Heart rate');
%hypnogram
subplot(4,1,3), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram'); xlabel('Time (h)')
%density of slow waves
subplot(4,1,4), hold on
plot(timestamps/60, density_slowwaves, 'k', 'linewidth',2), hold on,
xlim([0 max(timestamps/60)]), xlabel('Time (h)'), ylabel('density of slow waves per min')
title('Density of slow-waves');
% line for cycles
cycles_border = [sol 1.3*3600 2.5*3600 5.3*3600 7.6*3600 night_duration];
for i=2:length(cycles_border)-1
line([cycles_border(i) cycles_border(i)]/3600, ylim, 'color','r')
end
%plot
figure, hold on
%spectrogram
subplot(4,1,1), hold on
imagesc(t/3600, frequencies, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca, 'xlim', [0 max(t/3600)], 'ylim', [0.5 15]);
caxis([-5 10]),
title(['Spectrogram - ' label])
%heart rate
subplot(4,1,2), hold on
plot(heart_rate(:,1)/3600, heart_rate(:,2), 'k', 'linewidth',2), hold on,
xlim([0 max(heart_rate(:,1)/3600)]), xlabel('Time (h)'), ylabel('pulse/min')
title('Heart rate');
%hypnogram
subplot(4,1,3), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram'); xlabel('Time (h)')
%density of slow waves
subplot(4,1,4), hold on
plot(timestamps/60, density_slowwaves, 'k', 'linewidth',2), hold on,
xlim([0 max(timestamps/60)]), xlabel('Time (h)'), ylabel('density of slow waves per min')
title('Density of slow-waves');
% line for cycles
cycles_border = [sol 1.3*3600 2.5*3600 5.3*3600 7.6*3600 night_duration];
for i=2:length(cycles_border)-1
line([cycles_border(i) cycles_border(i)]/3600, ylim, 'color','r')
end
%plot
figure, hold on
%spectrogram
subplot(4,1,1), hold on
imagesc(t/3600, frequencies, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca, 'xlim', [0 max(t/3600)], 'ylim', [0.5 15]);
caxis([-5 10]),
title(['Spectrogram - ' label])
%heart rate
subplot(4,1,2), hold on
plot(heart_rate(:,1)/3600, heart_rate(:,2), 'k', 'linewidth',2), hold on,
xlim([0 max(heart_rate(:,1)/3600)]), ylim([40 90]),
xlabel('Time (h)'), ylabel('pulse/min')
title('Heart rate');
%hypnogram
subplot(4,1,3), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram'); xlabel('Time (h)')
%density of slow waves
subplot(4,1,4), hold on
plot(timestamps/60, density_slowwaves, 'k', 'linewidth',2), hold on,
xlim([0 max(timestamps/60)]), xlabel('Time (h)'), ylabel('density of slow waves per min')
title('Density of slow-waves');
% line for cycles
cycles_border = [sol 1.3*3600 2.5*3600 5.3*3600 7.6*3600 night_duration];
for i=2:length(cycles_border)-1
line([cycles_border(i) cycles_border(i)]/3600, ylim, 'color','r')
end
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem
edit FindRipplesKarimSB.m
edit PlotRipRaw.m
signal = eeg{1};
fs = round(1/median(diff(signal(:,1))))
mod(10,3)
mod(11,3)
mod(sum(idx),2)
id = idx>45
sum(id)
mod(sum(id),2)
mod(sum(id),5)
[frequencies_fft, power_fft] = fft_signaux_headband(breathing, 10590, 10620);
x_sig = signal(:,2);
y_sig = signal(:,2);
fs = round(1/median(diff(x_sig)));
[frequencies_fft, power_fft] = fft_signaux_headband(breathing, 10590, 10620);
% init
x_sig = signal(:,2);
y_sig = signal(:,1);
fs = round(1/median(diff(x_sig)));
[frequencies_fft, power_fft] = fft_signaux_headband(breathing, 10590, 10620);
figure, hold on
plot(frequencies_fft,power_fft)
plot(frequencies_fft,log(power_fft))
cla
plot(frequencies_fft,log(power_fft))
[power_fft, frequencies_fft] = fft_signaux_headband(breathing, 10590, 10620);
figure, hold on
plot(frequencies_fft,log(power_fft))
[power_fft, frequencies_fft] = fft_signaux_headband(breathing, 10590, 10620);
figure, hold on
plot(frequencies_fft,power_fft)
figure, hold on
[power_fft, frequencies_fft] = fft_signaux_headband(breathing, 1440, 4110);
plot(frequencies_fft,power_fft,'r'); hold on
[power_fft, frequencies_fft] = fft_signaux_headband(breathing, 17010, 17700);
plot(frequencies_fft,power_fft,'b'); hold on
[power_fft, frequencies_fft] = fft_signaux_headband(breathing, 25740, 26190);
plot(frequencies_fft,power_fft,'g'); hold on
[power_fft, frequencies_fft] = fft_signaux_headband(breathing, 17010, 17700);
plot(frequencies_fft,power_fft,'b'); hold on
figure, hold on
[power_fft, frequencies_fft] = fft_signaux_headband(breathing, 1440, 4110);
plot(frequencies_fft,power_fft,'r'); hold on
[power_fft, frequencies_fft] = fft_signaux_headband(breathing, 17010, 17700);
plot(frequencies_fft,power_fft,'b'); hold on
%-- 29/11/2018 13:46:21 --%
cd(FolderTPDreem)
clc
cd('/home/mobsjunior/Dropbox/DataKJ/TPDreemEspci/')
LoadPathTPDreem
TP_Dreem_Sleep_complete
%signals to display
display(labels_eeg);
signals{1} = eeg{1};            titles{1} = labels_eeg{1};      y_borders{1} = [-200 200];
signals{2} = eeg{2};            titles{2} = labels_eeg{2};      y_borders{2} = [-200 200];
signals{3} = eeg{5};            titles{3} = labels_eeg{5};      y_borders{3} = [-200 200];
signals{4} = pulse_oximeter;    titles{4} = 'pulse oxymeter';   y_borders{4} = [-500 500];
signals{5} = breathing;         titles{5} = 'respiration';      y_borders{5} = [-3 3];
%Viewer initialization
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.set_title(titles{ch}, ch);
vdr.set_ymin(ch, y_borders{ch}(1));
vdr.set_ymax(ch, y_borders{ch}(2));
end
% show slow waves on virtual channel
vdr.add_rectangles(slowwaves_start, slowwaves_duration, 3);
%plot
vdr.run_window
clear
TP_Dreem_Sleep_complete
clear
TP_Dreem_Sleep_complete
cd('/home/mobsjunior/Dropbox/DataKJ/TPDreemEspci/')
clear
cd('/home/mobsjunior/Dropbox/DataKJ/TPDreemEspci/')
%info to fullfill
record_ref = 169015;
userAge = 43;
%folders and files
folderDreem = pwd;
folderRecords = fullfile(folderDreem,'Records');
folderNight = fullfile(folderRecords, num2str(record_ref));
filerecord = fullfile(folderNight, [num2str(record_ref) '_signals.mat']);
filehypno = fullfile(folderNight, [num2str(record_ref) '_hypno.mat']);
filespectro = fullfile(folderNight, ['Spectro_' num2str(record_ref) '.mat']);
%load data
load(filerecord);
load(filehypno);
load(filespectro);
%info to fullfill
record_ref = 169015;
userAge = 43;
%folders and files
folderDreem = pwd;
folderRecords = fullfile(folderDreem,'Records');
folderNight = fullfile(folderRecords, num2str(record_ref));
filerecord = fullfile(folderNight, [num2str(record_ref) '_signals.mat']);
filehypno = fullfile(folderNight, [num2str(record_ref) '_hypno.mat']);
filespectro = fullfile(folderNight, [num2str(record_ref) '_spectro.mat']);
%load data
load(filerecord);
load(filehypno);
load(filespectro);
clear
%% INIT
%info to fullfill
record_ref = 169015;
userAge = 43;
%folders and files
folderDreem = pwd;
folderRecords = fullfile(folderDreem,'Records');
folderNight = fullfile(folderRecords, num2str(record_ref));
filerecord = fullfile(folderNight, [num2str(record_ref) '_signals.mat']);
filehypno = fullfile(folderNight, [num2str(record_ref) '_hypno.mat']);
filespectro = fullfile(folderNight, [num2str(record_ref) '_spectrogram.mat']);
%load data
load(filerecord);
load(filehypno);
load(filespectro);
clear
clc
TP_Dreem_Sleep
clear
clc
LoadPathTPDreem
edit TP_Dreem_Sleep.m
%% INIT
%info to fullfill
record_ref = 169015;
userAge = 43;
%folders and files
folderDreem = pwd;
folderRecords = fullfile(folderDreem,'Records');
folderNight = fullfile(folderRecords, num2str(record_ref));
filerecord = fullfile(folderNight, [num2str(record_ref) '_signals.mat']);
filehypno = fullfile(folderNight, [num2str(record_ref) '_hypno.mat']);
filespectro = fullfile(folderNight, [num2str(record_ref) '_spectrogram.mat']);
%load data
load(filerecord);
load(filehypno);
load(filespectro);
%% Visualisation
% - use the example below to visualise signals of your night on Matlab
% - you can also display signals you will compute or tag specif moments of the night
%signals to display
display(labels_eeg);
signals{1} = eeg{1};            titles{1} = labels_eeg{1};      y_borders{1} = [-200 200];
signals{2} = eeg{2};            titles{2} = labels_eeg{2};      y_borders{2} = [-200 200];
signals{3} = eeg{5};            titles{3} = labels_eeg{5};      y_borders{3} = [-200 200];
signals{4} = pulse_oximeter;    titles{4} = 'pulse oxymeter';   y_borders{4} = [-500 500];
signals{5} = breathing;         titles{5} = 'respiration';      y_borders{5} = [-3 3];
%Viewer initialization
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.set_title(titles{ch}, ch);
vdr.set_ymin(ch, y_borders{ch}(1));
vdr.set_ymax(ch, y_borders{ch}(2));
end
% show slow waves on virtual channel
vdr.add_rectangles(slowwaves_start, slowwaves_duration, 3);
%launch and plot the viewer
vdr.run_window
vdr.run_window
clear
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% A - Initialisation and visualisation
%info to fullfill
record_ref = 615580;
userAge = 22;
folderDreem = pwd;
%folders and files
folderRecords = fullfile(folderDreem,'Records');
folderNight = fullfile(folderRecords, num2str(record_ref));
filerecord = fullfile(folderNight, [num2str(record_ref) '_signals.mat']);
filehypno = fullfile(folderNight, [num2str(record_ref) '_hypno.mat']);
filespectro = fullfile(folderNight, ['Spectro_' num2str(record_ref) '.mat']);
%load data
load(filerecord);
load(filehypno);
load(filespectro);
%% Visualisation
% - use the example below to visualise signals of your night on Matlab
% - you can also display signals you will compute or tag specif moments of the night
%signals to display
display(labels_eeg);
signals{1} = eeg{1};            titles{1} = labels_eeg{1};      y_borders{1} = [-200 200];
signals{2} = eeg{2};            titles{2} = labels_eeg{2};      y_borders{2} = [-200 200];
signals{3} = eeg{5};            titles{3} = labels_eeg{5};      y_borders{3} = [-200 200];
signals{4} = pulse_oximeter;    titles{4} = 'pulse oxymeter';   y_borders{4} = [-500 500];
signals{5} = breathing;         titles{5} = 'respiration';      y_borders{5} = [-3 3];
%Viewer initialization
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.set_title(titles{ch}, ch);
vdr.set_ymin(ch, y_borders{ch}(1));
vdr.set_ymax(ch, y_borders{ch}(2));
end
% show slow waves on virtual channel
vdr.add_rectangles(slowwaves_start, slowwaves_duration, 3);
%plot
vdr.run_window
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% B - Description of your night
%% Sleep metrics
% Compute those sleep metrics on your night
% Eventually, they can be retrieved manually with csv files
%SOL = Sleep Onset Latency
% two first consecutives epochs of sleep, ie first period of sleep which is at least 1 min long
idx = find(SleepStage(:,3)~=5 & SleepStage(:,2)-SleepStage(:,1)>=60,1);
sol = SleepStage(idx,1);
%WASO
% total duration of wake period after sleep onset and before waking
idx = find(SleepStage(:,3)==5 & SleepStage(:,1)>=sol);
idx(idx==size(SleepStage,1))=[];
waso = sum(SleepStage(idx,2) - SleepStage(idx,1));
%TST - total sleep time
idx = find(SleepStage(:,3)~=5);
tst = sum(SleepStage(idx,2) - SleepStage(idx,1));
%TIB - time in bed
% total duration of record
tib = SleepStage(end,2); % total time of record
%Sleep efficiency
% percentage of total sleep on duration of record
sleep_efficiency = 100 * tst / tib;
%last sleep - end of sleep period
idx = find(SleepStage(:,3)~=5,1,'last');
night_duration = SleepStage(idx,2);
%% Sleep stage duration and ratio (ratio of each substage on TST)
% Compute those ratios and durations
% can be retrieved manually with csv files
%N1
idx = find(SleepStage(:,3)==1);
n1_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
n1_ratio = n1_duration / tst;
%N2
idx = find(SleepStage(:,3)==2);
n2_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
n2_ratio = n2_duration / tst;
%N3
idx = find(SleepStage(:,3)==3);
n3_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
n3_ratio = n3_duration / tst;
%REM
idx = find(SleepStage(:,3)==4);
rem_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
rem_ratio = rem_duration / tst;
%% Slow waves : quantification and density across the night
%number and rate
% compute the total number of slow waves
nb_slowwaves = length(slowwaves_start); % total number of slow waves
% compute the slow wave rate (per min) = number of slow waves / duration of sleep
slowwaves_rate = nb_slowwaves / (tst/60); % slow waves per min of sleep
% write an algorythm, using a 'for loop' or a 'while loop' to compute the
% evolution of slow-waves density along the night
%parameters to compute slow waves density
record_duration = max(eeg{1}(:,1));
windowsize = 60;
nb_minute = floor(record_duration/windowsize);
timestamps = 0:nb_minute;
density_slowwaves = [];
for t=1:length(timestamps)
density_slowwaves(t) = sum(slowwaves_start>=timestamps(t)*60 & slowwaves_start<(timestamps(t)+1)*60);
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% A - Initialisation and visualisation
%info to fullfill
record_ref = 615580;
userAge = 22;
folderDreem = pwd;
%folders and files
folderRecords = fullfile(folderDreem,'Records');
folderNight = fullfile(folderRecords, num2str(record_ref));
filerecord = fullfile(folderNight, [num2str(record_ref) '_signals.mat']);
filehypno = fullfile(folderNight, [num2str(record_ref) '_hypno.mat']);
filespectro = fullfile(folderNight, [num2str(record_ref) '_spectrogram.mat']);
%load data
load(filerecord);
load(filehypno);
load(filespectro);
%% Visualisation
% - use the example below to visualise signals of your night on Matlab
% - you can also display signals you will compute or tag specif moments of the night
%signals to display
display(labels_eeg);
signals{1} = eeg{1};            titles{1} = labels_eeg{1};      y_borders{1} = [-200 200];
signals{2} = eeg{2};            titles{2} = labels_eeg{2};      y_borders{2} = [-200 200];
signals{3} = eeg{5};            titles{3} = labels_eeg{5};      y_borders{3} = [-200 200];
signals{4} = pulse_oximeter;    titles{4} = 'pulse oxymeter';   y_borders{4} = [-500 500];
signals{5} = breathing;         titles{5} = 'respiration';      y_borders{5} = [-3 3];
%Viewer initialization
vdr = ViewerDreemRecord(signals,'DisplayWindow',[5 5]);
for ch=1:vdr.nb_channel
vdr.set_title(titles{ch}, ch);
vdr.set_ymin(ch, y_borders{ch}(1));
vdr.set_ymax(ch, y_borders{ch}(2));
end
% show slow waves on virtual channel
vdr.add_rectangles(slowwaves_start, slowwaves_duration, 3);
%plot
vdr.run_window
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% B - Description of your night
%% Sleep metrics
% Compute those sleep metrics on your night
% Eventually, they can be retrieved manually with csv files
%SOL = Sleep Onset Latency
% two first consecutives epochs of sleep, ie first period of sleep which is at least 1 min long
idx = find(SleepStage(:,3)~=5 & SleepStage(:,2)-SleepStage(:,1)>=60,1);
sol = SleepStage(idx,1);
%WASO
% total duration of wake period after sleep onset and before waking
idx = find(SleepStage(:,3)==5 & SleepStage(:,1)>=sol);
idx(idx==size(SleepStage,1))=[];
waso = sum(SleepStage(idx,2) - SleepStage(idx,1));
%TST - total sleep time
idx = find(SleepStage(:,3)~=5);
tst = sum(SleepStage(idx,2) - SleepStage(idx,1));
%TIB - time in bed
% total duration of record
tib = SleepStage(end,2); % total time of record
%Sleep efficiency
% percentage of total sleep on duration of record
sleep_efficiency = 100 * tst / tib;
%last sleep - end of sleep period
idx = find(SleepStage(:,3)~=5,1,'last');
night_duration = SleepStage(idx,2);
%% Sleep stage duration and ratio (ratio of each substage on TST)
% Compute those ratios and durations
% can be retrieved manually with csv files
%N1
idx = find(SleepStage(:,3)==1);
n1_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
n1_ratio = n1_duration / tst;
%N2
idx = find(SleepStage(:,3)==2);
n2_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
n2_ratio = n2_duration / tst;
%N3
idx = find(SleepStage(:,3)==3);
n3_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
n3_ratio = n3_duration / tst;
%REM
idx = find(SleepStage(:,3)==4);
rem_duration = sum(SleepStage(idx,2) - SleepStage(idx,1));
rem_ratio = rem_duration / tst;
%% Slow waves : quantification and density across the night
%number and rate
% compute the total number of slow waves
nb_slowwaves = length(slowwaves_start); % total number of slow waves
% compute the slow wave rate (per min) = number of slow waves / duration of sleep
slowwaves_rate = nb_slowwaves / (tst/60); % slow waves per min of sleep
% write an algorythm, using a 'for loop' or a 'while loop' to compute the
% evolution of slow-waves density along the night
%parameters to compute slow waves density
record_duration = max(eeg{1}(:,1));
windowsize = 60;
nb_minute = floor(record_duration/windowsize);
timestamps = 0:nb_minute;
density_slowwaves = [];
for t=1:length(timestamps)
density_slowwaves(t) = sum(slowwaves_start>=timestamps(t)*60 & slowwaves_start<(timestamps(t)+1)*60);
end
figure, hold on
% Spectrogram of virtual channel (time in hours)
subplot(4,1,1), hold on
imagesc(times_spectro/3600, freq_spectro, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca, 'xlim', [0 max(times_spectro/3600)], 'ylim', [0.5 15]);
caxis([-5 10]),
title(['Spectrogram - ' label])
% heart rate evolution (time in hours)
subplot(4,1,2), hold on
plot(heart_rate(:,1)/3600, heart_rate(:,2), 'k', 'linewidth',2), hold on,
xlim([0 max(heart_rate(:,1)/3600)]), ylim([40 90]),
ylabel('pulse/min')
title('Heart rate');
% Hypnogram (time in hours)
subplot(4,1,3), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram');
%density of slow waves (time in hours)
subplot(4,1,4), hold on
plot(timestamps/60, density_slowwaves, 'k', 'linewidth',2), hold on,
xlim([0 max(timestamps/60)]), xlabel('Time (h)'), ylabel('density of slow waves per min')
title('Density of slow-waves');
line([1.3 1.3], ylim, 'color','r');
nb_slowwaves_beginning = sum(slowwaves_start>=sol & slowwaves_start<sol+2*3600);
nb_slowwaves_end = sum(slowwaves_start>=night_duration-2*3600 & slowwaves_start<night_duration);
figure, hold on
[power_fft, frequencies_fft] = fft_signaux_headband(breathing, 1440, 4110);
plot(frequencies_fft,power_fft,'r'); hold on
[power_fft, frequencies_fft] = fft_signaux_headband(breathing, 17010, 17700);
plot(frequencies_fft,power_fft,'b'); hold on
[power_fft, frequencies_fft] = fft_signaux_headband(breathing, 25740, 26190);
plot(frequencies_fft,power_fft,'g'); hold on
load(fullfile(folderDreem, 'population_data','PopulationData.mat'));
%plot options
scattersize = 25; % size of each point of the scatter plot
scatter_color = [0.3 0.3 0.3]; % color of each point of the scatter plot
figure, hold on
% TST Total sleep time
% - plot the data from the dreem database of TST (var: 'subject_sleep')
% - plot the linear regression for these data
% - is their a correlation between age and total sleep time ?
% - insert your data in this graph
%plot init
subplot(2,2,1), hold on
xlabel('age'), ylabel('duration (h)'), title('Total sleep time (TST)')
%data from DREEM
scatter(subject_age, subject_sleep, scattersize, scatter_color, 'filled'), hold on
% linear regression
pfit = polyfit(subject_age, subject_sleep,1);%fit
yfit = pfit(1)*subject_age + pfit(2);
plot(subject_age, yfit), hold on
% correlation ?
[rc, pv] = corrcoef(subject_age,subject_sleep); % correlations
rc = rc(1,2); pv=pv(1,2);
disp(['correlation r = ' num2str(round(rc,2)) ' - p = ' num2str(pv)'])
if pv>0.05
disp('no significant correlation')
end
% insert your data
plot(myAge,tst/3600,'bx','linewidth',3,'MarkerSize',20), %my point
TP_Dreem_Espci
cd(folderec)
filespectro = fullfile(folderec, num2str(records(i)), [num2str(records(i)) '_spectrogram.mat']);
TP_Dreem_Espci
a=[623733, 623725, 623708, 623668, 623625, 623334, 623284, 621699, 621629, 621483, 621470, 621464, 621391, 621160, 621121, 620199, 619795, 619421, 619328, 618795, 618403, 618083, 617954, 617212, 616704, 616638, 615580, 615138, 614996, 614222];
a=sort(a)
a = [609899, 610051, 610065, 611258, 611619, 611821, 612198, 613210, 614222, 614996, 615138, 615580, 616638, 616704, 617212, 618403, 618795, 619328, 619421, 619795, 620199, 621121, 621160, 621391, 621464, 621470, 621483, 621629, 621699, 623284, 623334, 623625, 623668, 623708, 623725, 623733, 624490, 625436, 625449, 625529, 625591];
a=sort(a,'descend')
a'
clear
%% INIT
%info to fullfill
record_ref = 169015;
userAge = 43;
%folders and files
folderDreem = pwd;
folderRecords = fullfile(folderDreem,'Records');
folderNight = fullfile(folderRecords, num2str(record_ref));
filerecord = fullfile(folderNight, [num2str(record_ref) '_signals.mat']);
filehypno = fullfile(folderNight, [num2str(record_ref) '_hypno.mat']);
filespectro = fullfile(folderNight, [num2str(record_ref) '_spectrogram.mat']);
%load data
load(filerecord);
load(filehypno);
load(filespectro);
% % UNCOMMENT the following section to plot hypnogram
% BEGINNING OF SECTION
figure, hold on
% Spectrogram of virtual channel (time in hours)
subplot(4,1,1), hold on
imagesc(times_spectro/3600, freq_spectro, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca, 'xlim', [0 max(times_spectro/3600)], 'ylim', [0.5 15]);
caxis([-5 10]),
title(['Spectrogram - ' label])
% heart rate evolution (time in hours)
subplot(4,1,2), hold on
plot(heart_rate(:,1)/3600, heart_rate(:,2), 'k', 'linewidth',2), hold on,
xlim([0 max(heart_rate(:,1)/3600)]), ylim([40 90]),
ylabel('pulse/min')
title('Heart rate');
% Hypnogram (time in hours)
subplot(4,1,3), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram');
%density of slow waves (time in hours)
% - add your data
subplot(4,1,4), hold on
xlabel('Time (h)'), ylabel('density of slow waves per min')
title('Density of slow-waves');
%  END OF SECTION
record_duration = max(eeg{1}(:,1));
windowsize = 60;
nb_minute = floor(record_duration/windowsize);
timestamps = 0:nb_minute;
density_slowwaves = [];
for t=1:length(timestamps)
density_slowwaves(t) = sum(slowwaves_start>=timestamps(t)*60 & slowwaves_start<(timestamps(t)+1)*60);
end
figure, hold on
% Spectrogram of virtual channel (time in hours)
subplot(4,1,1), hold on
imagesc(times_spectro/3600, freq_spectro, log(spectrogram)'), hold on
axis xy, ylabel('frequency'), hold on
set(gca, 'xlim', [0 max(times_spectro/3600)], 'ylim', [0.5 15]);
caxis([-5 10]),
title(['Spectrogram - ' label])
% heart rate evolution (time in hours)
subplot(4,1,2), hold on
plot(heart_rate(:,1)/3600, heart_rate(:,2), 'k', 'linewidth',2), hold on,
xlim([0 max(heart_rate(:,1)/3600)]), ylim([40 90]),
ylabel('pulse/min')
title('Heart rate');
% Hypnogram (time in hours)
subplot(4,1,3), hold on
ylabel_substage = {'N3','N2','N1','REM','WAKE'};
ytick_substage = [1 1.5 2 3 4]; %ordinate in graph
plot(t_hypno/3600, y_hypno,'k', 'linewidth',2), hold on,
xlim([0 max(t_hypno/3600)]), ylim([0.5 5]), set(gca,'Ytick',ytick_substage,'YTickLabel',ylabel_substage), hold on,
title('Hypnogram');
%density of slow waves (time in hours)
% - add your data
subplot(4,1,4), hold on
plot(timestamps/60, density_slowwaves, 'k', 'linewidth',2), hold on,
xlabel('Time (h)'), ylabel('density of slow waves per min')
title('Density of slow-waves');
clear
load('PopulationDataSlowWaves.mat')
save('PopulationDataSlowWaves.mat')
help ViewerDreemRecord
clear
1:10
1:13
1:11:50
res = [];
for i=1:100
if mod(i,7)==0
res = [res i];
end
end
disp(res)
i=0;
res = [];
while i<99
i=i+1;
if mod(i,11)==0
res = [res i];
end
end
disp(res)
i=0;
res = [];
while i<99
if mod(i,11)==0
res = [res i];
end
i=i+1;
end
disp(res)
LoadPathMOBs
clear
clc
edit utils_ID_figure.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem/Record/
folderOrigin = '/media/mobsjunior/Data2/TP_Dreem/Record/';
cd(folderOrigin)
clear
folderOrigin = '/media/mobsjunior/Data2/TP_Dreem/Record/';
folderTarget = '/home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem/Record/';
cd(folderOrigin)
x = '*.h5';
filelist = dir(x);
filelist(1).name
i=1
filelist(i).name(1:end-3)
clear
folderOrigin = '/media/mobsjunior/Data2/TP_Dreem/Record/';
folderTarget = '/home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem/Record/';
cd(folderOrigin)
x = '*.h5';
filelist = dir(x);
i=1
reffile = filelist(i).name(1:end-3);
movefile([reffile '.h5'], fullfile(folderTarget,reffile))
movefile(fullfile('heart_rate',[reffile '_heart.h5']), fullfile(folderTarget,reffile))
movefile(fullfile('quality',[reffile '_quality.h5']), fullfile(folderTarget,reffile))
movefile(fullfile('virtualchannel',[reffile '_vc.h5']), fullfile(folderTarget,reffile))
fullfile('heart_rate',[reffile '_heart.h5']
fullfile('heart_rate',[reffile '_heart.h5'])
clear
folderOrigin = '/media/mobsjunior/Data2/TP_Dreem/Record/';
folderTarget = '/home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem/Record/';
cd(folderOrigin)
x = '*.h5';
filelist = dir(x);
i=1
reffile = filelist(i).name(1:end-3);
mkdir(fullfile(folderTarget,reffile))
copyfile([reffile '.h5'], fullfile(folderTarget,reffile))
copyfile(fullfile('heart_rate',[reffile '_heart.h5']), fullfile(folderTarget,reffile))
copyfile(fullfile('quality',[reffile '_quality.h5']), fullfile(folderTarget,reffile))
copyfile(fullfile('virtualchannel',[reffile '_vc.h5']), fullfile(folderTarget,reffile))
clear
folderOrigin = '/media/mobsjunior/Data2/TP_Dreem/Record/';
folderTarget = '/home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem/Record/';
cd(folderOrigin)
x = '*.h5';
filelist = dir(x);
for i=1:length(filelist)
reffile = filelist(i).name(1:end-3);
mkdir(fullfile(folderTarget,reffile))
copyfile([reffile '.h5'], fullfile(folderTarget,reffile))
copyfile(fullfile('heart_rate',[reffile '_heart.h5']), fullfile(folderTarget,reffile))
copyfile(fullfile('quality',[reffile '_quality.h5']), fullfile(folderTarget,reffile))
copyfile(fullfile('virtualchannel',[reffile '_vc.h5']), fullfile(folderTarget,reffile))
end
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/TP_Dreem/Record/
clear
%% files
folderTP = fullfile(FolderDropBox, 'Dropbox/Mobs_member/KarimJr/TP_Dreem');
folderec = fullfile(folderTP, 'Record');
records = [625819,625733,625591,625436,623733,623334,621629,621483,621464,620199,619421,619390,618795,618403,617212,615580,614996,...
614222,613210,612198,611821,610065,609899,254867,193271,192400,172127,170725,169021,169015];
cd(folderec)
folderTP
ProcessData_DreemTP
cd /home/mobsjunior/Dropbox/DataKJ/TP_Dreem/Codes/
clear
ProcessData_DreemTP
%-- 30/11/2018 20:51:49 --%
cd /home/mobsjunior/Dropbox/DataKJ/TPDreemEspci/
clc
%-- 10/12/2018 10:24:51 --%
LoadPathMOBs
edit FindRipples_DB.m
cd /media/DataMOBsRAIDN/ProjectEmbReact/Mouse508/20170127/ProjectEmbReact_M508_20170127_BaselineSleep/
load('H_Low_Spectrum.mat', 'Spectro')
%-- 18/12/2018 13:33:03 --%
LoadPathMOBs
edit GetMuaNeurons_KJ.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Processing/getData/
LoadPathMOBs
load('Ripples.mat')
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150401/Breath-Mouse-243-244-01042015/Mouse243
load('RipplesdHPC25.mat', 'EpochRip')
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150310/Mouse243/Electrophy/Breath-Mouse-243-10032015
load('AllRipplesdHPC25.mat')
load('AllRipplesdHPC25.mat', 'dHPCrip')
Start(EpochRip);
Start(Epoch);
all(Start(Epoch)==Start(EpochRip))
Start(Epoch);
Start(EpochRip);
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Processing/getData/
which -all GetRipples
load('DownState.mat')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Processing/getData/
load('DeltaWaves.mat')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Processing/getData/
load('AllDeltaPFCx.mat', 'DeltaEpoch')
Start(DeltaEpoch);
load('AllDeltaPFCx.mat', 'tDelta')
[Start(DeltaEpoch) Range(tDelta)];
which GetSpindles
load('Spindles.mat')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Processing/getData/
load('Spindles.mat', 'spindles_low_PFCx')
edit isastring
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Processing/getData/
load('SleepScoring_OBGamma.mat', 'REMEpoch')
scoring = 'ob'
isastring(scoring, 'accelero' , 'ob')
isastring('dindon', 'accelero' , 'ob')
load('SleepScoring_OBGamma.mat', 'SWSEpoch')
load('SleepSubstages.mat')
load('SleepSubstages.mat', 'NameEpoch')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Processing/getData/
%-- 18/12/2018 16:24:42 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Processing/getData/
GetDeltaWaves
GetRipples
[tRipples, RipplesEpoch] = GetRipples
[MUA, nb_neurons] = GetMUAneurons(12)
down_states = GetDownStates
delta_waves = GetDeltaWaves
[tSpindles, SpindlesEpoch] = GetSpindles
[NREM, REM, Wake] = GetSleepScoring
[N1, N2, N3, REM, Wake] = GetSubstages
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Processing/getData/
cd /media/DataMOBsRAIDN/ProjectEmbReact/Mouse508/20170127/ProjectEmbReact_M508_20170127_BaselineSleep/
load('behavResources.mat', 'MovAcctsd')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Processing/getData/
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/CreateData/
edit GetDownStates.m
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150401/Breath-Mouse-243-244-01042015/Mouse243/LFPData/InfoLFP.mat')
clear
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150401/Breath-Mouse-243-244-01042015/Mouse243/LFPData/InfoLFP.mat')
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150401/Breath-Mouse-243-244-01042015/Mouse243/ChannelsToAnalyse/PFCx_clusters.mat')
clear
%check if exist and assign default value if not
if ~exist('area','var')
area='PFCx';
end
if ~exist('foldername','var')
foldername = pwd;
end
%params
durations = [100 200] * 10; %of down
binsize_met  = 5; %for mETAverage
nbBins_met   = 240; %for mETAverage
%% load down states
down_states = GetDownStates('area', area, 'foldername', foldername);
down_states = dropShortIntervals(down_states, durations(1));
down_states = dropLongIntervals(down_states, durations(2));
start_down = Start(down_states);
%check if exist and assign default value if not
if ~exist('foldername','var')
foldername = pwd;
end
if ~exist('scoring','var')
scoring='accelero';
end
if ~exist('recompute','var')
recompute=0;
end
%change directory
init_directory=pwd;
cd(foldername);
%% Find structures
load('LFPData/InfoLFP.mat');
%LFP structures
lfp_structures = unique(InfoLFP.structure);
lfp_structures(strcmpi(lfp_structures,'accelero'))=[];
lfp_structures(strcmpi(lfp_structures,'ekg'))=[];
lfp_structures(strcmpi(lfp_structures,'nan'))=[];
lfp_structures(strcmpi(lfp_structures,'ref'))=[];
lfp_structures(strcmpi(lfp_structures,'noise'))=[];
%cortical structures
list_cortex = {'PFCx', 'PaCx', 'AuCx', 'MoCx', 'PiCx','S1Cx'};
cortical_structures = cell(0);
for i=1:length(lfp_structures)
if any(strcmpi(lfp_structures{i}, list_cortex))
cortical_structures{end+1} = lfp_structures{i};
end
end
exist(fullfile(foldername,'SpikeData.mat'), 'file')~=2
exist(fullfile(foldername,'SpikeData.mat'), 'file')==2
%structures with spikes
for i=1:length(cortical_structures)
[NumNeurons, ~, ~] = GetSpikesFromStructure(cortical_structures{i}, 'remove_MUA',1,'verbose',0);
if ~isempty(NumNeurons)
down_structures{end+1} = cortical_structures{i};
end
end
down_structures
down_structures = cell(0);
for i=1:length(cortical_structures)
[NumNeurons, ~, ~] = GetSpikesFromStructure(cortical_structures{i}, 'remove_MUA',1,'verbose',0);
if ~isempty(NumNeurons)
down_structures{end+1} = cortical_structures{i};
end
end
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150311/Mouse243/Electrophy/Breath-Mouse-243-11032015/LFPData/InfoLFP.mat')
i=2
[NumNeurons, ~, ~] = GetSpikesFromStructure(cortical_structures{i}, 'remove_MUA',1,'verbose',0);
exist('hemisphere','var')
load('SpikeData.mat', 'TT')
load('SpikeData.mat', 'cellnames')
load('SpikeData.mat', 's')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Processing/
clear
load('InfoNeuronsPFCx.mat')
load('SpikeData.mat')
load('NeuronClassification.mat', 'UnitID')
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150401/Breath-Mouse-243-244-01042015/Mouse243/LFPData/InfoLFP.mat')
clear
foldername = pwd;
%% load data
load(fullfile(foldername,'SpikeData.mat'), 'S', 'tetrodeChannels', 'TT')
load(fullfile(foldername,'NeuronClassification.mat'), 'UnitID')
load(fullfile(foldername,'ChannelsToAnalyse','PFCx_clusters.mat'), 'clusters', 'channels')
load(fullfile(foldername,'LFPData','InfoLFP.mat'), 'InfoLFP')
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150401/Breath-Mouse-243-244-01042015/Mouse243/ChannelsToAnalyse/PFCx_locations.mat')
save ChannelsToAnalyse/PFCx_clusters.mat channels clusters
clear
%check if exist and assign default value if not
if ~exist('foldername','var')
foldername = pwd;
end
%% load data
load(fullfile(foldername,'SpikeData.mat'), 'S', 'tetrodeChannels', 'TT')
load(fullfile(foldername,'NeuronClassification.mat'), 'UnitID')
load(fullfile(foldername,'ChannelsToAnalyse','PFCx_clusters.mat'), 'clusters', 'channels')
load(fullfile(foldername,'LFPData','InfoLFP.mat'), 'InfoLFP')
% structure
neuron_structures = cell(0);
for n=1:length(TT)
neuron_channel = tetrodeChannels(TT{n}(1));
neuron_structures{n} = InfoLFP.structure(InfoLFP.channel==neuron_channel(1));
end
% structure
neuron_structures = cell(0);
for n=1:length(TT)
neuron_channel = tetrodeChannels{TT{n}(1)};
neuron_structures{n} = InfoLFP.structure(InfoLFP.channel==neuron_channel(1));
end
% firing rate
firingrates = nan(length(S), 1);
for i=1:length(S)
firingrates(i) = length(S{i}) / (max(Range(S{i}))*1e-4);
end
neuron_type = UnitID(:,1);
% layer / cluster
neuron_layer = nan(length(S), 1);
for n=1:length(TT)
neuron_channels = tetrodeChannels(TT{n}(1));
idx = ismember(channels, neuron_channels);
if any(idx)
neuron_layer(n) = clusters(find(idx,1));
end
end
neuron_layer = nan(length(S), 1);
for n=1:length(TT)
neuron_channels = tetrodeChannels{TT{n}(1)};
idx = ismember(channels, neuron_channels);
if any(idx)
neuron_layer(n) = clusters(find(idx,1));
end
end
load('InfoNeuronsPFCx.mat', 'InfoNeurons')
% soloist
neuron_soloist = nan(length(S), 1);
list_structures = unique(neuron_structures);
for i=1:length(list_structures)
NumNeurons = find(strcmpi(neuron_structures,list_structures{i}));
if length(NumNeurons)>3
[numSoloist, numChorist] = FindSoloistChorist_KJ(S, NumNeurons);
neuron_soloist(numSoloist) = 1;
neuron_soloist(numChorist) = 0;
end
end
neuron_soloist = nan(length(S), 1);
list_structures = unique(neuron_structures);
list_structures = unique(neuron_structures);
list_structures = unique(neuron_structures');
list_structures = unique(neuron_structures(1:2));
list_structures = unique(neuron_structures(1));
list_structures = unique(table(neuron_structures));
list_structures = unique(table(neuron_structures'));
unique(neuron_structures);
unique({'PFCx','PFCx','PFCx','PFCx','PFCx'});
A={'PFCx'};
A{end+1}='PFCx';
unique(A)
unique(neuron_structures);
InfoLFP.channel==neuron_channel(1)
InfoLFP.structure(InfoLFP.channel==neuron_channel(1))
neuron_structures = cell(0);
for n=1:length(TT)
neuron_channel = tetrodeChannels{TT{n}(1)};
neuron_structures{n} = InfoLFP.structure{InfoLFP.channel==neuron_channel(1)};
end
unique(neuron_structures);
% soloist
neuron_soloist = nan(length(S), 1);
list_structures = unique(neuron_structures);
for i=1:length(list_structures)
NumNeurons = find(strcmpi(neuron_structures,list_structures{i}));
if length(NumNeurons)>3
[numSoloist, numChorist] = FindSoloistChorist_KJ(S, NumNeurons);
neuron_soloist(numSoloist) = 1;
neuron_soloist(numChorist) = 0;
end
end
edit MergePathForExperiment.m
edit IntersectPathForExperiment.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/
RipplesAndLfpOnTransitionsPlot
TonesAndLfpOnTransitionsPlot
figure, hold on
labels_curve = {'down>up', 'End down', 'up>up'};
colors_curve = {'b', 'r', [0.3 0.3 0.3]};
gap = [0.08 0.05];
for c=1:nb_clusters
subtightplot(2,3,c,gap), hold on
h(1) = plot(x_met, mean_tones.down.up{c} , 'color', colors_curve{1}); hold on
h(2) = plot(x_met, mean_tones.end_down{c} , 'color', colors_curve{2}); hold on
h(3) = plot(x_met, mean_tones.up.up{c} , 'color', colors_curve{3}); hold on
line([0 0], ylim,'color',[0.7 0.7 0.7],'linewidth',1), hold on
xlabel('time from tones'), xlim([-400 800]),
legend(h, labels_curve);
title(['layer ' num2str(c)])
end
figure, hold on
labels_curve = {'down>up', 'End down', 'up>up'};
colors_curve = {'b', 'r', [0.3 0.3 0.3]};
gap = [0.08 0.05];
for c=1:nb_clusters
subtightplot(2,3,c,gap), hold on
clear h
h(1) = plot(x_met, mean_tones.down.up{c} , 'color', colors_curve{1}); hold on
h(2) = plot(x_met, mean_tones.end_down{c} , 'color', colors_curve{2}); hold on
h(3) = plot(x_met, mean_tones.up.up{c} , 'color', colors_curve{3}); hold on
line([0 0], ylim,'color',[0.7 0.7 0.7],'linewidth',1), hold on
xlabel('time from tones'), xlim([-400 800]),
legend(h, labels_curve);
title(['layer ' num2str(c)])
end
line([0 0], ylim,'color',[0.7 0.7 0.7],'linewidth',1), hold on
%% plot 2
figure, hold on
labels_curve = {'down>up', 'End down', 'up>up'};
colors_curve = {'b', 'r', [1 0.27 0]};
gap = [0.08 0.05];
for c=1:nb_clusters
subtightplot(2,3,c,gap), hold on
clear h
h(1) = plot(x_met, mean_tones.down.up{c} , 'color', colors_curve{1}); hold on
h(2) = plot(x_met, mean_tones.end_down{c} , 'color', colors_curve{2}); hold on
h(3) = plot(x_met, mean_tones.up.up{c} , 'color', colors_curve{3}); hold on
line([0 0], ylim,'color',[0.7 0.7 0.7],'linewidth',1), hold on
xlabel('time from tones'), xlim([-400 800]),
legend(h, labels_curve);
title(['layer ' num2str(c)])
end
TonesAndLfpOnTransitionsPlot
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243/ChannelsToAnalyse/PFCx_clusters.mat')
clear
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243/ChannelsToAnalyse/PFCx_locations.mat')
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243/ChannelsToAnalyse/PFCx_clusters.mat')
save ChannelsToAnalyse/PFCx_clusters.mat channels clusters
edit ParcoursUpRipplesDescriptionPlot.m
%-- 03/01/2019 16:41:32 --%
LoadPathMOBs
edit ParcoursUpRipplesDescriptionPlot.m
ParcoursUpRipplesDescriptionPlot
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown
edit FigNeuronsResponseRipples.m
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
p=1
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p tonepeth_res
% tones
try
load('behavResources.mat', 'ToneEvent')
ToneEvent;
catch
try
load('DeltaSleepEvent.mat', 'TONEtime2')
ToneEvent = ts(TONEtime2 + Dir.delay{p}*1E4) ;
catch
continue
end
end
load('behavResources.mat', 'ToneEvent')
ToneEvent;
load('InfoNeuronsPFCx.mat')
load('SpikesToAnalyse/PFCx_Neurons.mat', 'number')
NumNeurons = number;
load('InfoNeuronsPFCx.mat', 'InfoNeurons')
clear MatInfoNeurons
load('SpikeData.mat', 'S')
load('InfoNeuronsPFCx.mat', 'InfoNeurons')
NumNeurons = InfoNeurons.NumNeurons;
S = S(NumNeurons);
%-- 03/01/2019 17:13:44 --%
LoadPathMOBs
clear
Dir = PathForExperimentsSleepRipplesSpikes('Basal');
Dir = CheckPathForExperiment_KJ(Dir);
%get data for each record
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
MakeData_CorticalClusters;
MakeData_NeuronsInfo
end
clear
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
clc
p=6
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
edit ParcoursProcessingBasalSleepSpike
p=7
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
load MeanWaveform W
DropBoxLocation = fullfile(FolderDropBox,'Dropbox','Kteam');
rmpath([FolderDropBox 'Dropbox/Kteam/PrgMatlab/Fra/UtilsStats/']) %conflict with kmeans of Fra
MakeData_ClassifySpikeWaveforms(W,DropBoxLocation,0);
CreateSpikeToAnalyse_KJ;
SleepScoringOBgamma('PlotFigure',1)
SleepScoringOBGamma('PlotFigure',1)
y
n
1
p=p+1
Dir.path'
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
%get data for each record
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
SleepScoring_Accelero_OBgamma('PlotFigure',1)
end
y
n
1
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
%get data for each record
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
SleepScoringOBgamma('PlotFigure',1)
end
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
%get data for each record
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
SleepScoringOBGamma('PlotFigure',1)
end
y
eval(['tSpindles_' Info.structure suffixe ' = tSpindles;'])
CreateSleepSignals('recompute',0,'scoring','ob');
%-- 03/01/2019 18:41:20 --%
LoadPathMOBs
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
%get data for each record
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
SleepScoringOBGamma('PlotFigure',1)
end
y
n
1
y
n
1
y
n
1
y
n
1
l
1
load('NeuronClassification.mat')
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
%get data for each record
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
if exist('NeuronClassification.mat','file')~=2
load MeanWaveform W
DropBoxLocation = fullfile(FolderDropBox,'Dropbox','Kteam');
rmpath([FolderDropBox 'Dropbox/Kteam/PrgMatlab/Fra/UtilsStats/']) %conflict with kmeans of Fra
MakeData_ClassifySpikeWaveforms(W,DropBoxLocation,0);
end
end
edit MakeData_CorticalClusters.m
edit MakeData_NeuronsInfo.m
clear
Dir = PathForExperimentsSleepRipplesSpikes('basal');
Dir = CheckPathForExperiment_KJ(Dir);
%get data for each record
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
try
CreateSleepSignals('recompute',1,'scoring','ob');
[featuresNREM, Namesfeatures, EpochSleep, NoiseEpoch, scoring] = FindNREMfeatures('scoring','ob');
save('FeaturesScoring', 'featuresNREM', 'Namesfeatures', 'EpochSleep', 'NoiseEpoch', 'scoring')
[Epoch, NameEpoch] = SubstagesScoring(featuresNREM, NoiseEpoch);
save('SleepSubstages', 'Epoch', 'NameEpoch')
catch
disp('error for this record in sleep processing')
end
try
MakeData_CorticalClusters;
MakeData_NeuronsInfo;
catch
disp('error for this record in make data')
end
end
clear
edit FigNeuronsResponseRipples.m
load('InfoNeuronsAll.mat', 'InfoNeurons')
load('SpikeData.mat', 'S')
load('InfoNeuronsAll.mat', 'InfoNeurons')
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx'));
S = S(NumNeurons);
ParcoursRipplesNeuronCrossCorr
clc
FigNeuronsResponseRipples
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown
FigNeuronsPutativeResponse1
p=1
neuroninfo = rippeth_res.infoneurons{p};
neuronsclass = neuroninfo.putative(strcmpi(neuroninfo.structure,'PFCx'));
FigNeuronsPutativeResponse1
%neuron info
AllNeuronClass = [];
AllNeuronLayer = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'rdmtone') || night_tones==0
neuroninfo = rippeth_res.infoneurons{p};
AllNeuronClass = [AllNeuronClass ; neuroninfo.putative(strcmpi(neuroninfo.structure,'PFCx'))];
AllNeuronLayer = [AllNeuronLayer ; neuroninfo.layer(strcmpi(neuroninfo.structure,'PFCx'))];
end
end
unique(AllNeuronLayer);
FigNeuronsPutativeResponse1
NeuronsResponseToDown_KJ
clear
%% Response to all ripples
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
AllPeth = [];
for p=1:length(rippeth_res.path)
%     if strcmpi(rippeth_res.manipe{p}, 'rdmtone')
%         AllPeth = [AllPeth ; rippeth_res.MatN2N3{p}];
%     end
AllPeth = [AllPeth ; rippeth_res.MatN2N3{p}];
end
t_corr = rippeth_res.t_corr{1};
Zpeth = zscore(AllPeth,[],2);
[~,idmax] = max(Zpeth,[],2);
[~,id2rip] = sort(idmax);
Opeth_rip = Zpeth(id2rip,:);
clearvars -except Opeth_rip id2rip
ParcoursDownNeuronCrossCorr
NeuronsResponseToDown_KJ
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown
FigNeuronsPutativeResponse1
FigNeuronsPutativeResponse3
FigNeuronsResponseRipples3
FigNeuronsPutativeResponse3
neuronLayer{i}
unique(AllNeuronLayer);
FigNeuronsPutativeResponse3
edit InfoOnNeuronsResponsiveToRipples.m
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
night_tones = 1;
InfoOnNeuronsResponsiveToRipples
InfoOnNeuronsResponsiveToRipples
InfoOnNeuronsResponsiveToRipplesPlot
FigNeuronsPutativeResponse3
sum(AllNeuronClass<0)
sum(AllNeuronClass>0)
sum(AllNeuronClass>=0)
sum(AllNeuronClass<=0)
FigNeuronsPutativeResponse3
clear
night_tones = 1;
%% Response to all ripples
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
%neuron info
AllNeuronClass = [];
AllNeuronLayer = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'rdmtone') || night_tones==0
neuroninfo = rippeth_res.infoneurons{p};
AllNeuronClass = [AllNeuronClass ; neuroninfo.putative(strcmpi(neuroninfo.structure,'PFCx'))];
AllNeuronLayer = [AllNeuronLayer ; neuroninfo.layer(strcmpi(neuroninfo.structure,'PFCx'))];
end
end
%response
rip_data{1} = rippeth_res.MatN1; rip_data{2} = rippeth_res.MatN2; rip_data{3} = rippeth_res.MatN3;
rip_data{4} = rippeth_res.MatREM; rip_data{5} = rippeth_res.MatWake; rip_data{6} = rippeth_res.MatRipples;
rip_data{7} = rippeth_res.MatN2N3;
t_corr = rippeth_res.t_corr{1};
for s=1:7
%pool
AllPeth{s} = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'rdmtone') || night_tones==0
AllPeth{s} = [AllPeth{s} ; rip_data{s}{p}];
end
end
%zscore and order
Zpeth_rip{s} = zscore(AllPeth{s},[],2);
[~,idmax{s}] = max(Zpeth_rip{s},[],2);
[~,idx_rip{s}] = sort(idmax{s});
Opeth_rip{s} = Zpeth_rip{s}(idx_rip{s},:);
end
FigNeuronsPutativeResponse3
clc
tonepeth_res.path'
rippeth_res.path(strcmpi(rippeth_res.manipe{p}, 'rdmtone'))'
strcmpi(rippeth_res.manipe{p}, 'rdmtone')
rippeth_res.path(strcmpi(rippeth_res.manipe, 'rdmtone'))'
FigNeuronsPutativeResponse3
clear
night_tones = 1;
%% Response to all ripples
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
%response
rip_data{1} = rippeth_res.MatN1; rip_data{2} = rippeth_res.MatN2; rip_data{3} = rippeth_res.MatN3;
rip_data{4} = rippeth_res.MatREM; rip_data{5} = rippeth_res.MatWake; rip_data{6} = rippeth_res.MatRipples;
rip_data{7} = rippeth_res.MatN2N3;
t_corr = rippeth_res.t_corr{1};
for s=1:7
%pool
AllPeth{s} = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'rdmtone') || night_tones==0
AllPeth{s} = [AllPeth{s} ; rip_data{s}{p}];
end
end
%zscore and order
Zpeth_rip{s} = zscore(AllPeth{s},[],2);
[~,idmax{s}] = max(Zpeth_rip{s},[],2);
[~,idx_rip{s}] = sort(idmax{s});
Opeth_rip{s} = Zpeth_rip{s}(idx_rip{s},:);
end
%% Response to tones
load(fullfile(FolderDeltaDataKJ,'ParcoursToneNeuronCrossCorr.mat'))
AllPeth = [];
N2Peth = [];
N3Peth = [];
for p=1:length(tonepeth_res.path)
if strcmpi(tonepeth_res.manipe{p}, 'rdmtone') || night_tones==0
AllPeth = [AllPeth ; tonepeth_res.MatTones{p}];
N2Peth = [N2Peth ; tonepeth_res.MatN2{p}];
N3Peth = [N3Peth ; tonepeth_res.MatN3{p}];
end
end
%neuron info
AllNeuronClass = [];
AllNeuronLayer = [];
for p=1:length(tonepeth_res.path)
if strcmpi(tonepeth_res.manipe{p}, 'rdmtone') || night_tones==0
neuroninfo = rippeth_res.infoneurons{p};
AllNeuronClass = [AllNeuronClass ; neuroninfo.putative(strcmpi(neuroninfo.structure,'PFCx'))];
AllNeuronLayer = [AllNeuronLayer ; neuroninfo.layer(strcmpi(neuroninfo.structure,'PFCx'))];
end
end
%All
Zpeth_tones = zscore(AllPeth,[],2);
%N2
Zpeth_n2 = zscore(N2Peth,[],2);
%N3
Zpeth_n3 = zscore(N3Peth,[],2);
%neuron info
AllNeuronClass = [];
AllNeuronLayer = [];
for p=1:length(tonepeth_res.path)
if strcmpi(tonepeth_res.manipe{p}, 'rdmtone') || night_tones==0
neuroninfo = tonepeth_res.infoneurons{p};
AllNeuronClass = [AllNeuronClass ; neuroninfo.putative(strcmpi(neuroninfo.structure,'PFCx'))];
AllNeuronLayer = [AllNeuronLayer ; neuroninfo.layer(strcmpi(neuroninfo.structure,'PFCx'))];
end
end
%All
Zpeth_tones = zscore(AllPeth,[],2);
%N2
Zpeth_n2 = zscore(N2Peth,[],2);
%N3
Zpeth_n3 = zscore(N3Peth,[],2);
FigNeuronsPutativeResponse3
ParcoursRipplesNeuronCrossCorr
clc
FigNeuronsPutativeResponse3
FigNeuronsPutativeResponse1
FigNeuronsPutativeResponse3
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
ResponseOfInterPyr
NeuronClass = InfoNeurons.putative(strcmpi(InfoNeurons.structure,'PFCx'));
NeuronLayer = InfoNeurons.layer(strcmpi(InfoNeurons.structure,'PFCx'));
neuronClass{1} = find(NeuronClass<0);
neuronClass{2} = find(NeuronClass>0);
for l=1:5
neuronLayer{l} = find(NeuronLayer==l);
end
InfoNeurons.firingrate(neuronClass{1})
hist(InfoNeurons.firingrate)
hist(InfoNeurons.firingrate,20)
%% Neuron info
InfoNeuronClass = InfoNeurons.putative(strcmpi(InfoNeurons.structure,'PFCx'));
InfoNeuronLayer = InfoNeurons.layer(strcmpi(InfoNeurons.structure,'PFCx'));
InfoNeuronFR = InfoNeurons.firingrate(strcmpi(InfoNeurons.structure,'PFCx'));
%class
neuronClass{1} = find(InfoNeuronClass<0);
neuronClass{2} = find(InfoNeuronClass>0);
%layer
for l=1:5
neuronLayer{l} = find(InfoNeuronLayer==l);
end
%firing rate
neuronFR{1} = find(InfoNeuronFR<=7);
neuronFR{2} = find(InfoNeuronFR>7);
ResponseOfInterPyr
%% Plot 1
colori_neur = {[0.13 0.54 0.13],'b','r','k'};
fontsize=15;
figure, hold on
%response ripples
subplot(2,2,1), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(Zripples(neuronClass{i},:)),2),'color', colori_neur{i});
end
ylim([-1 2]),xlim([-400 400]),
set(gca,'ylim',[-1 2.3], 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,'interneuron','pyramidal')
title('on ripples')
%response tones
subplot(2,2,2), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(Ztones(neuronClass{i},:)),2),'color', colori_neur{i});
end
set(gca,'ylim',[-1 1], 'xlim',[-400 400], 'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones')
%response tones N2
subplot(2,2,3), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(ZtoneN2(neuronClass{i},:)),2),'color', colori_neur{i});
end
set(gca,'ylim',[-1 1], 'xlim',[-400 400], 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
xlabel('ms'),
title('on tones in N2')
%response tones N3
subplot(2,2,4), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(ZtoneN2(neuronClass{i},:)),2),'color', colori_neur{i});
end
set(gca,'ylim',[-1 1], 'xlim',[-400 400], 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
xlabel('ms'),
title('on tones in N3')
ResponseOfInterPyr
i
colori_neur{i})
colori_neur{i}
neuronLayer{i}
ResponseOfInterPyr
colori_neur = {[0.13 0.54 0.13],'b','r','k'};
fontsize=15;
minlayer = 4;
figure, hold on
%response ripples
subplot(2,2,1), hold on
for l=minlayer:length(neuronLayer)
i=l-minlayer+1;
hold on, h(i) = plot(t_corr,runmean(mean(Zripples(neuronLayer{l},:)),2),'color', colori_neur{i});
leg{i} = num2str(i);
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,leg), clear leg
title('on ripples')
figure, hold on
%response ripples
subplot(2,2,1), hold on
for l=minlayer:length(neuronLayer)
i=l-minlayer+1;
hold on, h(i) = plot(t_corr,runmean(mean(Zripples(neuronLayer{l},:)),2),'color', colori_neur{i});
leg{i} = num2str(l);
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,leg), clear leg
title('on ripples')
ResponseOfInterPyr
[InfoNeuronClass InfoNeuronLayer InfoNeuronFR];
ResponseOfInterPyr
[InfoNeuronClass InfoNeuronLayer InfoNeuronFR];
isempty(neuronLayer)
isempty(neuronLayer(:))
find(~cellfun(@isempty,neuronlayer))
find(~cellfun(@isempty,neuronLayer))
min(find(~cellfun(@isempty,neuronLayer)))
ResponseOfInterPyr
Dir.delay'
ResponseOfInterPyr
edit FigNeuronsResponseRipples2.m
FigNeuronsResponseRipples2
ParcoursRipplesNoDownbefNeuronCrossCorr
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
ParcoursRipplesNoDownNeuronCrossCorr
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
AssessToneEffectMUAtypeTransitionsPlot
ResponseOfInterPyr
figure, hold on
%response ripples
subplot(2,3,1), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(Zripples(neuronClass{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,'pyramidal','interneuron')
title('on ripples')
%response ripples no down before
subplot(2,3,2), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(ZripplesBef(neuronClass{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,'pyramidal','interneuron')
title('ripples no down before')
%response ripples no down around
subplot(2,3,3), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(ZripplesCorr(neuronClass{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,'pyramidal','interneuron')
title('ripples no down around')
%response tones up>up
subplot(2,3,4), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesUpUp(neuronClass{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones up>up')
%response tones up>down
subplot(2,3,5), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesUpDown(neuronClass{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones up>down')
%response tones down>up
subplot(2,3,6), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesDownUp(neuronClass{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones down>up')
ResponseOfInterPyr
Dir.name'
mean(ZtonesUpUp(neuronClass{i},:));
length(ToneEvent)
load('behavResources.mat')
load('behavResources.mat', 'ToneEvent')
length(ToneEvent)
load('DeltaSleepEvent.mat')
load('DeltaSleepEvent.mat', 'TONEtime2')
ToneEvent = ts(TONEtime2 + Dir.delay{p}*1E4) ;
save behavResources.mat -append ToneEvent
load('behavResources.mat', 'ToneEvent')
length(ToneEvent)
%-- 08/01/2019 17:13:08 --%
LoadPathMOBs
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
%get data for each record
for p=1:length(Dir.path)
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
% tones
try
load('behavResources.mat', 'ToneEvent')
ToneEvent;
catch
load('DeltaSleepEvent.mat', 'TONEtime2')
ToneEvent = ts(TONEtime2 + Dir.delay{p}*1E4) ;
save behavResources.mat -append ToneEvent
end
end
Dir.name
Dir.name'
ResponseOfInterPyr
cd
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/LabMeeting/20190107/
ResponseOfInterPyr2
%-- 08/01/2019 17:44:55 --%
LoadPathMOBs
ResponseOfInterPyr2
FigNeuronsResponseRipples3
ParcoursToneNeuronCrossCorr
FigNeuronsResponseRipples3
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243/SpikesToAnalyse/PFCx_Neurons.mat', 'number')
ParcoursToneNeuronCrossCorr
FigNeuronsResponseRipples3
%-- 08/01/2019 17:56:54 --%
LoadPathMOBs
FigNeuronsResponseRipples3
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
ParcoursResponseTypeNeurons
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
%% concatenate and zscore
MatRipples = [];
MatRipplesBef = [];
MatRipplesCorr = [];
MatTonesUpUP = [];
MatTonesUpDown = [];
MatTonesDownUp = [];
for p=1:4% length(resp_res.path)
MatRipples     = [MatRipples ; resp_res.MatRipples];
MatRipplesBef  = [MatRipplesBef ; resp_res.MatRipplesBef];
MatRipplesCorr = [MatRipplesCorr ; resp_res.MatRipplesCorr];
MatTonesUpUP   = [MatTonesUpUP ; resp_res.MatTonesUpUP];
MatTonesUpDown = [MatTonesUpDown ; resp_res.MatTonesUpDown];
MatTonesDownUp = [MatTonesDownUp ; resp_res.MatTonesDownUp];
end
Zripples = zscore(MatRipples,[],2);
ZripplesBef = zscore(MatRipplesBef,[],2);
ZripplesCorr = zscore(MatRipplesCorr,[],2);
ZtonesUpUp = zscore(MatTonesUpUP,[],2);
ZtonesUpDown = zscore(MatTonesUpDown,[],2);
ZtonesDownUp = zscore(MatTonesDownUp,[],2);
ParcoursResponseTypeNeurons
edit ResponseOfInterPyr
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
%% concatenate and zscore
MatRipples = [];
MatRipplesBef = [];
MatRipplesCorr = [];
MatTonesUpUP = [];
MatTonesUpDown = [];
MatTonesDownUp = [];
InfoNeuronClass = [];
InfoNeuronLayer = [];
InfoNeuronFR = [];
for p=1:4% length(resp_res.path)
MatRipples     = [MatRipples ; resp_res.MatRipples];
MatRipplesBef  = [MatRipplesBef ; resp_res.MatRipplesBef];
MatRipplesCorr = [MatRipplesCorr ; resp_res.];
MatTonesUpUP   = [MatTonesUpUP ; resp_res.MatTonesUpUP];
MatTonesUpDown = [MatTonesUpDown ; resp_res.MatTonesUpDown];
MatTonesDownUp = [MatTonesDownUp ; resp_res.MatTonesDownUp];
InfoNeuronClass = [InfoNeuronClass resp_res.InfoNeuronClass{p}];
InfoNeuronLayer = [InfoNeuronLayer resp_res.InfoNeuronLayer{p}];
InfoNeuronFR = [InfoNeuronFR resp_res.InfoNeuronFR{p}];
end
Zripples = zscore(MatRipples,[],2);
ZripplesBef = zscore(MatRipplesBef,[],2);
ZripplesCorr = zscore(MatRipplesCorr,[],2);
ZtonesUpUp = zscore(MatTonesUpUP,[],2);
ZtonesUpDown = zscore(MatTonesUpDown,[],2);
ZtonesDownUp = zscore(MatTonesDownUp,[],2);
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
%% concatenate and zscore
MatRipples = [];
MatRipplesBef = [];
MatRipplesCorr = [];
MatTonesUpUP = [];
MatTonesUpDown = [];
MatTonesDownUp = [];
InfoNeuronClass = [];
InfoNeuronLayer = [];
InfoNeuronFR = [];
for p=1:4% length(resp_res.path)
MatRipples     = [MatRipples ; resp_res.MatRipples{p}];
MatRipplesBef  = [MatRipplesBef ; resp_res.MatRipplesBef{p}];
MatRipplesCorr = [MatRipplesCorr ; resp_res.MatRipplesCorr{p}];
MatTonesUpUP   = [MatTonesUpUP ; resp_res.MatTonesUpUP{p}];
MatTonesUpDown = [MatTonesUpDown ; resp_res.MatTonesUpDown{p}];
MatTonesDownUp = [MatTonesDownUp ; resp_res.MatTonesDownUp{p}];
InfoNeuronClass = [InfoNeuronClass resp_res.InfoNeuronClass{p}];
InfoNeuronLayer = [InfoNeuronLayer resp_res.InfoNeuronLayer{p}];
InfoNeuronFR = [InfoNeuronFR resp_res.InfoNeuronFR{p}];
end
Zripples = zscore(MatRipples,[],2);
ZripplesBef = zscore(MatRipplesBef,[],2);
ZripplesCorr = zscore(MatRipplesCorr,[],2);
ZtonesUpUp = zscore(MatTonesUpUP,[],2);
ZtonesUpDown = zscore(MatTonesUpDown,[],2);
ZtonesDownUp = zscore(MatTonesDownUp,[],2);
ParcoursResponseTypeNeuronsPlot1
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
%% concatenate and zscore
MatRipples = [];
MatRipplesBef = [];
MatRipplesCorr = [];
MatTonesUpUP = [];
MatTonesUpDown = [];
MatTonesDownUp = [];
InfoNeuronClass = [];
InfoNeuronLayer = [];
InfoNeuronFR = [];
for p=1:4% length(resp_res.path)
MatRipples     = [MatRipples ; resp_res.MatRipples{p}];
MatRipplesBef  = [MatRipplesBef ; resp_res.MatRipplesBef{p}];
MatRipplesCorr = [MatRipplesCorr ; resp_res.MatRipplesCorr{p}];
MatTonesUpUP   = [MatTonesUpUP ; resp_res.MatTonesUpUP{p}];
MatTonesUpDown = [MatTonesUpDown ; resp_res.MatTonesUpDown{p}];
MatTonesDownUp = [MatTonesDownUp ; resp_res.MatTonesDownUp{p}];
InfoNeuronClass = [InfoNeuronClass ; resp_res.InfoNeuronClass{p}];
InfoNeuronLayer = [InfoNeuronLayer ; resp_res.InfoNeuronLayer{p}];
InfoNeuronFR = [InfoNeuronFR ; resp_res.InfoNeuronFR{p}];
end
Zripples = zscore(MatRipples,[],2);
ZripplesBef = zscore(MatRipplesBef,[],2);
ZripplesCorr = zscore(MatRipplesCorr,[],2);
ZtonesUpUp = zscore(MatTonesUpUP,[],2);
ZtonesUpDown = zscore(MatTonesUpDown,[],2);
ZtonesDownUp = zscore(MatTonesDownUp,[],2);
%% Neuron info
%class
neuronClass{1} = find(InfoNeuronClass>0);
neuronClass{2} = find(InfoNeuronClass<0);
%layer
for l=1:5
neuronLayer{l} = find(InfoNeuronLayer==l);
end
%firing rate
neuronFR{1} = find(InfoNeuronFR<=7);
neuronFR{2} = find(InfoNeuronFR>7);
ParcoursResponseTypeNeuronsPlot1
unique(neuronLayer)
edit ResponseOfInterPyr2
minlayer = find(~cellfun(@isempty,neuronLayer)),1);
minlayer = find(~cellfun(@isempty,neuronLayer)),'first',1);
find(~cellfun(@isempty,neuronLayer)))
find(~cellfun(@isempty,neuronLayer))
find(~cellfun(@isempty,neuronLayer),1)
ParcoursResponseTypeNeuronsPlot1
for p=1:length(resp_res.path)
if sum(resp_res.InfoNeuronLayer{p}==2)
disp(resp_res.path{p})
disp(sum(resp_res.InfoNeuronLayer{p}==2))
end
end
for p=1:length(resp_res.path)
if sum(resp_res.InfoNeuronLayer{p}==3)
disp(resp_res.path{p})
disp(sum(resp_res.InfoNeuronLayer{p}==3))
end
end
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
ParcoursResponseRipplesTypeNeurons
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
ParcoursResponseRipplesTypeNeuronsPlot
cd /media/DataMOBsRAIDN/ProjectEmbReact/Mouse508/20170203/ProjectEmbReact_M508_20170203_SoundCond/
load('behavResources_SB.mat', 'TTLInfo')
clear
edit ResponseOfInterPyr2
edit ResponseOfInterPyr
%params
binsize_cc = 2;
nbins_cc = 400;
edit MakeData_CorticalClusters.m
clear
%check if exist and assign default value if not
if ~exist('foldername','var')
foldername = pwd;
end
%params
area='PFCx';
durations = [100 200] * 10; %of down
binsize_met  = 5; %for mETAverage
nbBins_met   = 240; %for mETAverage
%% load down states
down_states = GetDownStates('area', area, 'foldername', foldername);
down_states = dropShortIntervals(down_states, durations(1));
down_states = dropLongIntervals(down_states, durations(2));
start_down = Start(down_states);
%% list of cortical channels
Signals = cell(0);
load(fullfile(foldername, 'LFPData', 'InfoLFP.mat'))
channels = InfoLFP.channel(strcmpi(InfoLFP.structure,'PFCx'));
for ch=1:length(channels)
load(['LFPData/LFP' num2str(channels(ch))], 'LFP')
Signals{ch} = LFP; clear LFP
end
%%
for ch=1:length(channels)
[m,~,tps] = mETAverage(start_down, Range(Signals{ch}), Data(Signals{ch}), binsize_met, nbBins_met);
meandown{ch}(:,1) = tps; meandown{ch}(:,2) = m;
end
%% Put new points in clusters
clusters = [];
%features
for ch=1:length(channels)
x = meandown{ch}(:,1);
y = meandown{ch}(:,2);
%postive deflection
if sum(y(x>0 & x<=150))>0
x1 = x>0 & x<=200;
x2 = x>150 & x<=350;
feat1 = max(y(x1));
feat2 = min(y(x2));
%negative deflection
else
x1 = x>0 & x<=250;
x2 = x>200 & x<=350;
feat1 = min(y(x1));
feat2 = max(y(x2));
end
% x and y on 2D space
xp = feat1;
yp = feat2;
% clustering
if yp>(0.8*xp-200)
clusters(ch) = 1;
elseif yp<=(0.8*xp-200) && yp>(0.8*xp-900)
clusters(ch) = 2;
elseif yp<=(0.8*xp-900) && yp>(0.8*xp-1600)
clusters(ch) = 3;
elseif yp<=(0.8*xp-1600) && yp>(0.7*xp-2140)
clusters(ch) = 4;
elseif yp<=(0.7*xp-2140)
clusters(ch) = 5;
end
end
edit MakeData_ClassifySpikeWaveforms.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/Processing/
load MeanWaveform W
DropBoxLocation = fullfile(FolderDropBox,'Dropbox','Kteam');
rmpath([FolderDropBox 'Dropbox/Kteam/PrgMatlab/Fra/UtilsStats/']) %conflict with kmeans of Fra
MakeData_ClassifySpikeWaveforms(W,DropBoxLocation,0);
clear
load MeanWaveform W
DropBoxLocation = fullfile(FolderDropBox,'Dropbox','Kteam');
rmpath([FolderDropBox 'Dropbox/Kteam/PrgMatlab/Fra/UtilsStats/']) %conflict with kmeans of Fra
MakeData_ClassifySpikeWaveforms(W,DropBoxLocation,0);
edit MakeData_NeuronsInfo.m
%check if exist and assign default value if not
if ~exist('foldername','var')
foldername = pwd;
end
%% load data
load(fullfile(foldername,'SpikeData.mat'), 'S', 'tetrodeChannels', 'TT')
load(fullfile(foldername,'NeuronClassification.mat'), 'UnitID')
load(fullfile(foldername,'ChannelsToAnalyse','PFCx_clusters.mat'), 'clusters', 'channels')
load(fullfile(foldername,'LFPData','InfoLFP.mat'), 'InfoLFP')
%% info
% structure
neuron_structures = cell(0);
for n=1:length(TT)
neuron_channel = tetrodeChannels{TT{n}(1)};
neuron_structures{n} = InfoLFP.structure{InfoLFP.channel==neuron_channel(1)};
end
% firing rate
firingrates = nan(length(S), 1);
for i=1:length(S)
firingrates(i) = length(S{i}) / (max(Range(S{i}))*1e-4);
end
% putative interneuon-pyramidal
neuron_type = UnitID(:,1);
% layer / cluster
neuron_layer = nan(length(S), 1);
for n=1:length(TT)
neuron_channels = tetrodeChannels{TT{n}(1)};
idx = ismember(channels, neuron_channels);
if any(idx)
neuron_layer(n) = clusters(find(idx,1));
end
end
% soloist
neuron_soloist = nan(length(S), 1);
list_structures = unique(neuron_structures);
for i=1:length(list_structures)
NumNeurons = find(strcmpi(neuron_structures,list_structures{i}));
if length(NumNeurons)>3
[numSoloist, numChorist] = FindSoloistChorist_KJ(S, NumNeurons);
neuron_soloist(numSoloist) = 1;
neuron_soloist(numChorist) = 0;
end
end
%% save
InfoNeurons.structure   = neuron_structures;
InfoNeurons.firingrate  = firingrates;
InfoNeurons.putative    = neuron_type;
InfoNeurons.layer       = neuron_layer;
InfoNeurons.soloist     = neuron_soloist;
save('InfoNeuronsAll', 'InfoNeurons')
MakeData_NeuronsInfo
%params
binsize_cc = 2;
nbins_cc = 400;
p=1;
clear
load('behavResources_SB.mat', 'TTLInfo')
load('behavResources_SB.mat')
clear
%goto
disp('****************************************************************')
disp(pwd)
%params
binsize_cc = 2;
nbins_cc = 400;
p=1;
%% load
% tones
try
load('behavResources.mat', 'ToneEvent')
ToneEvent;
catch
load('behavResources_SB.mat', 'TTLInfo')
ToneEvent = ts(sort([TTLInfo.CSMoinsTimes ; TTLInfo.CSPlusTimes]);
end
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
clear
%goto
disp('****************************************************************')
disp(pwd)
%params
binsize_cc = 2;
nbins_cc = 400;
p=1;
%% load
% tones
try
load('behavResources.mat', 'ToneEvent')
ToneEvent;
catch
load('behavResources_SB.mat', 'TTLInfo')
ToneEvent = ts(sort([TTLInfo.CSMoinsTimes ; TTLInfo.CSPlusTimes]));
end
%load Spikes of PFCx
load('SpikeData.mat', 'S')
load('InfoNeuronsAll.mat', 'InfoNeurons')
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx'));
S = S(NumNeurons);
% Substages
load('SleepSubstages.mat', 'Epoch')
N1 = Epoch{1}; N2 = Epoch{2}; N3 = Epoch{3}; REM = Epoch{4}; Wake = Epoch{5}; NREM = Epoch{7};
N2N3 = or(N2,N3);
% ripples
load('Ripples.mat','tRipples')
if ~exist('tRipples','var')
load('Ripples.mat','Ripples')
tRipples = ts(Ripples(:,2)*10);
end
load('InfoNeuronsAll.mat')
load('InfoNeuronsAll.mat', 'InfoNeurons')
clear
%goto
disp('****************************************************************')
disp(pwd)
%params
binsize_cc = 2;
nbins_cc = 400;
p=1;
%% load
% tones
try
load('behavResources.mat', 'ToneEvent')
ToneEvent;
catch
load('behavResources_SB.mat', 'TTLInfo')
ToneEvent = ts(sort([TTLInfo.CSMoinsTimes ; TTLInfo.CSPlusTimes]));
end
%load Spikes of PFCx
load('SpikeData.mat', 'S')
load('InfoNeuronsAll.mat', 'InfoNeurons')
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx'));
S = S(NumNeurons);
% ripples
load('Ripples.mat','tRipples')
if ~exist('tRipples','var')
load('Ripples.mat','Ripples')
tRipples = ts(Ripples(:,2)*10);
end
%% Cross Corr
%Ripples
MatRipples = [];
for i=1:length(S)
[C,B] = CrossCorr(Range(tRipples), Range(S{i}),binsize_cc,nbins_cc);
MatRipples = [MatRipples ; C'];
end
Zripples = zscore(MatRipples,[],2);
%tones
MatTones = [];
for i=1:length(S)
% PETH in Wake
[C,B] = CrossCorr(Range(ToneEvent), Range(S{i}),binsize_cc,nbins_cc);
MatTones = [MatTones ; C'];
end
Ztones = zscore(MatTones,[],2);
t_corr=B;
%% Neuron info
InfoNeuronClass = InfoNeurons.putative(strcmpi(InfoNeurons.structure,'PFCx'));
InfoNeuronLayer = InfoNeurons.layer(strcmpi(InfoNeurons.structure,'PFCx'));
InfoNeuronFR = InfoNeurons.firingrate(strcmpi(InfoNeurons.structure,'PFCx'));
%class
neuronClass{1} = find(InfoNeuronClass>0);
neuronClass{2} = find(InfoNeuronClass<0);
%layer
for l=1:5
neuronLayer{l} = find(InfoNeuronLayer==l);
end
%firing rate
neuronFR{1} = find(InfoNeuronFR<=7);
neuronFR{2} = find(InfoNeuronFR>7);
clear
%goto
disp('****************************************************************')
disp(pwd)
%params
binsize_cc = 2;
nbins_cc = 400;
p=1;
%% load
% tones
try
load('behavResources.mat', 'ToneEvent')
ToneEvent;
catch
load('behavResources_SB.mat', 'TTLInfo')
ToneEvent = ts(sort([TTLInfo.CSMoinsTimes ; TTLInfo.CSPlusTimes]));
end
%load Spikes of PFCx
load('SpikeData.mat', 'S')
load('InfoNeuronsAll.mat', 'InfoNeurons')
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx'));
S = S(NumNeurons);
%% Cross Corr
%tones
MatTones = [];
for i=1:length(S)
% PETH in Wake
[C,B] = CrossCorr(Range(ToneEvent), Range(S{i}),binsize_cc,nbins_cc);
MatTones = [MatTones ; C'];
end
Ztones = zscore(MatTones,[],2);
t_corr=B;
%% Neuron info
InfoNeuronClass = InfoNeurons.putative(strcmpi(InfoNeurons.structure,'PFCx'));
InfoNeuronLayer = InfoNeurons.layer(strcmpi(InfoNeurons.structure,'PFCx'));
InfoNeuronFR = InfoNeurons.firingrate(strcmpi(InfoNeurons.structure,'PFCx'));
%class
neuronClass{1} = find(InfoNeuronClass>0);
neuronClass{2} = find(InfoNeuronClass<0);
%layer
for l=1:5
neuronLayer{l} = find(InfoNeuronLayer==l);
end
%firing rate
neuronFR{1} = find(InfoNeuronFR<=7);
neuronFR{2} = find(InfoNeuronFR>7);
%-- 09/01/2019 15:21:35 --%
LoadPathMOBs
clear
%goto
disp('****************************************************************')
disp(pwd)
%params
binsize_cc = 2;
nbins_cc = 400;
p=1;
%% load
% tones
try
load('behavResources.mat', 'ToneEvent')
ToneEvent;
catch
load('behavResources_SB.mat', 'TTLInfo')
ToneEvent = ts(sort([TTLInfo.CSMoinsTimes ; TTLInfo.CSPlusTimes]));
end
%load Spikes of PFCx
load('SpikeData.mat', 'S')
load('InfoNeuronsAll.mat', 'InfoNeurons')
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx'));
S = S(NumNeurons);
%% Cross Corr
%tones
MatTones = [];
for i=1:length(S)
% PETH in Wake
[C,B] = CrossCorr(Range(ToneEvent), Range(S{i}),binsize_cc,nbins_cc);
MatTones = [MatTones ; C'];
end
Ztones = zscore(MatTones,[],2);
t_corr=B;
%% Neuron info
InfoNeuronClass = InfoNeurons.putative(strcmpi(InfoNeurons.structure,'PFCx'));
InfoNeuronLayer = InfoNeurons.layer(strcmpi(InfoNeurons.structure,'PFCx'));
InfoNeuronFR = InfoNeurons.firingrate(strcmpi(InfoNeurons.structure,'PFCx'));
%class
neuronClass{1} = find(InfoNeuronClass>0);
neuronClass{2} = find(InfoNeuronClass<0);
%layer
for l=1:5
neuronLayer{l} = find(InfoNeuronLayer==l);
end
%firing rate
neuronFR{1} = find(InfoNeuronFR<=7);
neuronFR{2} = find(InfoNeuronFR>7);
find(~cellfun(@isempty,neuronLayer))
layers = find(~cellfun(@isempty,neuronLayer));
num2str(layers)
%% Plot 1
%Int/Pyr
colori_neur = {'b','r'};
fontsize=13;
figure, hold on
%response tones
subplot(1,2,1), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(Ztones(neuronClass{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones')
%Layer
colori_neur = {[0.13 0.54 0.13],'b','r','k'};
layers = find(~cellfun(@isempty,neuronLayer));
%response tones
subplot(1,2,4), hold on
for i=1:length(layers)
hold on, h(i) = plot(t_corr,runmean(mean(Ztones(neuronLayer{layers(i)},:)),2),'color', colori_neur{i});
leg{i} = num2str(layers(i));
end
set(gca, 'xlim',[-400 400], 'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,leg),
title('on tones')
ResponseOfInterPyr3
edit ParcoursProcessingBasalSleepSpike.m
DropBoxLocation = fullfile(FolderDropBox,'Dropbox','Kteam');
rmpath([FolderDropBox 'Dropbox/Kteam/PrgMatlab/Fra/UtilsStats/']) %conflict with kmeans of Fra
MakeData_ClassifySpikeWaveforms(W,DropBoxLocation,0);
load MeanWaveform W
DropBoxLocation = fullfile(FolderDropBox,'Dropbox','Kteam');
rmpath([FolderDropBox 'Dropbox/Kteam/PrgMatlab/Fra/UtilsStats/']) %conflict with kmeans of Fra
MakeData_ClassifySpikeWaveforms(W,DropBoxLocation,0);
MakeData_NeuronsInfo
ResponseOfInterPyr3
edit PathForExperimentFEAR.m
cd /media/DataMOBsRAID/ProjetAversion/DATA-Fear/Mouse244/20150506-EXT-24h-envC
cd /media/DataMOBsRAID/ProjetAversion/DATA-Fear/Mouse244/20150508-EXT-48h-envC
cd /media/DataMOBsRAID/ProjetAversion/DATA-Fear/Mouse248/20150327-EXT-48h-envB
cd /media/DataMOBsRAID/ProjetAversion/DATA-Fear/Mouse250/20150508-EXT-48h-envC
load Waveforms W
DropBoxLocation = fullfile(FolderDropBox,'Dropbox','Kteam');
rmpath([FolderDropBox 'Dropbox/Kteam/PrgMatlab/Fra/UtilsStats/']) %conflict with kmeans of Fra
MakeData_ClassifySpikeWaveforms(W,DropBoxLocation,0);
mkdir('SpikesToAnalyse');
CreateSpikeToAnalyse_KJ;
edit MakeData_NeuronsInfo.m
clear
%check if exist and assign default value if not
if ~exist('foldername','var')
foldername = pwd;
end
%% load data
load(fullfile(foldername,'SpikeData.mat'), 'S', 'tetrodeChannels', 'TT')
load(fullfile(foldername,'NeuronClassification.mat'), 'UnitID')
load(fullfile(foldername,'LFPData','InfoLFP.mat'), 'InfoLFP')
% structure
neuron_structures = cell(0);
for n=1:length(TT)
neuron_channel = tetrodeChannels{TT{n}(1)};
neuron_structures{n} = InfoLFP.structure{InfoLFP.channel==neuron_channel(1)};
end
% firing rate
firingrates = nan(length(S), 1);
for i=1:length(S)
firingrates(i) = length(S{i}) / (max(Range(S{i}))*1e-4);
end
% putative interneuon-pyramidal
neuron_type = UnitID(:,1);
% soloist
neuron_soloist = nan(length(S), 1);
list_structures = unique(neuron_structures);
for i=1:length(list_structures)
NumNeurons = find(strcmpi(neuron_structures,list_structures{i}));
if length(NumNeurons)>3
[numSoloist, numChorist] = FindSoloistChorist_KJ(S, NumNeurons);
neuron_soloist(numSoloist) = 1;
neuron_soloist(numChorist) = 0;
end
end
clear
%check if exist and assign default value if not
if ~exist('foldername','var')
foldername = pwd;
end
%% load data
load(fullfile(foldername,'SpikeData.mat'), 'S', 'tetrodeChannels', 'TT')
load(fullfile(foldername,'NeuronClassification.mat'), 'UnitID')
load(fullfile(foldername,'LFPData','InfoLFP.mat'), 'InfoLFP')
% structure
neuron_structures = cell(0);
for n=1:length(TT)
neuron_channel = tetrodeChannels{TT{n}(1)};
neuron_structures{n} = InfoLFP.structure{InfoLFP.channel==neuron_channel(1)};
end
% firing rate
firingrates = nan(length(S), 1);
for i=1:length(S)
firingrates(i) = length(S{i}) / (max(Range(S{i}))*1e-4);
end
% putative interneuon-pyramidal
neuron_type = UnitID(:,1);
InfoNeurons.structure   = neuron_structures;
InfoNeurons.firingrate  = firingrates;
InfoNeurons.putative    = neuron_type;
save('InfoNeuronsAll', 'InfoNeurons')
clear
%goto
disp('****************************************************************')
disp(pwd)
%params
binsize_cc = 2;
nbins_cc = 400;
p=1;
%% load
% tones
try
load('behavResources.mat', 'ToneEvent')
ToneEvent;
catch
load('behavResources_SB.mat', 'TTLInfo')
ToneEvent = ts(sort([TTLInfo.CSMoinsTimes ; TTLInfo.CSPlusTimes]));
end
%load Spikes of PFCx
load('SpikeData.mat', 'S')
load('InfoNeuronsAll.mat', 'InfoNeurons')
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx'));
S = S(NumNeurons);
%% Cross Corr
%tones
MatTones = [];
for i=1:length(S)
% PETH in Wake
[C,B] = CrossCorr(Range(ToneEvent), Range(S{i}),binsize_cc,nbins_cc);
MatTones = [MatTones ; C'];
end
Ztones = zscore(MatTones,[],2);
t_corr=B;
load('behavResources.mat', 'DIG1')
load('behavResources.mat', 'DIG4')
load('behavResources.mat', 'DIG8')
cd /media/DataMOBsRAIDN/ProjetAversion/DATA-Fear/Mouse403/FEAR-Mouse-403-EXT-24-envB_raye_161026_171611/
load('behavResources.mat', 'BeepTimes')
clear
load MeanWaveform W
DropBoxLocation = fullfile(FolderDropBox,'Dropbox','Kteam');
rmpath([FolderDropBox 'Dropbox/Kteam/PrgMatlab/Fra/UtilsStats/']) %conflict with kmeans of Fra
MakeData_ClassifySpikeWaveforms(W,DropBoxLocation,0);
mkdir('SpikesToAnalyse');
CreateSpikeToAnalyse_KJ;
MakeData_NeuronsInfo
load('behavResources.mat', 'BeepTimes')
clear
%goto
disp('****************************************************************')
disp(pwd)
%params
binsize_cc = 2;
nbins_cc = 400;
p=1;
%% load
% tones
load('behavResources.mat', 'ToneEvent')
if ~exist('ToneEvent','var')
try
load('behavResources_SB.mat', 'TTLInfo')
ToneEvent = ts(sort([TTLInfo.CSMoinsTimes ; TTLInfo.CSPlusTimes]));
catch
load('behavResources_SB.mat', 'BeepTimes')
ToneEvent = ts(sort([BeepTimes.CSM ; BeepTimes.CSP]));
end
end
%load Spikes of PFCx
load('SpikeData.mat', 'S')
load('InfoNeuronsAll.mat', 'InfoNeurons')
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx'));
S = S(NumNeurons);
%% load
% tones
load('behavResources.mat', 'ToneEvent')
if ~exist('ToneEvent','var')
try
load('behavResources_SB.mat', 'TTLInfo')
ToneEvent = ts(sort([TTLInfo.CSMoinsTimes ; TTLInfo.CSPlusTimes]));
catch
load('behavResources.mat', 'BeepTimes')
ToneEvent = ts(sort([BeepTimes.CSM ; BeepTimes.CSP]));
end
end
%load Spikes of PFCx
load('SpikeData.mat', 'S')
load('InfoNeuronsAll.mat', 'InfoNeurons')
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx'));
S = S(NumNeurons);
load('behavResources.mat', 'ToneEvent')
if ~exist('ToneEvent','var')
try
load('behavResources_SB.mat', 'TTLInfo')
ToneEvent = ts(sort([TTLInfo.CSMoinsTimes ; TTLInfo.CSPlusTimes]));
catch
load('behavResources.mat', 'BeepTimes')
ToneEvent = ts(sort([BeepTimes.CSM BeepTimes.CSP]'));
end
end
%load Spikes of PFCx
load('SpikeData.mat', 'S')
load('InfoNeuronsAll.mat', 'InfoNeurons')
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx'));
S = S(NumNeurons);
%tones
MatTones = [];
for i=1:length(S)
% PETH in Wake
[C,B] = CrossCorr(Range(ToneEvent), Range(S{i}),binsize_cc,nbins_cc);
MatTones = [MatTones ; C'];
end
Ztones = zscore(MatTones,[],2);
t_corr=B;
%% Plot 1
%Int/Pyr
colori_neur = {'b','r'};
fontsize=13;
figure, hold on
%response tones
subplot(1,2,1), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(Ztones(neuronClass{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,'pyramidal','interneuron')
title('on tones')
%Layer
colori_neur = {[0.13 0.54 0.13],'b','r','k'};
layers = find(~cellfun(@isempty,neuronLayer));
%response tones
subplot(1,2,2), hold on
for i=1:length(layers)
hold on, h(i) = plot(t_corr,runmean(mean(Ztones(neuronLayer{layers(i)},:)),2),'color', colori_neur{i});
leg{i} = num2str(layers(i));
end
set(gca, 'xlim',[-400 400], 'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,leg),
title('on tones')
%% Neuron info
InfoNeuronClass = InfoNeurons.putative(strcmpi(InfoNeurons.structure,'PFCx'));
InfoNeuronLayer = InfoNeurons.layer(strcmpi(InfoNeurons.structure,'PFCx'));
InfoNeuronFR = InfoNeurons.firingrate(strcmpi(InfoNeurons.structure,'PFCx'));
%class
neuronClass{1} = find(InfoNeuronClass>0);
neuronClass{2} = find(InfoNeuronClass<0);
%layer
for l=1:5
neuronLayer{l} = find(InfoNeuronLayer==l);
end
%firing rate
neuronFR{1} = find(InfoNeuronFR<=7);
neuronFR{2} = find(InfoNeuronFR>7);
%% Plot 1
%Int/Pyr
colori_neur = {'b','r'};
fontsize=13;
figure, hold on
%response tones
subplot(1,2,1), hold on
for i=1:length(neuronClass)
hold on, h(i) = plot(t_corr,runmean(mean(Ztones(neuronClass{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,'pyramidal','interneuron')
title('on tones')
%Layer
colori_neur = {[0.13 0.54 0.13],'b','r','k'};
layers = find(~cellfun(@isempty,neuronLayer));
%response tones
subplot(1,2,2), hold on
for i=1:length(layers)
hold on, h(i) = plot(t_corr,runmean(mean(Ztones(neuronLayer{layers(i)},:)),2),'color', colori_neur{i});
leg{i} = num2str(layers(i));
end
set(gca, 'xlim',[-400 400], 'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,leg),
title('on tones')
[InfoNeuronClass InfoNeuronLayer InfoNeuronFR];
%Int/Pyr
colori_neur = {'b','r'};
fontsize=13;
figure, hold on
%response tones
subplot(1,2,1), hold on
for i=1:length(neuronFR)
hold on, h(i) = plot(t_corr,runmean(mean(Ztones(neuronFR{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,'pyramidal','interneuron')
title('on tones')
%Layer
colori_neur = {[0.13 0.54 0.13],'b','r','k'};
layers = find(~cellfun(@isempty,neuronLayer));
%response tones
subplot(1,2,2), hold on
for i=1:length(layers)
hold on, h(i) = plot(t_corr,runmean(mean(Ztones(neuronLayer{layers(i)},:)),2),'color', colori_neur{i});
leg{i} = num2str(layers(i));
end
set(gca, 'xlim',[-400 400], 'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,leg),
title('on tones')
ParcoursResponseRipplesTypeNeuronsPlot
ParcoursResponseTypeNeuronsPlot1
ResponseOfInterPyr2
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
ParcoursResponseTypeNeuronsPlot2
figure, hold on, hist(InfoNeuronFR,30)
figure, hold on, hist(InfoNeuronFR,100)
figure, hold on, hist(InfoNeuronFR,200)
ParcoursResponseTypeNeuronsPlot2
ParcoursResponseTypeNeurons
ParcoursResponseTypeNeuronsPlot1
ParcoursResponseRipplesTypeNeurons
ParcoursResponseTypeNeuronsPlot2
edit FigNeuronsResponseRipples2.m
ParcoursResponseTypeNeuronsPlot2
%for whole night
figure, hold on
subtightplot(3,3,1, gap), hold on
imagesc(t_corr, 1:size(Zripples,1), Zripples);
xlim([-500 500]), ylim([1 size(Zripples,1)]),
set(gca,'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'linewidth',2),
caxis([-3.3 9.4]), ylabel('#neurons'),xlabel('ms'),
title('Neurons on ripples')
%for whole night
figure, hold on
subtightplot(3,3,1, gap), hold on
imagesc(t_corr, 1:size(Zripples,1), Zripples);
xlim([-400 400]), ylim([1 size(Zripples,1)]),
set(gca,'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'linewidth',2),
caxis([-3.3 9.4]), ylabel('#neurons'),xlabel('ms'),
title('Neurons on ripples')
ParcoursResponseTypeNeuronsPlot2
caxis([-3.3 9.4]), ylabel('#neurons')
caxis([-3.3 6]), ylabel('#neurons')
caxis([-3.3 2]), ylabel('#neurons')
caxis([-3.3 5]), ylabel('#neurons')
caxis([-3.3 5]), ylabel('')
caxis([-1 5]),
caxis([-1 6]),
caxis([-1 8]),
caxis([-1 10]),
a=[InfoNeuronClass InfoNeuronLayer InfoNeuronFR];
mean(InfoNeuronFR(InfoNeuronLayer==1))
nanmean(InfoNeuronFR(InfoNeuronLayer==1))
nanmean(InfoNeuronFR(InfoNeuronLayer==2))
nanmean(InfoNeuronFR(InfoNeuronLayer==3))
nanmean(InfoNeuronFR(InfoNeuronLayer==4))
nanmean(InfoNeuronFR(InfoNeuronLayer==5))
nanmedian(InfoNeuronFR(InfoNeuronLayer==5))
nanmedian(InfoNeuronFR(InfoNeuronLayer==4))
nanmedian(InfoNeuronFR(InfoNeuronLayer==3))
nanmedian(InfoNeuronFR(InfoNeuronLayer==2))
nanmedian(InfoNeuronFR(InfoNeuronLayer==1))
ParcoursResponseTypeNeuronsPlot2
distinguishable_colors(4)
edit PlotOneDensityCurve.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils/
close all
ParcoursResponseTypeNeuronsPlot2
length(neuronFR)
ParcoursResponseTypeNeuronsPlot2
close all
ParcoursResponseTypeNeuronsPlot2
ParcoursResponseTypeNeuronsPlot1
%-- 09/01/2019 18:28:25 --%
LoadPathMOBs
ParcoursResponseTypeNeuronsPlot1
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/LabMeeting/20190114/
ParcoursResponseTypeNeuronsPlot1
close all
ParcoursResponseTypeNeuronsPlot1
length(layers)
ParcoursResponseTypeNeuronsPlot1
ParcoursResponseTypeNeuronsPlot2
ParcoursResponseTypeNeuronsPlot1
ParcoursResponseTypeNeuronsPlot2
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
%% concatenate and zscore
MatRipples = [];
MatRipplesBef = [];
MatRipplesCorr = [];
MatTonesUpUP = [];
MatTonesUpDown = [];
MatTonesDownUp = [];
InfoNeuronClass = [];
InfoNeuronLayer = [];
InfoNeuronFR = [];
t_corr = resp_res.t_corr{1};
for p=1:4%length(resp_res.path)
MatRipples     = [MatRipples ; resp_res.MatRipples{p}];
MatRipplesBef  = [MatRipplesBef ; resp_res.MatRipplesBef{p}];
MatRipplesCorr = [MatRipplesCorr ; resp_res.MatRipplesCorr{p}];
MatTonesUpUP   = [MatTonesUpUP ; resp_res.MatTonesUpUP{p}];
MatTonesUpDown = [MatTonesUpDown ; resp_res.MatTonesUpDown{p}];
MatTonesDownUp = [MatTonesDownUp ; resp_res.MatTonesDownUp{p}];
InfoNeuronClass = [InfoNeuronClass ; resp_res.InfoNeuronClass{p}];
InfoNeuronLayer = [InfoNeuronLayer ; resp_res.InfoNeuronLayer{p}];
InfoNeuronFR = [InfoNeuronFR ; resp_res.InfoNeuronFR{p}];
end
Zripples = zscore(MatRipples,[],2);
ZripplesBef = zscore(MatRipplesBef,[],2);
ZripplesCorr = zscore(MatRipplesCorr,[],2);
ZtonesUpUp = zscore(MatTonesUpUP,[],2);
ZtonesUpDown = zscore(MatTonesUpDown,[],2);
ZtonesDownUp = zscore(MatTonesDownUp,[],2);
twindow = t_corr>20 & t_corr<80;
meanResp_ripples = mean(Zripples(:,twindow));
meanResp_ripples = mean(Zripples(:,twindow),2);
maxresp_ripples = max(Zripples(:,twindow),2);
maxresp_ripples = max(Zripples(:,twindow),[],2);
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
%% concatenate and zscore
MatRipples = [];
MatRipplesBef = [];
MatRipplesCorr = [];
MatTonesUpUP = [];
MatTonesUpDown = [];
MatTonesDownUp = [];
InfoNeuronClass = [];
InfoNeuronLayer = [];
InfoNeuronFR = [];
t_corr = resp_res.t_corr{1};
for p=1:4%length(resp_res.path)
MatRipples     = [MatRipples ; resp_res.MatRipples{p}];
MatRipplesBef  = [MatRipplesBef ; resp_res.MatRipplesBef{p}];
MatRipplesCorr = [MatRipplesCorr ; resp_res.MatRipplesCorr{p}];
MatTonesUpUP   = [MatTonesUpUP ; resp_res.MatTonesUpUP{p}];
MatTonesUpDown = [MatTonesUpDown ; resp_res.MatTonesUpDown{p}];
MatTonesDownUp = [MatTonesDownUp ; resp_res.MatTonesDownUp{p}];
InfoNeuronClass = [InfoNeuronClass ; resp_res.InfoNeuronClass{p}];
InfoNeuronLayer = [InfoNeuronLayer ; resp_res.InfoNeuronLayer{p}];
InfoNeuronFR = [InfoNeuronFR ; resp_res.InfoNeuronFR{p}];
end
Zripples = zscore(MatRipples,[],2);
ZripplesBef = zscore(MatRipplesBef,[],2);
ZripplesCorr = zscore(MatRipplesCorr,[],2);
ZtonesUpUp = zscore(MatTonesUpUP,[],2);
ZtonesUpDown = zscore(MatTonesUpDown,[],2);
ZtonesDownUp = zscore(MatTonesDownUp,[],2);
%% mean and max response to ripples/tones
twindow = t_corr>20 & t_corr<80;
%mean response between 20 and 80 ms
meanResp_ripples = mean(Zripples(:,twindow),2);
meanResp_ripplesBef = mean(ZripplesBef(:,twindow),2);
meanResp_ripplesCorr = mean(ZripplesCorr(:,twindow),2);
meanResp_tUpUp = mean(ZtonesUpUp(:,twindow),2);
meanResp_tUpDown = mean(ZtonesUpDown(:,twindow),2);
meanResp_tDownDown = mean(ZtonesDownUp(:,twindow),2);
%max response between 20 and 80 ms
maxresp_ripples = max(Zripples(:,twindow),[],2);
maxresp_ripplesBef = max(ZripplesBef(:,twindow),[],2);
maxresp_ripplesCorr = max(ZripplesCorr(:,twindow),[],2);
maxresp_tUpUp = max(ZtonesUpUp(:,twindow),[],2);
maxresp_tUpDown = max(ZtonesUpDown(:,twindow),[],2);
maxresp_tDownDown = max(ZtonesDownUp(:,twindow),[],2);
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Dreem/SlowDyn/SlowWaves/
edit QuantifSlowWaveSlowDynPlot2.m
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/LabMeeting/20190114/
edit gscatter
ParcoursResponseTypeNeuronsPlotFr
fontsize=13;
sz = 25;
figure, hold on
%response ripples
subplot(2,3,1), hold on
gscatter(InfoNeuronFR, meanResp_tUpUp, neuronClass)
title('on ripples'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('response to ripples'),
ParcoursResponseTypeNeuronsPlotFr
edit LFPlayerInfluenceOnDetection.m
ParcoursResponseTypeNeuronsPlotFr
edit LFPlayerInfluenceOnDetection.m
ParcoursResponseTypeNeuronsPlotFr
ParcoursResponseTypeNeuronsPlot2
edit LFPlayerInfluenceOnDetection.m
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
%% concatenate and zscore
MatRipples = [];
MatRipplesBef = [];
MatRipplesCorr = [];
MatTonesUpUP = [];
MatTonesUpDown = [];
MatTonesDownUp = [];
InfoNeuronClass = [];
InfoNeuronLayer = [];
InfoNeuronFR = [];
t_corr = resp_res.t_corr{1};
for p=1:4%length(resp_res.path)
MatRipples     = [MatRipples ; resp_res.MatRipples{p}];
MatRipplesBef  = [MatRipplesBef ; resp_res.MatRipplesBef{p}];
MatRipplesCorr = [MatRipplesCorr ; resp_res.MatRipplesCorr{p}];
MatTonesUpUP   = [MatTonesUpUP ; resp_res.MatTonesUpUP{p}];
MatTonesUpDown = [MatTonesUpDown ; resp_res.MatTonesUpDown{p}];
MatTonesDownUp = [MatTonesDownUp ; resp_res.MatTonesDownUp{p}];
InfoNeuronClass = [InfoNeuronClass ; resp_res.InfoNeuronClass{p}];
InfoNeuronLayer = [InfoNeuronLayer ; resp_res.InfoNeuronLayer{p}];
InfoNeuronFR = [InfoNeuronFR ; resp_res.InfoNeuronFR{p}];
end
Zripples = zscore(MatRipples,[],2);
ZripplesBef = zscore(MatRipplesBef,[],2);
ZripplesCorr = zscore(MatRipplesCorr,[],2);
ZtonesUpUp = zscore(MatTonesUpUP,[],2);
ZtonesUpDown = zscore(MatTonesUpDown,[],2);
ZtonesDownUp = zscore(MatTonesDownUp,[],2);
%% Neuron info
%class
neuronClass = InfoNeuronClass;
neuronClass(neuronClass<0) = -1;
neuronClass(neuronClass>0) = 1;
%% mean and max response to ripples/tones
twindow = t_corr>20 & t_corr<80;
%mean response between 20 and 80 ms
meanResp_ripples = mean(Zripples(:,twindow),2);
meanResp_ripplesBef = mean(ZripplesBef(:,twindow),2);
meanResp_ripplesCorr = mean(ZripplesCorr(:,twindow),2);
meanResp_tUpUp = mean(ZtonesUpUp(:,twindow),2);
meanResp_tUpDown = mean(ZtonesUpDown(:,twindow),2);
meanResp_tDownUp = mean(ZtonesDownUp(:,twindow),2);
%max response between 20 and 80 ms
maxResp_ripples = max(Zripples(:,twindow),[],2);
maxResp_ripplesBef = max(ZripplesBef(:,twindow),[],2);
maxResp_ripplesCorr = max(ZripplesCorr(:,twindow),[],2);
maxResp_tUpUp = max(ZtonesUpUp(:,twindow),[],2);
maxResp_tUpDown = max(ZtonesUpDown(:,twindow),[],2);
maxResp_tDownUp = max(ZtonesDownUp(:,twindow),[],2);
%bar plot
barmean_ripples{1} = meanResp_ripples(InfoNeuronClass>0); barmean_ripples{2} = meanResp_ripples(InfoNeuronClass<0);
barmean_ripplesBef{1} = meanResp_ripplesBef(InfoNeuronClass>0); barmean_ripplesBef{2} = meanResp_ripplesBef(InfoNeuronClass<0);
barmean_ripplesCorr{1} = meanResp_ripplesCorr(InfoNeuronClass>0); barmean_ripplesCorr{2} = meanResp_ripplesCorr(InfoNeuronClass<0);
barmean_tUpUp{1} = meanResp_tUpUp(InfoNeuronClass>0); barmean_tUpUp{2} = meanResp_tUpUp(InfoNeuronClass<0);
barmean_tUpDown{1} = meanResp_tUpDown(InfoNeuronClass>0); barmean_tUpDown{2} = meanResp_tUpDown(InfoNeuronClass<0);
barmean_tDownUp{1} = meanResp_tDownUp(InfoNeuronClass>0); barmean_tDownUp{2} = meanResp_tDownUp(InfoNeuronClass<0);
ParcoursResponseTypeNeuronsPlotFr
ParcoursResponseTypeNeuronsPlot1
ParcoursResponseTypeNeuronsPlotFr
%% Plot 1 - bar plot of mean amplitude
fontsize=13;
colori_neur = {'b','r'};
labels = {'pyramidal','interneuron'};
figure, hold on
%response ripples
subplot(2,3,1), hold on
PlotErrorBarN_KJ(barmean_ripples, 'newfig',0, 'barcolors',colori_neur, 'paired',0, 'ShowSigstar','sig','showpoints',0);
set(gca,'xtick',1:length(labels),'XtickLabel',labels), ylabel('mean amplitude'),
title('on ripples'),
%response ripples no down before
subplot(2,3,2), hold on
PlotErrorBarN_KJ(barmean_ripplesBef, 'newfig',0, 'barcolors',colori_neur, 'paired',0, 'ShowSigstar','sig','showpoints',0);
set(gca,'xtick',1:length(labels),'XtickLabel',labels)
title('on ripples no down before'),
%response ripples no down around
subplot(2,3,3), hold on
PlotErrorBarN_KJ(barmean_ripplesCorr, 'newfig',0, 'barcolors',colori_neur, 'paired',0, 'ShowSigstar','sig','showpoints',0);
set(gca,'xtick',1:length(labels),'XtickLabel',labels)
title('on ripples no down around'),
%response tones up>up
subplot(2,3,4), hold on
PlotErrorBarN_KJ(barmean_tUpUp, 'newfig',0, 'barcolors',colori_neur, 'paired',0, 'ShowSigstar','sig','showpoints',0);
set(gca,'xtick',1:length(labels),'XtickLabel',labels), ylabel('mean amplitude'),
title('on tones up>up'),
%response tones up>down
subplot(2,3,5), hold on
PlotErrorBarN_KJ(barmean_tUpDown, 'newfig',0, 'barcolors',colori_neur, 'paired',0, 'ShowSigstar','sig','showpoints',0);
set(gca,'xtick',1:length(labels),'XtickLabel',labels)
title('on tones up>down'),
%response tones down>up
subplot(2,3,6), hold on
PlotErrorBarN_KJ(barmean_tDownUp, 'newfig',0, 'barcolors',colori_neur, 'paired',0, 'ShowSigstar','sig','showpoints',0);
set(gca,'xtick',1:length(labels),'XtickLabel',labels)
title('on tones down>up'),
ParcoursResponseTypeNeuronsPlotFr
close all
ParcoursResponseTypeNeuronsPlot1
ParcoursResponseTypeNeuronsPlotFr
close all
ParcoursResponseTypeNeuronsPlot1
ParcoursResponseTypeNeuronsPlotFr
ParcoursResponseTypeNeuronsPlot1
ParcoursResponseTypeNeuronsPlot2
gap = [0.04 0.04];
figure, hold on
%response ripples
subtightplot(2,3,1, gap), hold on
imagesc(t_corr, 1:size(Oripples,1), Oripples);
xlim([-300 300]), ylim([1 size(Oripples,1)]),
set(gca,'fontsize',fontsize,'xticklabel',{}),
line([0 0], get(gca,'ylim'), 'linewidth',2),
ylabel('#neurons'),
title('Neurons on ripples')
%response ripples no down before
subtightplot(2,3,2, gap), hold on
imagesc(t_corr, 1:size(OripplesBef,1), OripplesBef);
xlim([-300 300]), ylim([1 size(OripplesBef,1)]),
set(gca,'fontsize',fontsize,'xticklabel',{}),
line([0 0], get(gca,'ylim'), 'linewidth',2),
title('ripples no down before')
%response ripples no down around
subtightplot(2,3,3, gap), hold on
imagesc(t_corr, 1:size(OripplesCorr,1), OripplesCorr);
xlim([-300 300]), ylim([1 size(OripplesCorr,1)]),
set(gca,'fontsize',fontsize,'xticklabel',{}),
line([0 0], get(gca,'ylim'), 'linewidth',2),
title('ripples no down around')
%response tones up>up
subtightplot(2,3,4, gap), hold on
imagesc(t_corr, 1:size(OtonesUpUp,1), OtonesUpUp);
xlim([-300 300]), ylim([1 size(OtonesUpUp,1)]),
set(gca,'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'linewidth',2),
ylabel('#neurons'),xlabel('ms'),
title('on tones up>up')
%response tones up>down
subtightplot(2,3,5, gap), hold on
imagesc(t_corr, 1:size(OtonesUpDown,1), OtonesUpDown);
xlim([-300 300]), ylim([1 size(OtonesUpDown,1)]),
set(gca,'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'linewidth',2),
xlabel('ms'),
title('on tones up>down')
%response tones down>up
subtightplot(2,3,6, gap), hold on
imagesc(t_corr, 1:size(OtonesDownUp,1), OtonesDownUp);
xlim([-300 300]), ylim([1 size(OtonesDownUp,1)]),
set(gca,'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'linewidth',2),
xlabel('ms'),
title('on tones down>up')
ParcoursResponseTypeNeuronsPlot1
ParcoursResponseTypeNeuronsPlot2
ParcoursResponseTypeNeuronsPlotFr
ParcoursResponseTypeNeuronsPlot1
ParcoursResponseTypeNeuronsPlotFr
%-- 10/01/2019 14:44:14 --%
LoadPathMOBs
ParcoursResponseTypeNeuronsPlotFr
hist(maxResp_tDownUp,50);
hist(meanResp_tDownUp,50);
hist(maxResp_tDownUp,50);
ParcoursResponseTypeNeuronsPlot2
ParcoursResponseTypeNeuronsPlotFr
line([-2 -2],[4 4])
line([-2 -2],[4 4],'color','k')
line([-2 4],[-2 4],'color','k')
ParcoursResponseTypeNeuronsPlotFr
line([-2 4],[-2 4],'color','k')
percentile(InfoNeuronFR,5)
percentile(InfoNeuronFR,5,'all')
percentile(InfoNeuronFR,[20 40 60 80])
ParcoursResponseTypeNeuronsPlot1
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
Fig5RipplesUpDownDurationTransitions
percentile(InfoNeuronFR,[0 20 40 60 80 100])
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
%% concatenate and zscore
MatRipples = [];
MatRipplesBef = [];
MatRipplesCorr = [];
MatTonesUpUP = [];
MatTonesUpDown = [];
MatTonesDownUp = [];
InfoNeuronClass = [];
InfoNeuronFR = [];
t_corr = resp_res.t_corr{1};
for p=1:4%length(resp_res.path)
MatRipples     = [MatRipples ; resp_res.MatRipples{p}];
MatRipplesBef  = [MatRipplesBef ; resp_res.MatRipplesBef{p}];
MatRipplesCorr = [MatRipplesCorr ; resp_res.MatRipplesCorr{p}];
MatTonesUpUP   = [MatTonesUpUP ; resp_res.MatTonesUpUP{p}];
MatTonesUpDown = [MatTonesUpDown ; resp_res.MatTonesUpDown{p}];
MatTonesDownUp = [MatTonesDownUp ; resp_res.MatTonesDownUp{p}];
InfoNeuronClass = [InfoNeuronClass ; resp_res.InfoNeuronClass{p}];
InfoNeuronFR = [InfoNeuronFR ; resp_res.InfoNeuronFR{p}];
end
Zripples = zscore(MatRipples,[],2);
ZripplesBef = zscore(MatRipplesBef,[],2);
ZripplesCorr = zscore(MatRipplesCorr,[],2);
ZtonesUpUp = zscore(MatTonesUpUP,[],2);
ZtonesUpDown = zscore(MatTonesUpDown,[],2);
ZtonesDownUp = zscore(MatTonesDownUp,[],2);
%ordering
[~,id_fr] = sort(InfoNeuronFR);
Oripples = Zripples(id_fr,:);
OripplesBef = ZripplesBef(id_fr,:);
OripplesCorr = ZripplesCorr(id_fr,:);
OtonesUpUp = ZtonesUpUp(id_fr,:);
OtonesUpDown = ZtonesUpDown(id_fr,:);
OtonesDownUp = ZtonesDownUp(id_fr,:);
% percentile
perc = [0 ; percentile(InfoNeuronFR,[20 40 60 80])];
percentile(InfoNeuronFR,[0 20 40 60 80 100])
percentile(InfoNeuronFR,[20 40 60 80])
percentile(InfoNeuronFR,[20 40 60 80 100)
percentile(InfoNeuronFR,[20 40 60 80 100])
percentile(InfoNeuronFR,[20 40 60 80 101])
percentile(InfoNeuronFR,[0 20 40 60 80 10])
perc = [0 ; percentile(InfoNeuronFR,[20 40 60 80 100])];
% percentile
perc = [0 ; percentile(InfoNeuronFR,[20 40 60 80 100])];
for i=1:length(perc-1)
neuronFR{i} = find(InfoNeuronFR>perc(i) & InfoNeuronFR<=perc(i+1));
end
% percentile
perc = [0 ; percentile(InfoNeuronFR,[20 40 60 80 100])];
for i=1:length(perc)-1
neuronFR{i} = find(InfoNeuronFR>perc(i) & InfoNeuronFR<=perc(i+1));
end
FigResponseNeuronsFR
% percentile
perc = [0 ; percentile(InfoNeuronFR,[20 40 60 80 100])];
for i=1:length(perc)-1
neuronFR{i} = find(InfoNeuronFR>perc(i) & InfoNeuronFR<=perc(i+1));
labels{i} = [num2str(round(perc(i),2)) ' - ' num2str(round(perc(i),2)) ' Hz'];
end
% percentile
perc = [0 ; percentile(InfoNeuronFR,[20 40 60 80 100])];
for i=1:length(perc)-1
neuronFR{i} = find(InfoNeuronFR>perc(i) & InfoNeuronFR<=perc(i+1));
labels{i} = [num2str(round(perc(i),2)) ' - ' num2str(round(perc(i+1),2)) ' Hz'];
end
FigResponseNeuronsFR
oderFR = sort(InfoNeuronFR);
orderFR = sort(InfoNeuronFR);
FigResponseNeuronsFR
caxis
caxis([-3 9]),
caxis([-3 5]),
caxis([-3 10]),
caxis([-0 10]),
caxis([-2 10]),
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/LabMeeting/20190114/
%% Plot curves by FR
colori_neur = {'b','r','k'};;
fontsize=13;
figure, hold on
%response ripples
subplot(2,3,1), hold on
for i=1:length(neuronFR)
hold on, h(i) = plot(t_corr,runmean(mean(Zripples(neuronFR{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,labels)
title('on ripples')
%response ripples no down before
subplot(2,3,2), hold on
for i=1:length(neuronFR)
hold on, h(i) = plot(t_corr,runmean(mean(ZripplesBef(neuronFR{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('ripples no down before')
%response ripples no down around
subplot(2,3,3), hold on
for i=1:length(neuronFR)
hold on, h(i) = plot(t_corr,runmean(mean(ZripplesCorr(neuronFR{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('ripples no down around')
%response tones up>up
subplot(2,3,4), hold on
for i=1:length(neuronFR)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesUpUp(neuronFR{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones up>up')
%response tones up>down
subplot(2,3,5), hold on
for i=1:length(neuronFR)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesUpDown(neuronFR{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones up>down')
%response tones down>up
subplot(2,3,6), hold on
for i=1:length(neuronFR)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesDownUp(neuronFR{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones down>up')
ParcoursResponseTypeNeuronsPlot1
FigResponseNeuronsFR
%% Plot curves by FR and type
colori_neur = {'b','c','k','r'};
fontsize=13;
figure, hold on
%response ripples
subplot(2,3,1), hold on
for i=1:length(neuronGroup)
hold on, h(i) = plot(t_corr,runmean(mean(Zripples(neuronGroup{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,leg)
title('on ripples')
%response ripples no down before
subplot(2,3,2), hold on
for i=1:length(neuronGroup)
hold on, h(i) = plot(t_corr,runmean(mean(ZripplesBef(neuronGroup{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('ripples no down before')
%response ripples no down around
subplot(2,3,3), hold on
for i=1:length(neuronGroup)
hold on, h(i) = plot(t_corr,runmean(mean(ZripplesCorr(neuronGroup{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('ripples no down around')
%response tones up>up
subplot(2,3,4), hold on
for i=1:length(neuronGroup)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesUpUp(neuronGroup{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones up>up')
%response tones up>down
subplot(2,3,5), hold on
for i=1:length(neuronGroup)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesUpDown(neuronGroup{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones up>down')
%response tones down>up
subplot(2,3,6), hold on
for i=1:length(neuronGroup)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesDownUp(neuronGroup{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones down>up')
%% Plot curves by FR and type
colori_neur = {'b',[0.5 0 0.5],[1 0.45 0] ,'r'};
fontsize=13;
figure, hold on
%response ripples
subplot(2,3,1), hold on
for i=1:length(neuronGroup)
hold on, h(i) = plot(t_corr,runmean(mean(Zripples(neuronGroup{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,leg)
title('on ripples')
%response ripples no down before
subplot(2,3,2), hold on
for i=1:length(neuronGroup)
hold on, h(i) = plot(t_corr,runmean(mean(ZripplesBef(neuronGroup{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('ripples no down before')
%response ripples no down around
subplot(2,3,3), hold on
for i=1:length(neuronGroup)
hold on, h(i) = plot(t_corr,runmean(mean(ZripplesCorr(neuronGroup{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('ripples no down around')
%response tones up>up
subplot(2,3,4), hold on
for i=1:length(neuronGroup)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesUpUp(neuronGroup{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones up>up')
%response tones up>down
subplot(2,3,5), hold on
for i=1:length(neuronGroup)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesUpDown(neuronGroup{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones up>down')
%response tones down>up
subplot(2,3,6), hold on
for i=1:length(neuronGroup)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesDownUp(neuronGroup{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-400 400], 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones down>up')
FigResponseNeuronsFR
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
MatRipples ./ max(MatRipples,[],1)
FigResponseNeuronsFR
max(MatRipples,[],2);
FigResponseNeuronsFR
caxis
caxis([-2 9]),
caxis([-3 9]),
caxis([-1 9]),
ParcoursResponseTypeNeuronsPlot1
FigResponseNeuronsFR
caxis([-1 9]),
caxis([-1 8]),
caxis([0 8]),
mean(MatRipples,2);
FigResponseNeuronsFR
(MatRipples-mean(MatRipples(:,t_corr<-100),2));
std(MatRipples(:,t_corr<-100),2);
MatRipples(:,t_corr<-100);
std(ans)
std(ans,2)
std(ans,0,2)
std(MatRipples(:,t_corr<-100),0,2);;
FigResponseNeuronsFR
caxis([0 8]),
caxis
ParcoursResponseTypeNeurons
FigResponseNeuronsFR
ZScoreWiWindowSB
edit ZScoreWiWindowSB
edit ParcoursResponseRipplesTypeNeurons.m
ParcoursResponseTypeNeurons
ParcoursResponseRipplesTypeNeurons
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseRipplesTypeNeurons.mat'))
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
%params
zscoring = 0;
%% concatenate and zscore
MatRipples = [];
MatRipplesBef = [];
MatRipplesCorr = [];
MatTonesUpUP = [];
MatTonesUpDown = [];
MatTonesDownUp = [];
InfoNeuronClass = [];
InfoNeuronFR = [];
t_corr = resp_res.t_corr{1};
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseRipplesTypeNeurons.mat'))
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
%params
zscoring = 0;
%% concatenate and zscore
MatRipples = [];
MatRipplesBef = [];
MatRipplesCorr = [];
RipNeuronClass = [];
RipNeuronFR = [];
for p=1:length(resp_res.path)
MatRipples     = [MatRipples ; resprip_res.MatRipples{p}];
MatRipplesBef  = [MatRipplesBef ; resprip_res.MatRipplesBef{p}];
MatRipplesCorr = [MatRipplesCorr ; resprip_res.MatRipplesCorr{p}];
RipNeuronClass = [RipNeuronClass ; resprip_res.InfoNeuronClass{p}];
RipNeuronFR = [RipNeuronFR ; resprip_res.InfoNeuronFR{p}];
end
MatTonesUpUP = [];
MatTonesUpDown = [];
MatTonesDownUp = [];
ToneNeuronClass = [];
ToneNeuronFR = [];
for p=1:length(resp_res.path)
MatRipples     = [MatRipples ; resp_res.MatRipples{p}];
MatRipplesBef  = [MatRipplesBef ; resp_res.MatRipplesBef{p}];
MatRipplesCorr = [MatRipplesCorr ; resp_res.MatRipplesCorr{p}];
MatTonesUpUP   = [MatTonesUpUP ; resp_res.MatTonesUpUP{p}];
MatTonesUpDown = [MatTonesUpDown ; resp_res.MatTonesUpDown{p}];
MatTonesDownUp = [MatTonesDownUp ; resp_res.MatTonesDownUp{p}];
ToneNeuronClass = [ToneNeuronClass ; resp_res.InfoNeuronClass{p}];
ToneNeuronFR = [ToneNeuronFR ; resp_res.InfoNeuronFR{p}];
end
%timestamps
t_corr = resp_res.t_corr{1};
%normalisation
if zscoring==1
Zripples = zscore(MatRipples,[],2);
ZripplesBef = zscore(MatRipplesBef,[],2);
ZripplesCorr = zscore(MatRipplesCorr,[],2);
ZtonesUpUp = zscore(MatTonesUpUP,[],2);
ZtonesUpDown = zscore(MatTonesUpDown,[],2);
ZtonesDownUp = zscore(MatTonesDownUp,[],2);
elseif zscoring==2
Zripples = (MatRipples-mean(MatRipples(:,t_corr<-100),2)) ./ std(MatRipples(:,t_corr<-100),0,2);
ZripplesBef = (MatRipplesBef-mean(MatRipplesBef(:,t_corr<-100),2)) ./ std(MatRipplesBef(:,t_corr<-100),0,2);
ZripplesCorr = (MatRipplesCorr-mean(MatRipplesCorr(:,t_corr<-100),2)) ./ std(MatRipplesCorr(:,t_corr<-100),0,2);
ZtonesUpUp = (MatTonesUpUP-mean(MatTonesUpUP(:,t_corr<-100),2)) ./ std(MatTonesUpUP(:,t_corr<-100),0,2);
ZtonesUpDown = (MatTonesUpDown-mean(MatTonesUpDown(:,t_corr<-100),2)) ./ std(MatTonesUpDown(:,t_corr<-100),0,2);
ZtonesDownUp = (MatTonesDownUp-mean(MatTonesDownUp(:,t_corr<-100),2)) ./ std(MatTonesDownUp(:,t_corr<-100),0,2);
else
Zripples = MatRipples ./ RipNeuronFR;
ZripplesBef = MatRipplesBef ./ RipNeuronFR;
ZripplesCorr = MatRipplesCorr ./ RipNeuronFR;
ZtonesUpUp = MatTonesUpUP ./ RipNeuronFR;
ZtonesUpDown = MatTonesUpDown ./ RipNeuronFR;
ZtonesDownUp = MatTonesDownUp ./ RipNeuronFR;
end
FigResponseNeuronsFR
caxis([0 8]),
neuronGroup.tones{i}
close all
FigResponseNeuronsFR
ParcoursResponseRipplesTypeNeurons
FigResponseNeuronsFR
cellfun(@length,resprip_res.InfoNeuronFR)
sum(cellfun(@length,resprip_res.InfoNeuronFR))
sum(cellfun(@length,resprip_res.InfoNeuronClass))
sum(cellfun(@length,resp_res.InfoNeuronClass))
FigResponseNeuronsFR
caxis([0 8]),
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/LabMeeting/20190114/
ParcoursResponseRipplesTypeNeurons
FigResponseNeuronsFR
close all
FigResponseNeuronsFR
caxis([0 8]),
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/LabMeeting/20190114/
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
edit ParcoursResponseTypeNeuronsPlot3
edit ParcoursResponseTypeNeuronsPlotFr.m
ParcoursResponseTypeNeuronsPlotFr
edit PlotErrorLineN_KJ.m
FigResponseNeuronsFRQuantif
edit LFPlayerInfluenceOnDetection.m
FigResponseNeuronsFRQuantif
ParcoursResponseTypeNeuronsPlotFr
figure, hold on, hist(meanResp_ripplesCorr),
figure, hold on, hist(meanResp_ripplesCorr,100),
ParcoursResponseTypeNeuronsPlotFr
close all
ParcoursResponseTypeNeuronsPlotFr
FigResponseNeuronsFR
clear
close all
FigResponseNeuronsFR
for i=1:length(neuronGroup.tones)
disp(ToneNeuronFR(neuronGroup.tones{i}))
end
for i=1:length(neuronGroup.tones)
disp(median(ToneNeuronFR(neuronGroup.tones{i})))
end
figure, hold on
for i=1:length(neuronGroup.tones)
subplot(2,2,i), hold on
hist(ToneNeuronFR(neuronGroup.tones{i}),50),
%     disp(median(ToneNeuronFR(neuronGroup.tones{i})))
end
leg = {'Int > 5Hz', 'Pyr > 5Hz', 'Int < 5Hz', 'Pyr < 5Hz'};
figure, hold on
for i=1:length(neuronGroup.tones)
subplot(2,2,i), hold on
hist(ToneNeuronFR(neuronGroup.tones{i}),50),
%     disp(median(ToneNeuronFR(neuronGroup.tones{i})))
title(leg{i})
end
figure, hold on
for i=1:length(neuronClass.tones)
subplot(2,1,i), hold on
hist(ToneNeuronFR(neuronClass.tones{i}),50),
%     disp(median(ToneNeuronFR(neuronGroup.tones{i})))
end
FigResponseNeuronsFR
FigResponseNeuronsFRQuantif
ParcoursResponseTypeNeuronsPlotFr
FigResponseNeuronsFR
ParcoursResponseTypeNeurons
%-- 14/01/2019 12:39:50 --%
LoadPathMOBs
ParcoursResponseRipplesTypeNeurons
FigResponseNeuronsFR
cd /media/nas4/ProjetEmbReact/Mouse795/20181026/
edit ParcoursProcessingBasalSleepSpike.m
SleepScoringOBGamma('Plotfigure',1)
y
n
1
%-- 14/01/2019 16:26:01 --%
LoadPathMOBs
1
%-- 14/01/2019 17:11:11 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/OnlineDeltaFeedback/DeltaFeedBack/Interface/
guide
close all
reset
%-- 14/01/2019 17:35:29 --%
cd /home/mobsjunior/Dropbox/Kteam/OnlineDeltaFeedback/DeltaFeedBack/Interface/
guide
clear
clc
%-- 15/01/2019 17:35:57 --%
LoadPathMOBs
edit ParcoursResponseTypeNeuronsPlotFr.m
edit FigResponseNeuronsFR
FigResponseNeuronsFR
ZtransitUpDown(neuronClass.tones{i},:)),2);
ZtransitUpDown(neuronClass.tones{i},:));
ZtransitUpDown(neuronClass.tones{i},:);
FigResponseNeuronsFR
randi(10,12,1)
ParcoursResponseTypeNeurons
%-- 15/01/2019 17:53:13 --%
LoadPathMOBs
ParcoursResponseRipplesTypeNeurons
FigResponseNeuronsFR
ParcoursResponseTypeNeurons
FigResponseNeuronsFR
edit FigResponseNeuronsFRQuantif
FigResponseNeuronsFRQuantif
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
ParcoursResponseTypeNeuronsPlot2
ParcoursResponseTypeNeuronsPlot1
ParcoursResponseTypeNeuronsPlotFr
edit ParcoursResponseTypeNeuronsPlotFr
ParcoursResponseTypeNeuronsPlotFr
line([-2 -2],[4 4])
line([-2 -2],[4 4]), hold on
line([-2 -2],[4 4],'color','k')
line([-2 -2],[4 4])
line([-2 -2],[4 4],'color','k')
line([-2 4],[-2 4],'color','k')
line([-2 5],[-2 5],'color','k')
line([-2 4],[-2 4],'color','k')
edit MonoSynapticConnectivity.m
clear
load('SpikeData.mat')
[SpikeConn,SpikeConnStr]=MonoSynapticConnectivity(S,Options);
%-- 15/01/2019 18:49:40 --%
[SpikeConn,SpikeConnStr]=MonoSynapticConnectivity(S,Options);
Options.Window=[1.5,4]; %the time in ms in which we're searching for a
%monosynaptic conneixion
Options.ExcitLim=4; %be more demanding for excitation
Options.InhibLim=1.5;
Options.Binsize=0.5;
[SpikeConn,SpikeConnStr]=MonoSynapticConnectivity(S,Options);
[SpikeConn,SpikeConnStr]=MonoSynapticConnectivity(S,Options);
save SpikeConnectivity SpikeConn SpikeConnStr
sum(SpikeConn==1)
sum(SpikeConn(:)==1)
edit FindDownKJ.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils/
edit PlotErrorLineN_KJ.m
edit isastring.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/FMAToolbox/Helpers/
load('SpikeConnectivity.mat')
clear
load('SpikeData.mat')
if ~exist('window', 'var')
window = [1.5 4];
end
if ~exist('excit_lim', 'var')
excit_lim = 4;
end
if ~exist('inhib_lim', 'var')
inhib_lim = 1.5;
end
if ~exist('binsize', 'var')
binsize = 0.5;
end
load('SpikeConnectivity.mat')
sp1=5
sp2=3
[H0,t_corr] = CrossCorr(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize);
mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end]))
std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end]))
Lim(1) = mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) + excit_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end]));
Lim(2) = max([0,mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) - inhib_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end]))]);
[0,mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) - inhib_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end]))];
[H0,t_corr] = CrossCorr(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize);
%first thresholds for pre-selection
excit_thresh1 = mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) + excit_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])); %excitation thesh
inhib_thresh1 = max([0,mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) - inhib_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end]))]); %inhibition thesh
h_after = H0(t_corr>=window(1) & t_corr<=window(2)); % time after 0
h_before = H0(t_corr>=-window(2) & t_corr<=-window(1)); % time before 0
h = [h_after h_before];
sum(sum(h>excit_thresh1)>0 || sum(h<inhib_thresh1)>0)>0
sum(sum(h>excit_thresh1)>0 | sum(h<inhib_thresh1)>0)>0
[H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin] = XcJitter_SB(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize,0.99,100); %jitter for confidence intervals
[SynC,ConStr] = XcConnection_SB_new(H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin,window);
tic
[H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin] = XcJitter_SB(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize,0.99,100); %jitter for confidence intervals
toc
37*36/2
nchoosek(18,2)
18*18
18*19/2
nchoosek(1:18,2);
17*18/2
nchoosek(1:18,2);
spike_pairs = nchoosek(1:length(S),2);
size(spike_pairs,1)
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils/
clear
load('SpikeData.mat')
if ~exist('window', 'var')
window = [1.5 4];
end
if ~exist('excit_lim', 'var')
excit_lim = 4;
end
if ~exist('inhib_lim', 'var')
inhib_lim = 1.5;
end
if ~exist('binsize', 'var')
binsize = 0.5;
end
sp1=5;sp2=3;
% Only look into probably isgnificant neurons
[H0,t_corr] = CrossCorr(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize);
%first thresholds for pre-selection
excit_thresh1 = mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) + excit_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])); %excitation thesh
inhib_thresh1 = max([0,mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) - inhib_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end]))]); %inhibition thesh
h_after = H0(t_corr>=window(1) & t_corr<=window(2)); % time after 0
h_before = H0(t_corr>=-window(2) & t_corr<=-window(1)); % time before 0
h = [h_after h_before];
sum(sum(h>excit_thresh1)>0 | sum(h<inhib_thresh1)>0)>0
tic
[H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin] = XcJitter_KJ(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize,0.99,'jitter',100); %jitter for confidence intervals
toc
[H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin] = XcJitter_KJ(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize,0.99,'jitter',100); %jitter for confidence intervals
tic
[H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin] = XcJitter_KJ(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize,0.99,'jitter',100); %jitter for confidence intervals
toc
edit PlotErrorLineN_KJ.m
tic
[H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin] = XcJitter_KJ(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize,0.99,'jitter',100); %jitter for confidence intervals
toc
nan(4)
clear
load('SpikeData.mat')
[MatConnectivity,ConnectivityStrength] = FindMonoSynapticConnectivity(S);
tic
toc
%-- 16/01/2019 18:00:34 --%
LoadPathMOBs
load('SpikeData.mat')
[MatConnectivity,ConnectivityStrength] = FindMonoSynapticConnectivity(S);
%-- 16/01/2019 18:14:48 --%
LoadPathMOBs
edit MakeData_NeuronsInfo.m
edit ParcoursProcessingBasalSleepSpike.m
edit CreateSpikeToAnalyse_KJ;
load(fullfile(foldername,'ChannelsToAnalyse','PFCx_clusters.mat'), 'clusters', 'channels')
%check if exist and assign default value if not
if ~exist('foldername','var')
foldername = pwd;
end
load(fullfile(foldername,'ChannelsToAnalyse','PFCx_clusters.mat'), 'clusters', 'channels')
%check if exist and assign default value if not
if ~exist('foldername','var')
foldername = pwd;
end
%% load data
load(fullfile(foldername,'SpikeData.mat'), 'S', 'tetrodeChannels', 'TT')
load(fullfile(foldername,'NeuronClassification.mat'), 'UnitID')
load(fullfile(foldername,'LFPData','InfoLFP.mat'), 'InfoLFP')
if exist(fullfile(foldername,'ChannelsToAnalyse','PFCx_clusters.mat'),'file')==2
load(fullfile(foldername,'ChannelsToAnalyse','PFCx_clusters.mat'), 'clusters', 'channels')
else
disp('no cluster layer file')
end
foldername
foldername = pwd;
%% load data
load(fullfile(foldername,'SpikeData.mat'), 'S', 'tetrodeChannels', 'TT')
load(fullfile(foldername,'NeuronClassification.mat'), 'UnitID')
load(fullfile(foldername,'LFPData','InfoLFP.mat'), 'InfoLFP')
if exist(fullfile(foldername,'ChannelsToAnalyse','PFCx_clusters.mat'),'file')==2
load(fullfile(foldername,'ChannelsToAnalyse','PFCx_clusters.mat'), 'clusters', 'channels')
else
disp('no cluster layer file')
end
% structure & hemisphere
neuron_structures = cell(0);
neuron_hemisphere = cell(0);
for n=1:length(TT)
neuron_channel = tetrodeChannels{TT{n}(1)};
neuron_structures{n} = InfoLFP.structure{InfoLFP.channel==neuron_channel(1)};
neuron_hemisphere{n} = InfoLFP.hemisphere{InfoLFP.channel==neuron_channel(1)};
end
edit PlotErrorLineN_KJ.m
cell2mat(TT);
cell2mat(TT)';
InfoNeurons = MakeData_NeuronsInfo('savedata',0)
clear
Dir=PathForExperimentsDeltaSleepSpikes('all');
for p=1:length(Dir.path)
MakeData_NeuronsInfo;
end
load('InfoNeuronsAll.mat', 'InfoNeurons')
%check if exist and assign default value if not
if ~exist('foldername','var')
foldername = pwd;
end
if ~exist('savedata','var')
savedata = 1;
end
load(fullfile(foldername,'NeuronClassification.mat'), 'UnitID')
edit ParcoursProcessingBasalSleepSpike.m
x = '*.xml';
filelist = dir(x);
for i=1:length(filelist)
if contains(filelist(i).name, 'SpikeRef')
xml_spike = filelist(i).name;
elseif ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
if ~exist('xml_spike','var')
xml_spike = xml_file;
end
%set current session
clearvars -global DATA
SetCurrentSession(xml_file)
MakeData_Spikes(xml_spike,'recompute',1);
%-- 16/01/2019 19:48:10 --%
MakeData_Spikes(xml_spike,'recompute',1);
LoadPathMOBs
edit LoadSpikeFeatures.m
MakeData_Spikes(xml_spike,'recompute',1);
filename
rate
[fet(:,end)/rate electrodeGroup*ones(size(clu)) clu fet(:,1:end-1)];
fet(:,end)/rate;
electrodeGroup*ones(size(clu));
clu;
fet(:,1:end-1);
4625*20;
filename
filename = 'Breath-Mouse-244-16042015.clu.2'
[path,basename,extension] = fileparts(filename);
if isempty(path), path = '.'; end
electrodeGroup = str2num(extension(2:end));
[~,basename] = fileparts(basename);
% Load .clu file
filename = [path '/' basename '.clu.' int2str(electrodeGroup)];
if ~exist(filename)
error(['File ''' filename ''' not found.']);
end
clu = load(filename);
clu = clu(2:end);
% Load .fet file
filename = [path '/' basename '.fet.' int2str(electrodeGroup)];
if ~exist(filename)
error(['File ''' filename ''' not found.']);
end
file = fopen(filename,'r');
if file == -1
error(['Cannot open file ''' filename '''.']);
end
nFeatures = fscanf(file,'%d',1);
fet = fscanf(file,'%f',[nFeatures,inf])';
fclose(file);
features = [fet(:,end)/rate electrodeGroup*ones(size(clu)) clu fet(:,1:end-1)];
fet(:,1:end-1);
fet(:,end)/rate;
filename = 'Breath-Mouse-244-16042015.clu.1'
[path,basename,extension] = fileparts(filename);
if isempty(path), path = '.'; end
electrodeGroup = str2num(extension(2:end));
[~,basename] = fileparts(basename);
filename = [path '/' basename '.clu.' int2str(electrodeGroup)];
if ~exist(filename)
error(['File ''' filename ''' not found.']);
end
clu = load(filename);
clu = clu(2:end);
% Load .fet file
filename = [path '/' basename '.fet.' int2str(electrodeGroup)];
if ~exist(filename)
error(['File ''' filename ''' not found.']);
end
file = fopen(filename,'r');
if file == -1
error(['Cannot open file ''' filename '''.']);
end
file
filename
nFeatures = fscanf(file,'%d',1);
fet = fscanf(file,'%f',[nFeatures,inf])';
fclose(file);
clear
x = '*.xml';
filelist = dir(x);
for i=1:length(filelist)
if contains(filelist(i).name, 'SpikeRef')
xml_spike = filelist(i).name;
elseif ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
if ~exist('xml_spike','var')
xml_spike = xml_file;
end
%set current session
clearvars -global DATA
SetCurrentSession(xml_file)
MakeData_Spikes(xml_spike,'recompute',1);
[fet(:,end)/rate electrodeGroup*ones(size(clu)) clu fet(:,1:end-1)];
clear
Dir=PathForExperimentsDeltaSleepSpikes('all');
for p=1:length(Dir.path)
%goto
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p
InfoNeurons = MakeData_NeuronsInfo;
if length(InfoNeurons.firingrate)~=length(InfoNeurons.putative)
disp('error in this record')
end
end
[MatConnectivity,ConnectivityStrength] = FindMonoSynapticConnectivity(S);
8600/3600
load('MeanWaveform.mat')
load('SpikeData.mat', 'S')
load MeanWaveform W
DropBoxLocation = fullfile(FolderDropBox,'Dropbox','Kteam');
rmpath([FolderDropBox 'Dropbox/Kteam/PrgMatlab/Fra/UtilsStats/']) %conflict with kmeans of Fra
MakeData_ClassifySpikeWaveforms(W,DropBoxLocation,0);
MakeData_ClassifySpikeWaveforms(W,DropBoxLocation,0);
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150417/Breath-Mouse-243-244-17042015/Mouse243
MakeData_Spikes(xml_spike,'recompute',1);
clear
x = '*.xml';
filelist = dir(x);
for i=1:length(filelist)
if contains(filelist(i).name, 'SpikeRef')
xml_spike = filelist(i).name;
elseif ~contains(filelist(i).name, 'SpikeRef') && ~contains(filelist(i).name, 'SubRef')
xml_file = filelist(i).name;
end
end
if ~exist('xml_spike','var')
xml_spike = xml_file;
end
%set current session
clearvars -global DATA
SetCurrentSession(xml_file)
MakeData_Spikes(xml_spike,'recompute',1);
xmlname=xml_spike;
recompute=1
%check if exist and assign default value if not
if ~exist('recompute','var')
recompute=0;
end
if ~exist('mua','var')
mua=0;
end
if ~exist('allwaveforms','var')
allwaveforms=0;
end
% Get variable data, made available when current session has been chosen
global DATA
if exist('xmlname','var')
clearvars -global DATA
SetCurrentSession(xmlname)
elseif isempty(DATA)
SetCurrentSession
end
global DATA
clear AllSpikeData
%load
tetrodeChannels =  DATA.spikeGroups.groups;
AllSpikeData = GetSpikes('output','full');
%check if already exist
if ~recompute
if exist('SpikeData.mat','file')==2 && exist('MeanWaveform.mat','file')==2
disp('Already computed! ')
return
end
end
% Get the user's mark
tempInfo = xmltree([DATA.session.path,filesep,DATA.session.name,'.xml']);
UnitInfotemp = convert(tempInfo);
UnitInfo={};
for ee=1:size(UnitInfotemp.units.unit,2)
UnitInfo{eval(UnitInfotemp.units.unit{ee}.group),eval(UnitInfotemp.units.unit{ee}.cluster)}=UnitInfotemp.units.unit{ee}.quality;
end
%% Format data
count_all_units=1;
tet_num=2
% Get all units on this tetrode
UnitNums = unique(AllSpikeData(AllSpikeData(:,2)==tet_num,3));
% MUA ?
if mua
UnitNums(UnitNums<1) = [];
else
UnitNums(UnitNums<2) = [];
end
features = LoadSpikeFeatures([DATA.session.name,'.clu.',num2str(tet_num)],20000);
if length(UnitNums)>0
LRatio=[];distance=[];
[distance,LRatio] = IsolationDistance(features);
end
unit_num=14;
SpikeID = find(AllSpikeData(:,2)==tet_num & AllSpikeData(:,3)==UnitNums(unit_num));
length(SpikeID)>1
S{count_all_units} = tsd(AllSpikeData(SpikeID,1)*1E4, AllSpikeData(SpikeID,1)*1E4);
% tetrode number and unit name
TT{count_all_units} = [tet_num, UnitNums(unit_num)];
cellnames{count_all_units} = ['TT',num2str(tet_num),'c',num2str(UnitNums(unit_num))];
% average waveform on each electrode
tempW{count_all_units}  =  GetSpikeWaveforms([tet_num UnitNums(unit_num)]);
for elec=1:size(tempW{count_all_units},2)
W{count_all_units}(elec,:) = mean(squeeze(tempW{count_all_units}(:,elec,:)));
end
unit_num=15;
SpikeID = find(AllSpikeData(:,2)==tet_num & AllSpikeData(:,3)==UnitNums(unit_num));
length(UnitNums)
tet_num=3
% Get all units on this tetrode
UnitNums = unique(AllSpikeData(AllSpikeData(:,2)==tet_num,3));
% MUA ?
if mua
UnitNums(UnitNums<1) = [];
else
UnitNums(UnitNums<2) = [];
end
features = LoadSpikeFeatures([DATA.session.name,'.clu.',num2str(tet_num)],20000);
if length(UnitNums)>0
LRatio=[];distance=[];
[distance,LRatio] = IsolationDistance(features);
end
%-- 17/01/2019 16:03:02 --%
LoadPathMOBs
FigResponseNeuronsFR
edit ParcoursProcessingBasalSleepSpike.m
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150401/Breath-Mouse-243-244-01042015/Mouse243
load('InfoNeuronsAll.mat')
clear
load('InfoNeuronsAll.mat')
%%
% 17.01.2019 KJ
%
%
%
% see
%
%
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
for p=4%1:length(Dir.path)
%goto
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
%% load
%waveform
load MeanWaveform W
%info
load('InfoNeuronsAll.mat')
neuron_class = InfoNeurons.putative{p};
neuron_fr = InfoNeurons.firingrate{p};
neuron_ismua = InfoNeurons.ismua{p};
end
load('InfoNeuronsAll.mat')
neuron_class = InfoNeurons.putative;
neuron_fr = InfoNeurons.firingrate;
neuron_ismua = InfoNeurons.ismua;
size(AllWF,2)
%%
% 17.01.2019 KJ
%
%
%
% see
%
%
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
for p=4%1:length(Dir.path)
%goto
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
%% load
%waveform
load MeanWaveform W
%info
load('InfoNeuronsAll.mat')
neuron_class = InfoNeurons.putative;
neuron_fr = InfoNeurons.firingrate;
neuron_ismua = InfoNeurons.ismua;
%% waveform features
% Get waveforms from electrods with max amplitude
for ww=1:length(W)
clear Peak
for elec=1:4
try
Peak{ww}(elec) = min(W{ww}(elec,:));
end
end
[~,BestElec{ww}] = min(Peak{ww});
AllWF(ww,:) = W{ww}(BestElec{ww},:);
end
AllWF=AllWF';
for k = 1:size(AllWF,2)
% resample to higher frequency
WaveToUseResample(k,:) = resample(AllWF(:,k),resample_factor,1);
% normalize amplitude
WaveToUseResample(k,:) = WaveToUseResample(k,:)./(max(WaveToUseResample(k,:))-min(WaveToUseResample(k,:)));
% Trough To Peak
[valMin,indMin] = min(WaveToUseResample(k,:)); % find trough
[~,indPeak] = max(WaveToUseResample(k,indMin:end)); % find next peak
WFInfo.TroughToPeakTime(k) = indPeak*5e-5/resample_factor;
% Half amplitude duration
HalfAmp = valMin/2;
TimeAtHlafAmp(1) = find(WaveToUseResample(k,:)<HalfAmp,1,'first');
TimeAtHlafAmp(2) = find(WaveToUseResample(k,:)<HalfAmp,1,'last');
WFInfo.HalfAmpDur(k) = (TimeAtHlafAmp(2)-TimeAtHlafAmp(1))*5e-5/resample_factor;
% Half width
DD = diff(WaveToUseResample(k,:));
diffpeak = find(DD(indMin:end) == max(DD(indMin:end)))+indMin;
DD = DD(diffpeak:end);
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.01,1,'first')+diffpeak;
if isempty(IndMax)
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.05,1,'first')+diffpeak;
end
if WaveToUseResample(k,IndMax)<0
if not(isempty(find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax))
IndMax = find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax ;
end
end
WFInfo.HalfWidth(k) = ((IndMax-indMin)*5e-5)/resample_factor;
% Area under curve
WaveToUseResampleTemp = WaveToUseResample(k,indMin:end);
valzero = find(WaveToUseResampleTemp>0,1,'first');
WaveToCalc = WaveToUseResampleTemp(valzero:end);
WFInfo.AreaUnderCurve(k) = sum(abs(WaveToCalc));
if ~isempty(valzero)
WFInfo.AreaUnderCurveNorm(k) = sum(abs(WaveToCalc))./(length(WaveToUseResample(k,:))-valzero);
else
WFInfo.AreaUnderCurveNorm(k) = 0;
end
% Assymetry
MaxBef = max(WaveToUseResample(k,1:indMin));
MaxAft = max(WaveToUseResample(k,indMin:end));
WFInfo.Assymetry(k) = (MaxAft-MaxBef)./(MaxAft+MaxBef);
end
end
%%
% 17.01.2019 KJ
%
%
%
% see
%
%
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
for p=4%1:length(Dir.path)
%goto
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
% Parameters
resample_factor = 300;
%% load
%waveform
load MeanWaveform W
%info
load('InfoNeuronsAll.mat')
neuron_class = InfoNeurons.putative;
neuron_fr = InfoNeurons.firingrate;
neuron_ismua = InfoNeurons.ismua;
%% waveform features
% Get waveforms from electrods with max amplitude
for ww=1:length(W)
clear Peak
for elec=1:4
try
Peak{ww}(elec) = min(W{ww}(elec,:));
end
end
[~,BestElec{ww}] = min(Peak{ww});
AllWF(ww,:) = W{ww}(BestElec{ww},:);
end
AllWF=AllWF';
for k = 1:size(AllWF,2)
% resample to higher frequency
WaveToUseResample(k,:) = resample(AllWF(:,k),resample_factor,1);
% normalize amplitude
WaveToUseResample(k,:) = WaveToUseResample(k,:)./(max(WaveToUseResample(k,:))-min(WaveToUseResample(k,:)));
% Trough To Peak
[valMin,indMin] = min(WaveToUseResample(k,:)); % find trough
[~,indPeak] = max(WaveToUseResample(k,indMin:end)); % find next peak
WFInfo.TroughToPeakTime(k) = indPeak*5e-5/resample_factor;
% Half amplitude duration
HalfAmp = valMin/2;
TimeAtHlafAmp(1) = find(WaveToUseResample(k,:)<HalfAmp,1,'first');
TimeAtHlafAmp(2) = find(WaveToUseResample(k,:)<HalfAmp,1,'last');
WFInfo.HalfAmpDur(k) = (TimeAtHlafAmp(2)-TimeAtHlafAmp(1))*5e-5/resample_factor;
% Half width
DD = diff(WaveToUseResample(k,:));
diffpeak = find(DD(indMin:end) == max(DD(indMin:end)))+indMin;
DD = DD(diffpeak:end);
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.01,1,'first')+diffpeak;
if isempty(IndMax)
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.05,1,'first')+diffpeak;
end
if WaveToUseResample(k,IndMax)<0
if not(isempty(find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax))
IndMax = find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax ;
end
end
WFInfo.HalfWidth(k) = ((IndMax-indMin)*5e-5)/resample_factor;
% Area under curve
WaveToUseResampleTemp = WaveToUseResample(k,indMin:end);
valzero = find(WaveToUseResampleTemp>0,1,'first');
WaveToCalc = WaveToUseResampleTemp(valzero:end);
WFInfo.AreaUnderCurve(k) = sum(abs(WaveToCalc));
if ~isempty(valzero)
WFInfo.AreaUnderCurveNorm(k) = sum(abs(WaveToCalc))./(length(WaveToUseResample(k,:))-valzero);
else
WFInfo.AreaUnderCurveNorm(k) = 0;
end
% Assymetry
MaxBef = max(WaveToUseResample(k,1:indMin));
MaxAft = max(WaveToUseResample(k,indMin:end));
WFInfo.Assymetry(k) = (MaxAft-MaxBef)./(MaxAft+MaxBef);
end
end
edit ParcoursResponseTypeNeuronsPlotFr
%remove mua
idx = InfoNeurons.ismua==0;
neuron_class = neuron_class(idx);
neuron_fr = neuron_fr(idx);
fields = fieldnames(WFInfo);
for i = 1:numel(fields)
x = WFInfo.(fields{i});
WFInfo.(fields{i}) = x(idx);
end
%%
% 17.01.2019 KJ
%
%
%
% see
%
%
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
for p=4%1:length(Dir.path)
%goto
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
% Parameters
resample_factor = 300;
%% load
%waveform
load MeanWaveform W
%info
load('InfoNeuronsAll.mat')
neuron_class = InfoNeurons.putative;
neuron_fr = InfoNeurons.firingrate;
neuron_ismua = InfoNeurons.ismua;
%% waveform features
% Get waveforms from electrods with max amplitude
for ww=1:length(W)
clear Peak
for elec=1:4
try
Peak{ww}(elec) = min(W{ww}(elec,:));
end
end
[~,BestElec{ww}] = min(Peak{ww});
AllWF(ww,:) = W{ww}(BestElec{ww},:);
end
AllWF=AllWF';
for k = 1:size(AllWF,2)
% resample to higher frequency
WaveToUseResample(k,:) = resample(AllWF(:,k),resample_factor,1);
% normalize amplitude
WaveToUseResample(k,:) = WaveToUseResample(k,:)./(max(WaveToUseResample(k,:))-min(WaveToUseResample(k,:)));
% Trough To Peak
[valMin,indMin] = min(WaveToUseResample(k,:)); % find trough
[~,indPeak] = max(WaveToUseResample(k,indMin:end)); % find next peak
WFInfo.TroughToPeakTime(k) = indPeak*5e-5/resample_factor;
% Half amplitude duration
HalfAmp = valMin/2;
TimeAtHlafAmp(1) = find(WaveToUseResample(k,:)<HalfAmp,1,'first');
TimeAtHlafAmp(2) = find(WaveToUseResample(k,:)<HalfAmp,1,'last');
WFInfo.HalfAmpDur(k) = (TimeAtHlafAmp(2)-TimeAtHlafAmp(1))*5e-5/resample_factor;
% Half width
DD = diff(WaveToUseResample(k,:));
diffpeak = find(DD(indMin:end) == max(DD(indMin:end)))+indMin;
DD = DD(diffpeak:end);
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.01,1,'first')+diffpeak;
if isempty(IndMax)
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.05,1,'first')+diffpeak;
end
if WaveToUseResample(k,IndMax)<0
if not(isempty(find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax))
IndMax = find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax ;
end
end
WFInfo.HalfWidth(k) = ((IndMax-indMin)*5e-5)/resample_factor;
% Area under curve
WaveToUseResampleTemp = WaveToUseResample(k,indMin:end);
valzero = find(WaveToUseResampleTemp>0,1,'first');
WaveToCalc = WaveToUseResampleTemp(valzero:end);
WFInfo.AreaUnderCurve(k) = sum(abs(WaveToCalc));
if ~isempty(valzero)
WFInfo.AreaUnderCurveNorm(k) = sum(abs(WaveToCalc))./(length(WaveToUseResample(k,:))-valzero);
else
WFInfo.AreaUnderCurveNorm(k) = 0;
end
% Assymetry
MaxBef = max(WaveToUseResample(k,1:indMin));
MaxAft = max(WaveToUseResample(k,indMin:end));
WFInfo.Assymetry(k) = (MaxAft-MaxBef)./(MaxAft+MaxBef);
end
%remove mua
idx = InfoNeurons.ismua==0;
neuron_class = neuron_class(idx);
neuron_fr = neuron_fr(idx);
fields = fieldnames(WFInfo);
for i = 1:numel(fields)
x = WFInfo.(fields{i});
WFInfo.(fields{i}) = x(idx);
end
end
%% Plot
figure, hold on
sz = 20;
%
subplot(2,2,1), hold on
scatter(neuron_fr, WFInfo.HalfWidth, sz 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('half width'),
title('half width'),
%%
% 17.01.2019 KJ
%
%
%
% see
%
%
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
for p=4%1:length(Dir.path)
%goto
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
% Parameters
resample_factor = 300;
%% load
%waveform
load MeanWaveform W
%info
load('InfoNeuronsAll.mat')
neuron_class = InfoNeurons.putative;
neuron_fr = InfoNeurons.firingrate;
neuron_ismua = InfoNeurons.ismua;
%% waveform features
% Get waveforms from electrods with max amplitude
for ww=1:length(W)
clear Peak
for elec=1:4
try
Peak{ww}(elec) = min(W{ww}(elec,:));
end
end
[~,BestElec{ww}] = min(Peak{ww});
AllWF(ww,:) = W{ww}(BestElec{ww},:);
end
AllWF=AllWF';
for k = 1:size(AllWF,2)
% resample to higher frequency
WaveToUseResample(k,:) = resample(AllWF(:,k),resample_factor,1);
% normalize amplitude
WaveToUseResample(k,:) = WaveToUseResample(k,:)./(max(WaveToUseResample(k,:))-min(WaveToUseResample(k,:)));
% Trough To Peak
[valMin,indMin] = min(WaveToUseResample(k,:)); % find trough
[~,indPeak] = max(WaveToUseResample(k,indMin:end)); % find next peak
WFInfo.TroughToPeakTime(k) = indPeak*5e-5/resample_factor;
% Half amplitude duration
HalfAmp = valMin/2;
TimeAtHlafAmp(1) = find(WaveToUseResample(k,:)<HalfAmp,1,'first');
TimeAtHlafAmp(2) = find(WaveToUseResample(k,:)<HalfAmp,1,'last');
WFInfo.HalfAmpDur(k) = (TimeAtHlafAmp(2)-TimeAtHlafAmp(1))*5e-5/resample_factor;
% Half width
DD = diff(WaveToUseResample(k,:));
diffpeak = find(DD(indMin:end) == max(DD(indMin:end)))+indMin;
DD = DD(diffpeak:end);
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.01,1,'first')+diffpeak;
if isempty(IndMax)
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.05,1,'first')+diffpeak;
end
if WaveToUseResample(k,IndMax)<0
if not(isempty(find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax))
IndMax = find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax ;
end
end
WFInfo.HalfWidth(k) = ((IndMax-indMin)*5e-5)/resample_factor;
% Area under curve
WaveToUseResampleTemp = WaveToUseResample(k,indMin:end);
valzero = find(WaveToUseResampleTemp>0,1,'first');
WaveToCalc = WaveToUseResampleTemp(valzero:end);
WFInfo.AreaUnderCurve(k) = sum(abs(WaveToCalc));
if ~isempty(valzero)
WFInfo.AreaUnderCurveNorm(k) = sum(abs(WaveToCalc))./(length(WaveToUseResample(k,:))-valzero);
else
WFInfo.AreaUnderCurveNorm(k) = 0;
end
% Assymetry
MaxBef = max(WaveToUseResample(k,1:indMin));
MaxAft = max(WaveToUseResample(k,indMin:end));
WFInfo.Assymetry(k) = (MaxAft-MaxBef)./(MaxAft+MaxBef);
end
%remove mua
idx = InfoNeurons.ismua==0;
neuron_class = neuron_class(idx);
neuron_fr = neuron_fr(idx);
fields = fieldnames(WFInfo);
for i = 1:numel(fields)
x = WFInfo.(fields{i});
WFInfo.(fields{i}) = x(idx);
end
end
%% Plot
figure, hold on
sz = 20;
%
subplot(2,2,1), hold on
scatter(neuron_fr, WFInfo.HalfWidth, sz, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('half width'),
title('half width'),
%%
% 17.01.2019 KJ
%
%
%
% see
%
%
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
for p=4%1:length(Dir.path)
%goto
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
% Parameters
resample_factor = 300;
%% load
%waveform
load MeanWaveform W
%info
load('InfoNeuronsAll.mat')
neuron_class = InfoNeurons.putative;
neuron_fr = InfoNeurons.firingrate;
neuron_ismua = InfoNeurons.ismua;
%% waveform features
% Get waveforms from electrods with max amplitude
for ww=1:length(W)
clear Peak
for elec=1:4
try
Peak{ww}(elec) = min(W{ww}(elec,:));
end
end
[~,BestElec{ww}] = min(Peak{ww});
AllWF(ww,:) = W{ww}(BestElec{ww},:);
end
AllWF=AllWF';
for k = 1:size(AllWF,2)
% resample to higher frequency
WaveToUseResample(k,:) = resample(AllWF(:,k),resample_factor,1);
% normalize amplitude
WaveToUseResample(k,:) = WaveToUseResample(k,:)./(max(WaveToUseResample(k,:))-min(WaveToUseResample(k,:)));
% Trough To Peak
[valMin,indMin] = min(WaveToUseResample(k,:)); % find trough
[~,indPeak] = max(WaveToUseResample(k,indMin:end)); % find next peak
WFInfo.TroughToPeakTime(k) = indPeak*5e-5/resample_factor;
% Half amplitude duration
HalfAmp = valMin/2;
TimeAtHlafAmp(1) = find(WaveToUseResample(k,:)<HalfAmp,1,'first');
TimeAtHlafAmp(2) = find(WaveToUseResample(k,:)<HalfAmp,1,'last');
WFInfo.HalfAmpDur(k) = (TimeAtHlafAmp(2)-TimeAtHlafAmp(1))*5e-5/resample_factor;
% Half width
DD = diff(WaveToUseResample(k,:));
diffpeak = find(DD(indMin:end) == max(DD(indMin:end)))+indMin;
DD = DD(diffpeak:end);
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.01,1,'first')+diffpeak;
if isempty(IndMax)
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.05,1,'first')+diffpeak;
end
if WaveToUseResample(k,IndMax)<0
if not(isempty(find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax))
IndMax = find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax ;
end
end
WFInfo.HalfWidth(k) = ((IndMax-indMin)*5e-5)/resample_factor;
% Area under curve
WaveToUseResampleTemp = WaveToUseResample(k,indMin:end);
valzero = find(WaveToUseResampleTemp>0,1,'first');
WaveToCalc = WaveToUseResampleTemp(valzero:end);
WFInfo.AreaUnderCurve(k) = sum(abs(WaveToCalc));
if ~isempty(valzero)
WFInfo.AreaUnderCurveNorm(k) = sum(abs(WaveToCalc))./(length(WaveToUseResample(k,:))-valzero);
else
WFInfo.AreaUnderCurveNorm(k) = 0;
end
% Assymetry
MaxBef = max(WaveToUseResample(k,1:indMin));
MaxAft = max(WaveToUseResample(k,indMin:end));
WFInfo.Assymetry(k) = (MaxAft-MaxBef)./(MaxAft+MaxBef);
end
%remove mua
idx = InfoNeurons.ismua==0;
neuron_class = neuron_class(idx);
neuron_fr = neuron_fr(idx);
fields = fieldnames(WFInfo);
for i = 1:numel(fields)
x = WFInfo.(fields{i});
WFInfo.(fields{i}) = x(idx);
end
end
%% Plot
figure, hold on
sz = 20;
fontsize = 13;
%
subplot(2,2,1), hold on
scatter(neuron_fr, WFInfo.HalfWidth, sz, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('half width'),
title('half width'),
%% Plot
figure, hold on
sz = 20;
fontsize = 13;
%
subplot(2,2,1), hold on
scatter(neuron_fr, WFInfo.HalfWidth, sz, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('half width'),
title('half width'),
%
subplot(2,2,2), hold on
scatter(neuron_fr, WFInfo.AreaUnderCurveNorm, sz, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('AUC norm'),
title('AUC normalized'),
%
subplot(2,2,3), hold on
scatter(neuron_fr, WFInfo.TroughToPeakTime, sz, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('trough-to-peak time'),
title('trough-to-peak time'),
%% Plot
figure, hold on
sz = 20;
fontsize = 13;
neuron_class = neuron_class*100+100;
%
subplot(2,2,1), hold on
scatter(neuron_fr, WFInfo.HalfWidth, sz, neuron_class, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('half width'),
title('half width'),
%
subplot(2,2,2), hold on
scatter(neuron_fr, WFInfo.AreaUnderCurveNorm, sz, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('AUC norm'),
title('AUC normalized'),
%
subplot(2,2,3), hold on
scatter(neuron_fr, WFInfo.TroughToPeakTime, sz, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('trough-to-peak time'),
title('trough-to-peak time'),
%
subplot(2,2,3), hold on
scatter(neuron_fr, WFInfo.TroughToPeakTime, sz, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('trough-to-peak time'),
title('trough-to-peak time'),
%%
% 17.01.2019 KJ
%
%
%
% see
%
%
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
for p=4%1:length(Dir.path)
%goto
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
% Parameters
resample_factor = 300;
%% load
%waveform
load MeanWaveform W
%info
load('InfoNeuronsAll.mat')
neuron_class = InfoNeurons.putative;
neuron_fr = InfoNeurons.firingrate;
neuron_ismua = InfoNeurons.ismua;
%% waveform features
% Get waveforms from electrods with max amplitude
for ww=1:length(W)
clear Peak
for elec=1:4
try
Peak{ww}(elec) = min(W{ww}(elec,:));
end
end
[~,BestElec{ww}] = min(Peak{ww});
AllWF(ww,:) = W{ww}(BestElec{ww},:);
end
AllWF=AllWF';
for k = 1:size(AllWF,2)
% resample to higher frequency
WaveToUseResample(k,:) = resample(AllWF(:,k),resample_factor,1);
% normalize amplitude
WaveToUseResample(k,:) = WaveToUseResample(k,:)./(max(WaveToUseResample(k,:))-min(WaveToUseResample(k,:)));
% Trough To Peak
[valMin,indMin] = min(WaveToUseResample(k,:)); % find trough
[~,indPeak] = max(WaveToUseResample(k,indMin:end)); % find next peak
WFInfo.TroughToPeakTime(k) = indPeak*5e-5/resample_factor;
% Half amplitude duration
HalfAmp = valMin/2;
TimeAtHlafAmp(1) = find(WaveToUseResample(k,:)<HalfAmp,1,'first');
TimeAtHlafAmp(2) = find(WaveToUseResample(k,:)<HalfAmp,1,'last');
WFInfo.HalfAmpDur(k) = (TimeAtHlafAmp(2)-TimeAtHlafAmp(1))*5e-5/resample_factor;
% Half width
DD = diff(WaveToUseResample(k,:));
diffpeak = find(DD(indMin:end) == max(DD(indMin:end)))+indMin;
DD = DD(diffpeak:end);
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.01,1,'first')+diffpeak;
if isempty(IndMax)
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.05,1,'first')+diffpeak;
end
if WaveToUseResample(k,IndMax)<0
if not(isempty(find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax))
IndMax = find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax ;
end
end
WFInfo.HalfWidth(k) = ((IndMax-indMin)*5e-5)/resample_factor;
% Area under curve
WaveToUseResampleTemp = WaveToUseResample(k,indMin:end);
valzero = find(WaveToUseResampleTemp>0,1,'first');
WaveToCalc = WaveToUseResampleTemp(valzero:end);
WFInfo.AreaUnderCurve(k) = sum(abs(WaveToCalc));
if ~isempty(valzero)
WFInfo.AreaUnderCurveNorm(k) = sum(abs(WaveToCalc))./(length(WaveToUseResample(k,:))-valzero);
else
WFInfo.AreaUnderCurveNorm(k) = 0;
end
% Assymetry
MaxBef = max(WaveToUseResample(k,1:indMin));
MaxAft = max(WaveToUseResample(k,indMin:end));
WFInfo.Assymetry(k) = (MaxAft-MaxBef)./(MaxAft+MaxBef);
end
%remove mua
idx = InfoNeurons.ismua==0;
neuron_class = neuron_class(idx);
neuron_fr = neuron_fr(idx);
fields = fieldnames(WFInfo);
for i = 1:numel(fields)
x = WFInfo.(fields{i});
WFInfo.(fields{i}) = x(idx);
end
end
%% Plot
figure, hold on
sz = 20;
fontsize = 13;
neuron_color = neuron_class*100;
%
subplot(2,2,1), hold on
scatter(neuron_fr, WFInfo.HalfWidth, sz, neuron_color, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('half width'),
title('half width'),
%
subplot(2,2,2), hold on
scatter(neuron_fr, WFInfo.AreaUnderCurveNorm, sz, neuron_color, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('AUC norm'),
title('AUC normalized'),
%
subplot(2,2,3), hold on
scatter(neuron_fr, WFInfo.TroughToPeakTime, sz, neuron_color, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('trough-to-peak time'),
title('trough-to-peak time'),
%
subplot(2,2,3), hold on
scatter(neuron_fr, WFInfo.TroughToPeakTime, sz, neuron_color, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('trough-to-peak time'),
title('trough-to-peak time'),
%%
% 17.01.2019 KJ
%
%
%
% see
%
%
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
for p=4%1:length(Dir.path)
%goto
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
% Parameters
resample_factor = 300;
%% load
%waveform
load MeanWaveform W
%info
load('InfoNeuronsAll.mat')
neuron_class = InfoNeurons.putative;
neuron_fr = InfoNeurons.firingrate;
neuron_ismua = InfoNeurons.ismua;
%% waveform features
% Get waveforms from electrods with max amplitude
for ww=1:length(W)
clear Peak
for elec=1:4
try
Peak{ww}(elec) = min(W{ww}(elec,:));
end
end
[~,BestElec{ww}] = min(Peak{ww});
AllWF(ww,:) = W{ww}(BestElec{ww},:);
end
AllWF=AllWF';
for k = 1:size(AllWF,2)
% resample to higher frequency
WaveToUseResample(k,:) = resample(AllWF(:,k),resample_factor,1);
% normalize amplitude
WaveToUseResample(k,:) = WaveToUseResample(k,:)./(max(WaveToUseResample(k,:))-min(WaveToUseResample(k,:)));
% Trough To Peak
[valMin,indMin] = min(WaveToUseResample(k,:)); % find trough
[~,indPeak] = max(WaveToUseResample(k,indMin:end)); % find next peak
WFInfo.TroughToPeakTime(k) = indPeak*5e-5/resample_factor;
% Half amplitude duration
HalfAmp = valMin/2;
TimeAtHlafAmp(1) = find(WaveToUseResample(k,:)<HalfAmp,1,'first');
TimeAtHlafAmp(2) = find(WaveToUseResample(k,:)<HalfAmp,1,'last');
WFInfo.HalfAmpDur(k) = (TimeAtHlafAmp(2)-TimeAtHlafAmp(1))*5e-5/resample_factor;
% Half width
DD = diff(WaveToUseResample(k,:));
diffpeak = find(DD(indMin:end) == max(DD(indMin:end)))+indMin;
DD = DD(diffpeak:end);
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.01,1,'first')+diffpeak;
if isempty(IndMax)
IndMax = find(DD<max(abs(diff(WaveToUseResample(k,:))))*0.05,1,'first')+diffpeak;
end
if WaveToUseResample(k,IndMax)<0
if not(isempty(find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax))
IndMax = find(WaveToUseResample(k,IndMax:end)>0,1,'first')+IndMax ;
end
end
WFInfo.HalfWidth(k) = ((IndMax-indMin)*5e-5)/resample_factor;
% Area under curve
WaveToUseResampleTemp = WaveToUseResample(k,indMin:end);
valzero = find(WaveToUseResampleTemp>0,1,'first');
WaveToCalc = WaveToUseResampleTemp(valzero:end);
WFInfo.AreaUnderCurve(k) = sum(abs(WaveToCalc));
if ~isempty(valzero)
WFInfo.AreaUnderCurveNorm(k) = sum(abs(WaveToCalc))./(length(WaveToUseResample(k,:))-valzero);
else
WFInfo.AreaUnderCurveNorm(k) = 0;
end
% Assymetry
MaxBef = max(WaveToUseResample(k,1:indMin));
MaxAft = max(WaveToUseResample(k,indMin:end));
WFInfo.Assymetry(k) = (MaxAft-MaxBef)./(MaxAft+MaxBef);
end
%remove mua
idx = InfoNeurons.ismua==0;
neuron_class = neuron_class(idx);
neuron_fr = neuron_fr(idx);
fields = fieldnames(WFInfo);
for i = 1:numel(fields)
x = WFInfo.(fields{i});
WFInfo.(fields{i}) = x(idx);
end
end
%% Plot
figure, hold on
sz = 20;
fontsize = 13;
neuron_color = neuron_class;
%
subplot(2,2,1), hold on
scatter(neuron_fr, WFInfo.HalfWidth, sz, neuron_color, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('half width'),
title('half width'),
%
subplot(2,2,2), hold on
scatter(neuron_fr, WFInfo.AreaUnderCurveNorm, sz, neuron_color, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('AUC norm'),
title('AUC normalized'),
%
subplot(2,2,3), hold on
scatter(neuron_fr, WFInfo.TroughToPeakTime, sz, neuron_color, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('trough-to-peak time'),
title('trough-to-peak time'),
%
subplot(2,2,3), hold on
scatter(neuron_fr, WFInfo.TroughToPeakTime, sz, neuron_color, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('firing rate'), ylabel('trough-to-peak time'),
title('trough-to-peak time'),
%-- 17/01/2019 16:33:49 --%
LoadPathMOBs
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
ParcoursSpikeWaveformFiringrate
W{ww}(BestElec{ww},:);
ParcoursSpikeWaveformFiringrate
clear
close all
ParcoursSpikeWaveformFiringrate
ParcoursResponseTypeNeurons
load('InfoNeuronsAll.mat', 'InfoNeurons')
clear
Dir1=PathForExperimentsDeltaSleepSpikes('RdmTone');
Dir2=PathForExperimentsDeltaSleepSpikes('DeltaTone');
Dir = MergePathForExperiment(Dir1,Dir2);
Dir = CheckPathForExperiment_KJ(Dir);
p=1
%goto
disp(' ')
disp('****************************************************************')
eval(['cd(Dir.path{',num2str(p),'}'')'])
disp(pwd)
clearvars -except Dir p resp_res
resp_res.path{p}   = Dir.path{p};
resp_res.manipe{p} = Dir.manipe{p};
resp_res.name{p}   = Dir.name{p};
resp_res.date{p}   = Dir.date{p};
%params
binsize_cc = 2;
nbins_cc = 400;
intv_success_down = 1000; %100ms
intv_success_up = 500; %50ms
%% load
% tones
load('behavResources.mat', 'ToneEvent')
ToneEvent;
%load Spikes of PFCx
load('SpikeData.mat', 'S')
load('InfoNeuronsAll.mat', 'InfoNeurons')
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx') & InfoNeurons.ismua==0);
strcmpi(InfoNeurons.structure,'PFCx') & InfoNeurons.ismua==0
strcmpi(InfoNeurons.structure,'PFCx');
InfoNeurons.ismua==0;
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx') && InfoNeurons.ismua==0);
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx')' & InfoNeurons.ismua==0);
ParcoursResponseTypeNeurons
MUA = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua); %2mS
%check if exist and assign default value if not
if ~exist('binsize','var')
binsize=10;
end
if ~exist('depth','var')
depth=0;
end
if ~exist('Epoch','var')
Epoch=[];
end
if ~exist('foldername','var')
foldername = pwd;
end
binsize = binsize*10;
%% Get neurons number
%string
if isastring(neuron_group)
%.mat file
if strcmp(neuron_group(end-3:end),'.mat')
load(fullfile(foldername,'SpikesToAnalyse',neuron_group), 'number')
neurons_number=number;
elseif ~contains(neuron_group,'Neurons','IgnoreCase',true) && ~contains(neuron_group,'MUA','IgnoreCase',true)
load(fullfile(foldername,'SpikesToAnalyse',[neuron_group '_Neurons.mat']), 'number')
neurons_number=number;
else
load(fullfile(foldername,'SpikesToAnalyse',[neuron_group '.mat']), 'number')
neurons_number=number;
end
%list of neurons number
elseif isivector(neuron_group,'>0')
neurons_number=neuron_group;
%incorrect input
else
error('Incorrect input ''neuron_group''.');
end
%depth, eventually
if depth
load(fullfile(foldername,'SpikeData.mat'), 'neuronsLayers')
end
neuron_group = 'PFCx'
load(fullfile(foldername,'SpikeData.mat'), 'S')
~exist('neuronsLayers', 'var')
if isa(S,'tsdArray')
MUA = MakeQfromS(S(neurons_number), binsize);
else
MUA = MakeQfromS(tsdArray(S(neurons_number)),binsize);
end
%string
if isastring(neuron_group)
%.mat file
if strcmp(neuron_group(end-3:end),'.mat')
load(fullfile(foldername,'SpikesToAnalyse',neuron_group), 'number')
neurons_number=number;
elseif ~contains(neuron_group,'Neurons','IgnoreCase',true) && ~contains(neuron_group,'MUA','IgnoreCase',true)
load(fullfile(foldername,'SpikesToAnalyse',[neuron_group '_Neurons.mat']), 'number')
neurons_number=number;
else
load(fullfile(foldername,'SpikesToAnalyse',[neuron_group '.mat']), 'number')
neurons_number=number;
end
%list of neurons number
elseif isivector(neuron_group,'>0')
neurons_number=neuron_group;
%incorrect input
else
error('Incorrect input ''neuron_group''.');
end
%depth, eventually
if depth
load(fullfile(foldername,'SpikeData.mat'), 'neuronsLayers')
end
load(fullfile(foldername,'SpikeData.mat'), 'S')
if isa(S,'tsdArray')
MUA = MakeQfromS(S(neurons_number), binsize);
else
MUA = MakeQfromS(tsdArray(S(neurons_number)),binsize);
end
CreateSpikeToAnalyse_KJ;
clear
binsize_mua = 2;
MUA = GetMuaNeurons_KJ('PFCx', 'binsize',binsize_mua); %2mS
CreateSpikeToAnalyse_KJ;
clear
ParcoursResponseTypeNeurons
end
ParcoursResponseRipplesTypeNeurons
edit FigResponseNeuronsFR
FigResponseNeuronsFR
ParcoursResponseRipplesTypeNeurons
%-- 17/01/2019 18:14:28 --%
LoadPathMOBs
ParcoursResponseTypeNeurons
MatConnectivity(isnan(MatConnectivity))=0;
save SpikeConnectivity MatConnectivity ConnectivityStrength NumNeurons
sum(MatConnectivity(:))
ParcoursResponseRipplesTypeNeurons
FigResponseNeuronsFR
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/LabMeeting/20190114/
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/LabMeeting/20190114/
FigResponseNeuronsFR
%response tones down>up
subplot(2,4,7), hold on
for i=1:length(neuronGroup.tones)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesDownUp(neuronGroup.tones{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-300 300], 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
title('on tones down>up')
for i=1:length(neuronGroup.tones)
hold on, h(i) = plot(t_corr,runmean(mean(ZtonesDownUp(neuronGroup.tones{i},:)),2),'color', colori_neur{i});
end
y=runmean(mean(ZtonesDownUp(neuronGroup.tones{i},:)),2)
y=runmean(nanmean(ZtonesDownUp(neuronGroup.tones{i},:)),2);
y=nanmean(ZtonesDownUp(neuronGroup.tones{i},:));
y=runmean(nanmean(ZtonesDownUp(neuronGroup.tones{i},:)),1);
y=runmean(nanmean(ZtonesDownUp(neuronGroup.tones{i},:)),2);
y=nanmean(ZtonesDownUp(neuronGroup.tones{i},:));
y=ZtonesDownUp(neuronGroup.tones{i},:);
FigResponseNeuronsFR
ParcoursSpikeWaveformFiringrate
edit ParcoursResponseTypeNeuronsPlotFr
sp1=8;sp2=16;
[H0,t_corr] = CrossCorr(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize);
clear
sp1=8;sp2=16;
if ~exist('window', 'var')
window = [1.5 4];
end
if ~exist('excit_lim', 'var')
excit_lim = 4;
end
if ~exist('inhib_lim', 'var')
inhib_lim = 1.5;
end
if ~exist('binsize', 'var')
binsize = 0.5;
end
%for parfor loop
window_1 = window(1);
window_2 = window(2);
load('SpikeData.mat')
[H0,t_corr] = CrossCorr(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize);
%first thresholds for pre-selection
excit_thresh1 = mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) + excit_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])); %excitation thesh
inhib_thresh1 = max([0,mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) - inhib_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end]))]); %inhibition thesh
h_after = H0(t_corr>=window_1 & t_corr<=window_2); % time after 0
h_before = H0(t_corr>=-window_2 & t_corr<=-window_1); % time before 0
h = [h_after h_before];
sum(sum(h>excit_thresh1)>0 | sum(h<inhib_thresh1)>0)>0
load('SpikeConnectivity.mat')
figure, plot(H0)
sp1=16;sp2=8;
[H0,t_corr] = CrossCorr(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize);
%first thresholds for pre-selection
excit_thresh1 = mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) + excit_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])); %excitation thesh
inhib_thresh1 = max([0,mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) - inhib_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end]))]); %inhibition thesh
h_after = H0(t_corr>=window_1 & t_corr<=window_2); % time after 0
h_before = H0(t_corr>=-window_2 & t_corr<=-window_1); % time before 0
h = [h_after h_before];
figure, plot(H0)
sp1=1;sp2=15;
[H0,t_corr] = CrossCorr(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize);
excit_thresh1 = mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) + excit_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])); %excitation thesh
inhib_thresh1 = max([0,mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) - inhib_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end]))]); %inhibition thesh
h_after = H0(t_corr>=window_1 & t_corr<=window_2); % time after 0
h_before = H0(t_corr>=-window_2 & t_corr<=-window_1); % time before 0
h = [h_after h_before];
sum(sum(h>excit_thresh1)>0 | sum(h<inhib_thresh1)>0)>0
figure, plot(H0)
sum(sum(h>excit_thresh1)>0
sum(h>excit_thresh1)>0
sum(h<inhib_thresh1)>0
sum(h>excit_thresh1)>0 | sum(h<inhib_thresh1
sum(h>excit_thresh1)>0 | sum(h<inhib_thresh1)>0
[H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin] = XcJitter_KJ(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize,0.99,'jitter',100); %jitter for confidence intervals
[SynC,ConStr] = XcConnection_SB_new(H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin,window);
if abs(SynC(1))==1 || abs(SynC(2))==1
figure
disp('sig')
bar(t_corr,H0)
hold on
plot(t_corr,HeI,'g','linewidth',2)
plot(t_corr,HeS,'g','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(1,1),'r','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(2,1),'r','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(1,2),'b','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(2,2),'b','linewidth',2)
disp(SynC)
end
figure
disp('sig')
bar(t_corr,H0)
hold on
plot(t_corr,HeI,'g','linewidth',2)
plot(t_corr,HeS,'g','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(1,1),'r','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(2,1),'r','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(1,2),'b','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(2,2),'b','linewidth',2)
disp(SynC)
clear
load('SpikeData.mat', 'S')
[SynC,ConStr] = XcConnection_SB_new(H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin,window);
[MatConnectivity,ConnectivityStrength] = FindMonoSynapticConnectivity(S);
NumNeurons = 1:50;
save SpikeConnectivity MatConnectivity ConnectivityStrength NumNeurons
MatConnectivity(isnan(MatConnectivity))=0;
save SpikeConnectivity MatConnectivity ConnectivityStrength NumNeurons
load('SpikeData.mat', 'TT')
FigResponseNeuronsFR
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
cd /home/mobsjunior/Dropbox/Mobs_member/KarimJr/Projet_Delta/Figures_DeltaFeedback/LabMeeting/20190114/
FigResponseNeuronsFR
caxis([0 8]),
edit MakeData_ClassifySpikeWaveforms.m
%-- 18/01/2019 15:00:25 --%
LoadPathMOBs
load('SpikeConnectivity.mat')
edit MakeData_NeuronsInfo.m
load('SpikeData.mat', 'TT')
load('SpikeData.mat', 'S')
edit FindMonoSynapticConnectivity.m
if ~exist('window', 'var')
window = [1.5 4];
end
if ~exist('excit_lim', 'var')
excit_lim = 4;
end
if ~exist('inhib_lim', 'var')
inhib_lim = 1.5;
end
if ~exist('binsize', 'var')
binsize = 0.5;
end
%for parfor loop
window_1 = window(1);
window_2 = window(2);
%% loop over pair of spikes
spike_pairs = nchoosek(1:length(S),2);
x = spike_pairs(:,1);
y = spike_pairs(:,2);
MatConnectivity1 = zeros(length(spike_pairs),1);
MatConnectivity2 = zeros(length(spike_pairs),1);
ConnectivityStrength1 = nan(length(spike_pairs),1);
ConnectivityStrength2 = nan(length(spike_pairs),1);
sp1=7
sp1=7;sp2=15;
[H0,t_corr] = CrossCorr(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize);
%first thresholds for pre-selection
excit_thresh1 = mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) + excit_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])); %excitation thesh
inhib_thresh1 = max([0,mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) - inhib_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end]))]); %inhibition thesh
h_after = H0(t_corr>=window_1 & t_corr<=window_2); % time after 0
h_before = H0(t_corr>=-window_2 & t_corr<=-window_1); % time before 0
h = [h_after h_before];
(sum(h>excit_thresh1)>0 | sum(h<inhib_thresh1)>0)
sum(h>excit_thresh1)>0
sum(h<inhib_thresh1)>0
[H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin] = XcJitter_KJ(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize,0.99,'jitter',100); %jitter for confidence intervals
[SynC,ConStr] = XcConnection_SB_new(H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin,window);
figure
disp('sig')
bar(t_corr,H0)
hold on
plot(t_corr,HeI,'g','linewidth',2)
plot(t_corr,HeS,'g','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(1,1),'r','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(2,1),'r','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(1,2),'b','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(2,2),'b','linewidth',2)
disp(SynC)
32/25000
32/20000
if ~exist('window', 'var')
window = [0.5 4];
end
if ~exist('excit_lim', 'var')
excit_lim = 5;
end
if ~exist('inhib_lim', 'var')
inhib_lim = 1.5;
end
if ~exist('binsize', 'var')
binsize = 0.5;
end
%for parfor loop
window_1 = window(1);
window_2 = window(2);
%% loop over pair of spikes
spike_pairs = nchoosek(1:length(S),2);
x = spike_pairs(:,1);
y = spike_pairs(:,2);
MatConnectivity1 = zeros(length(spike_pairs),1);
MatConnectivity2 = zeros(length(spike_pairs),1);
ConnectivityStrength1 = nan(length(spike_pairs),1);
ConnectivityStrength2 = nan(length(spike_pairs),1);
% Only look into probably isgnificant neurons
[H0,t_corr] = CrossCorr(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize);
%first thresholds for pre-selection
excit_thresh1 = mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) + excit_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])); %excitation thesh
inhib_thresh1 = max([0,mean(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end])) - inhib_lim * std(H0([1:find(t_corr<-10,1,'last'),find(t_corr>10,1,'first'):end]))]); %inhibition thesh
h_after = H0(t_corr>=window_1 & t_corr<=window_2); % time after 0
h_before = H0(t_corr>=-window_2 & t_corr<=-window_1); % time before 0
h = [h_after h_before];
[H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin] = XcJitter_KJ(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize,0.99,'jitter',100); %jitter for confidence intervals
[SynC,ConStr] = XcConnection_SB_new(H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin,window);
abs(SynC(1))==1 || abs(SynC(2))==1
abs(SynC(1))==1
abs(SynC(2))==1
figure
disp('sig')
bar(t_corr,H0)
hold on
plot(t_corr,HeI,'g','linewidth',2)
plot(t_corr,HeS,'g','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(1,1),'r','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(2,1),'r','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(1,2),'b','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(2,2),'b','linewidth',2)
disp(SynC)
figure, bar(H0)
figure, bar(t_corr, H0)
clear window
if ~exist('window', 'var')
window = [1 4];
end
if ~exist('excit_lim', 'var')
excit_lim = 5;
end
if ~exist('inhib_lim', 'var')
inhib_lim = 1.5;
end
if ~exist('binsize', 'var')
binsize = 0.5;
end
%for parfor loop
window_1 = window(1);
window_2 = window(2);
[SynC,ConStr] = XcConnection_SB_new(H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin,window);
figure
disp('sig')
bar(t_corr,H0)
hold on
plot(t_corr,HeI,'g','linewidth',2)
plot(t_corr,HeS,'g','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(1,1),'r','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(2,1),'r','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(1,2),'b','linewidth',2)
plot(t_corr,t_corr*0+HMaxMin(2,2),'b','linewidth',2)
disp(SynC)
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils/
TT{sp1}
TT{sp1}(1)
sametetrodes = zeros(length(spike_pairs));
for p=1:size(spike_pairs,1)
if TT{spike_pairs(:,1)}(1)==TT{spike_pairs(:,2)}(1)
sametetrodes(p) = 1;
end
end
sametetrodes = zeros(size(spike_pairs,1));
sametetrodes = zeros(size(spike_pairs,1),1);
for p=1:size(spike_pairs,1)
if TT{spike_pairs(:,1)}(1)==TT{spike_pairs(:,2)}(1)
sametetrodes(p) = 1;
end
end
TT{spike_pairs(:,1)}(1)
sametetrodes = zeros(size(spike_pairs,1),1);
for p=1:size(spike_pairs,1)
if TT{spike_pairs(p,1)}(1)==TT{spike_pairs(p,2)}(1)
sametetrodes(p) = 1;
end
end
figure,
disp('sig'),
bar(t_corr,H0),
hold on,
plot(t_corr,HeI,'g','linewidth',2),
plot(t_corr,HeS,'g','linewidth',2),
plot(t_corr,t_corr*0+HMaxMin(1,1),'r','linewidth',2),
plot(t_corr,t_corr*0+HMaxMin(2,1),'r','linewidth',2),
plot(t_corr,t_corr*0+HMaxMin(1,2),'b','linewidth',2),
plot(t_corr,t_corr*0+HMaxMin(2,2),'b','linewidth',2),
disp(SynC)
window=[1.5 4];
%for parfor loop
window_1 = window(1);
window_2 = window(2);
[SynC,ConStr] = XcConnection_KJ(H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin,'window',window,'same_tetrode',same_tetrode);
same_tetrode=sametetrodes(p);
[SynC,ConStr] = XcConnection_KJ(H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin,'window',window,'same_tetrode',same_tetrode);
figure,
disp('sig'),
bar(t_corr,H0),
hold on,
plot(t_corr,HeI,'g','linewidth',2),
plot(t_corr,HeS,'g','linewidth',2),
plot(t_corr,t_corr*0+HMaxMin(1,1),'r','linewidth',2),
plot(t_corr,t_corr*0+HMaxMin(2,1),'r','linewidth',2),
plot(t_corr,t_corr*0+HMaxMin(1,2),'b','linewidth',2),
plot(t_corr,t_corr*0+HMaxMin(2,2),'b','linewidth',2),
disp(SynC)
%jitter for confidence intervals
[H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin] = XcJitter_KJ(Range(S{sp1}),Range(S{sp2}),binsize,100/binsize,0.99,'jitter',100);
%find connectivity
[SynC,ConStr] = XcConnection_KJ(H0,Hm,HeI,HeS,Hstd,t_corr,HMaxMin,'same_tetrode',same_tetrode);
figure,
disp('sig'),
bar(t_corr,H0),
hold on,
plot(t_corr,HeI,'g','linewidth',2),
plot(t_corr,HeS,'g','linewidth',2),
plot(t_corr,t_corr*0+HMaxMin(1,1),'r','linewidth',2),
plot(t_corr,t_corr*0+HMaxMin(2,1),'r','linewidth',2),
plot(t_corr,t_corr*0+HMaxMin(1,2),'b','linewidth',2),
plot(t_corr,t_corr*0+HMaxMin(2,2),'b','linewidth',2),
disp(SynC)
clear
load('SpikeData.mat')
[MatConnectivity,ConnectivityStrength] = FindMonoSynapticConnectivity(S,TT);
%-- 18/01/2019 17:59:22 --%
LoadPathMOBs
load('SpikeConnectivity.mat')
load('SpikeData.mat')
load('InfoNeuronsAll.mat')
sum(MatConnectivity);
nb_exc = sum(MatConnectivity,2);
nb_exc = sum(MatConnectivity==1,2);
MatConnectivity==1;
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/Script_Divers/
NeuronClassAndConnectivity_KJ
[nb_excit.output nb_inhib.output];
%% load
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse244
load('SpikeConnectivity.mat')
load('SpikeData.mat')
load('InfoNeuronsAll.mat')
neuronClass = InfoNeurons.putative;
neuronFR = InfoNeurons.firingrate;
find(neuronClass<0 & nb_excit.output>1)
find(neuronClass>0 & nb_excit.output>1)
find(neuronClass<0 & nb_excit.output>0)
find(neuronClass<0 & nb_excit.output>4)
neuronFR(find(neuronClass<0 & nb_excit.output>4))
NeuronClassAndConnectivity_KJ
%% load
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse244
load('SpikeConnectivity.mat')
load('SpikeData.mat')
load('InfoNeuronsAll.mat')
neuronClass = InfoNeurons.putative;
neuronFR = InfoNeurons.firingrate;
%%
nb_excit.output = sum(MatConnectivity==1,2);
nb_inhib.output = sum(MatConnectivity==-1,2);
nb_excit.input = sum(MatConnectivity==1,1)';
nb_inhib.input = sum(MatConnectivity==-1,1)';
idx = find(neuronClass<0 & nb_excit.output>3);
[idx neuronFR(idx)]
%% load
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse244
load('SpikeConnectivity.mat')
load('SpikeData.mat')
load('InfoNeuronsAll.mat')
neuronClass = InfoNeurons.putative;
neuronFR = InfoNeurons.firingrate;
%%
nb_excit.output = sum(MatConnectivity==1,2);
nb_inhib.output = sum(MatConnectivity==-1,2);
nb_excit.input = sum(MatConnectivity==1,1)';
nb_inhib.input = sum(MatConnectivity==-1,1)';
idx = find(neuronClass<0 & nb_excit.output>1);
[idx neuronFR(idx)]
idx = find(neuronClass<0 & nb_excit.output>=1);
[idx neuronFR(idx)]
[idx neuronFR(idx) nb_inhib.output(idx) nb_excit.output(idx)]
idx = find(nb_inhib.output>=1);
[idx neuronFR(idx) nb_inhib.output(idx) nb_excit.output(idx)]
idx = find(neuronClass<0 & nb_excit.output==0);
[idx neuronFR(idx) nb_inhib.output(idx) nb_excit.output(idx)]
idx = find(neuronClass<0 & nb_excit.output<=1);
[idx neuronFR(idx) nb_inhib.output(idx) nb_excit.output(idx)]
idx = find(neuronClass<0 & nb_excit.output<=2);
[idx neuronFR(idx) nb_inhib.output(idx) nb_excit.output(idx)]
idx = find(neuronClass<0 & nb_excit.output<=4);
[idx neuronFR(idx) nb_inhib.output(idx) nb_excit.output(idx)]
nchoosek(1:174,2);
15051*10
15051*10/3600
nchoosek(1:50,2);
1225*30/3600
15051*30/3600
edit FindMonoSynapticConnectivity.m
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/CreateData/
load('SpikeConnectivity.mat')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/Script_Divers/
% load spike data and info
load('SpikeData.mat','S','TT')
load('InfoNeuronsAll.mat')
neuronClass = InfoNeurons.putative;
neuronFR = InfoNeurons.firingrate;
% connectivity
if exist('SpikeConnectivity.mat','file')~=2
[MatConnectivity,ConnectivityStrength] = FindMonoSynapticConnectivity(S,TT);
NumNeurons = 1:length(S);
else
load('SpikeConnectivity.mat')
end
%
nb_excit.output = sum(MatConnectivity==1,2);
nb_inhib.output = sum(MatConnectivity==-1,2);
nb_excit.input = sum(MatConnectivity==1,1)';
nb_inhib.input = sum(MatConnectivity==-1,1)';
% putative interneurons with excitatory connections
idx = find(neuronClass<0 & nb_excit.output>=1);
[idx neuronFR(idx) nb_inhib.output(idx) nb_excit.output(idx)]
edit PathForExperimentsDeltaSleepSpikes.m
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/Script_Divers/
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Script/
clear
%params
zscoring = 0; %0 for firing rate, 1 for zscore, 2 for zscore by the pre period
%% load
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
p = find(strcmpi(resp_res.path,pwd));
pwd
p = find(strcmpi(resp_res.path,pwd));
ConnectivityAndResponseTones
ToneNeuronClass = resp_res.InfoNeuronClass{p};
good_neuron = (InfoNeurons.ismua==0 & strcmpi(InfoNeurons.structure,'PFCx'));
good_neuron = (InfoNeurons.ismua==0 & strcmpi(InfoNeurons.structure,'PFCx')');
ConnectivityAndResponseTones
edit ParcoursResponseTypeNeuronsPlotFr
ConnectivityAndResponseTones
clear
%params
zscoring = 0; %0 for firing rate, 1 for zscore, 2 for zscore by the pre period
%% load
load(fullfile(FolderDeltaDataKJ,'ParcoursResponseTypeNeurons.mat'))
p = find(strcmpi(resp_res.path,pwd));
load('SpikeConnectivity.mat')
load('SpikeData.mat')
load('InfoNeuronsAll.mat')
%% neurons
good_neuron = (InfoNeurons.ismua==0 & strcmpi(InfoNeurons.structure,'PFCx')');
MatConnectivity = MatConnectivity(good_neuron,good_neuron);
ConnectivityStrength = ConnectivityStrength(good_neuron,good_neuron);
nb_excit.output = sum(MatConnectivity==1,2);
nb_inhib.output = sum(MatConnectivity==-1,2);
nb_excit.input = sum(MatConnectivity==1,1)';
nb_inhib.input = sum(MatConnectivity==-1,1)';
%% concatenate and zscore
%data
MatTonesUpUP = resp_res.MatTonesUpUP{p};
MatTonesUpDown = resp_res.MatTonesUpDown{p};
MatTonesDownUp = resp_res.MatTonesDownUp{p};
MatTransitDownUp = resp_res.MatTransitDownUp{p};
MatTransitUpDown = resp_res.MatTransitUpDown{p};
neuronClass = resp_res.InfoNeuronClass{p};
neuronFR = resp_res.InfoNeuronFR{p};
%timestamps
t_corr = resp_res.t_corr{1};
%normalisation
if zscoring==1
ZtonesUpUp = zscore(MatTonesUpUP,[],2);
ZtonesUpDown = zscore(MatTonesUpDown,[],2);
ZtonesDownUp = zscore(MatTonesDownUp,[],2);
ZtransitDownUp = zscore(MatTransitDownUp,[],2);
ZtransitUpDown = zscore(MatTransitUpDown,[],2);
elseif zscoring==2
ZtonesUpUp = (MatTonesUpUP-mean(MatTonesUpUP(:,t_corr<-200),2)) ./ std(MatTonesUpUP(:,t_corr<-200),0,2);
ZtonesUpDown = (MatTonesUpDown-mean(MatTonesUpDown(:,t_corr<-200),2)) ./ std(MatTonesUpDown(:,t_corr<-200),0,2);
ZtonesDownUp = (MatTonesDownUp-mean(MatTonesDownUp(:,t_corr<-200),2)) ./ std(MatTonesDownUp(:,t_corr<-200),0,2);
ZtransitDownUp = (MatTransitDownUp-mean(MatTransitDownUp(:,t_corr<-200),2)) ./ std(MatTransitDownUp(:,t_corr<-200),0,2);
ZtransitUpDown = (MatTransitUpDown-mean(MatTransitUpDown(:,t_corr<-200),2)) ./ std(MatTransitUpDown(:,t_corr<-200),0,2);
else
ZtonesUpUp = MatTonesUpUP ./ neuronFR;
ZtonesUpDown = MatTonesUpDown ./ neuronFR;
ZtonesDownUp = MatTonesDownUp ./ neuronFR;
ZtransitDownUp = MatTransitDownUp ./ neuronFR;
ZtransitUpDown = MatTransitUpDown ./ neuronFR;
end
%clean
ZtonesUpUp(~isfinite(ZtonesUpUp))=nan;
ZtonesUpDown(~isfinite(ZtonesUpDown))=nan;
ZtonesDownUp(~isfinite(ZtonesDownUp))=nan;
ZtransitDownUp(~isfinite(ZtransitDownUp))=nan;
ZtransitUpDown(~isfinite(ZtransitUpDown))=nan;
%% FR and connecitvity
fontsize=13;
sz = 20;
figure, hold on
%FR vs excitatory output
subplot(2,2,1), hold on
scatter(neuronFR, nb_excit.output, sz, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('Firing rate'), ylabel('nb output'),
title('number of excitatory output'),
%FR vs excitatory input
subplot(2,2,2), hold on
scatter(neuronFR, nb_excit.input, sz, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('Firing rate'), ylabel('nb input'),
title('number of excitatory input'),
ConnectivityAndResponseTones
%% FR and connecitvity
fontsize=13;
sz = 20;
colori_neur = {'r', [0.5 0 0.5], [1 0.45 0], 'b'};
figure, hold on
%FR vs excitatory output
subplot(2,2,1), hold on
scatter(neuronFR, nb_excit.output, sz, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('Firing rate'), ylabel('nb output'),
title('number of excitatory output'),
%FR vs excitatory input
subplot(2,2,2), hold on
scatter(neuronFR, nb_excit.input, sz, 'filled'),
set(gca, 'fontsize',fontsize),
xlabel('Firing rate'), ylabel('nb input'),
title('number of excitatory input'),
%response tones
subplot(2,2,3), hold on
for i=30%1:length(neuronGroup.output)
hold on, h(i) = plot(t_corr,runmean(nanmean(ZtonesUpUp(neuronGroup.output{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-300 300],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,labels)
title('on tones up>up - excitatory output')
%response tones
subplot(2,2,4), hold on
for i=30%1:length(neuronGroup.input)
hold on, h(i) = plot(t_corr,runmean(nanmean(ZtonesUpUp(neuronGroup.input{i},:)),2),'color', colori_neur{i});
end
set(gca, 'xlim',[-300 300],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
legend(h,labels)
title('on tones up>up - excitatory input')
ConnectivityAndResponseTones
subplot(2,2,3), hold on
hold on, h = plot(t_corr,runmean(nanmean(ZtonesUpUp(30,:)),2),'color', colori_neur{i});
set(gca, 'xlim',[-300 300],'xticklabel',{}, 'fontsize',fontsize),
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
hold on, h = plot(t_corr,runmean(nanmean(ZtonesUpUp(30,:)),2),'color', colori_neur{i});
hold on, h = plot(t_corr,runmean(ZtonesUpUp(30,:),2),'color');
hold on, h = plot(t_corr,runmean(ZtonesUpUp(30,:),2),'color','k');
figure, hold on
hold on, h = plot(t_corr,runmean(ZtonesUpUp(30,:),2),'color','k');
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
ConnectivityAndResponseTones
figure, hold on
hold on, h = plot(t_corr,runmean(ZtonesUpUp(30,:),2),'color','k');
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
[MatConnectivity,ConnectivityStrength] = FindMonoSynapticConnectivity(S,TT);
159265/3600
NumNeurons = 1:174;
save SpikeConnectivity MatConnectivity ConnectivityStrength NumNeurons
MatConnectivity(isnan(MatConnectivity))=0;
save SpikeConnectivity MatConnectivity ConnectivityStrength NumNeurons
ConnectivityAndResponseTones
edit ConnectivityAndResponseTones.m
ConnectivityAndResponseTones
NeuronClassAndConnectivity_KJ
edit NeuronClassAndConnectivity_KJ.m
NeuronClassAndConnectivity_KJ
idx = find(neuronClass<0 & nb_excit.output>=1);
idx = find(nb_inhib.output>=1);
idx = find(neuronClass<0 & nb_excit.output<=4);
idx = find(neuronClass<0 & nb_excit.output>=1);
[idx neuronFR(idx) nb_inhib.output(idx) nb_excit.output(idx)]
load('SpikeConnectivity.mat')
load('SpikeData.mat')
load('InfoNeuronsAll.mat')
neuronClass = InfoNeurons.putative;
neuronFR = InfoNeurons.firingrate;
neuronIsMua = InfoNeurons.ismua;
%%
nb_excit.output = sum(MatConnectivity==1,2);
nb_inhib.output = sum(MatConnectivity==-1,2);
nb_excit.input = sum(MatConnectivity==1,1)';
nb_inhib.input = sum(MatConnectivity==-1,1)';
idx = find(neuronClass<0 & nb_excit.output>=1 & neuronIsMua==0);
idx = find(nb_inhib.output>=1 & neuronIsMua==0);
idx = find(neuronClass<0 & nb_excit.output<=4 & neuronIsMua==0);
idx = find(neuronClass<0 & nb_excit.output>=1 & neuronIsMua==0);
[idx neuronFR(idx) nb_inhib.output(idx) nb_excit.output(idx)]
clear
edit ParcoursSynapticConnectivity.m
ParcoursSynapticConnectivity
%-- 24/01/2019 15:02:25 --%
LoadPathMOBs
ParcoursSynapticConnectivity
%-- 24/01/2019 15:02:58 --%
LoadPathMOBs
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150416/Breath-Mouse-243-244-16042015/Mouse243
edit ParcoursSynapticConnectivity.m
ConnectivityAndResponseTones
load('SpikeConnectivity.mat')
edit ParcoursSynapticConnectivity.m
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150417/Breath-Mouse-243-244-17042015/Mouse244
ConnectivityAndResponseTones
colori_neur{i}
runmean(nanmean(ZtonesUpUp(neuronGroup.output{i},:)),2);
nanmean(ZtonesUpUp(neuronGroup.output{i},:));
ZtonesUpUp(neuronGroup.output{i},:);
neuronGroup.output{i}
nanmean(ZtonesUpUp(neuronGroup.output{i},:),2);
nanmean(ZtonesUpUp(neuronGroup.output{i},:),1);
ConnectivityAndResponseTones
clear
clc
p = inputParser;
addParameter(p,'scalefactor',[0.001 0.025])
addParameter(p,'showprogress',true,@islogical)
parse(p,varargin{:})
scalefactor = p.Results.scalefactor;
showprogress = p.Results.showprogress;
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/Script_Divers/
TestLevensteinModel
LoadPathMOBs
TestLevensteinModel
[N,tbins] = histcounts(r,numratebins);
[N,tbins] = histcounts(r,tempstruct_rate.bins);
tempstruct_rate.bins==tbins;
all(tempstruct_rate.bins==tbins);
TestLevensteinModel
all(N=tempstruct_rate.hist);
all(N==tempstruct_rate.hist);
TestLevensteinModel
N_neurons = [20 40];
W = [6 5.8];
I_in = [2.5 2];
beta = [1 1.2];
tau_r = [0.05 0.05];
tau_a = [0.05 0.05];
Ak = [10 9];
A0 = [5 6];
noiseamp = [1 2];
noisefreq = [500 500];
for nn=1:length(N_neurons)
modelparms(nn).N_neurons = N_neurons(nn);
modelparms(nn).W = W(nn);
modelparms(nn).I_in = I_in(nn);
modelparms(nn).beta = beta(nn);
modelparms(nn).tau_r = tau_r(nn);
modelparms(nn).tau_a = tau_a(nn);
modelparms(nn).Ak = Ak(nn);
modelparms(nn).A0 = A0(nn);
modelparms(nn).noiseamp = noiseamp(nn);
modelparms(nn).noisefreq = noisefreq(nn);
end
TestLevensteinModel
edit ParcoursResponseTypeNeuronsPlotFr
load('DownState.mat', 'alldown_PFCx')
down_PFCx=alldown_PFCx;
st_down = Start(down_PFCx);
end_down = End(down_PFCx);
%Up
up_PFCx = intervalSet(end_down(1:end-1), st_down(2:end));
40:2:60;
50*ones(20,1);
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/Levenstein_model/dependencies/
clear
%%WCadapt_DwellStats
dropboxroot = '/Users/dlevenstein/Dropbox/Research/';
%dropboxroot = '/mnt/data1/Dropbox/research/';
figfolder = fullfile(dropboxroot,'Current Projects/SlowOscillation/Modeling/Figures');
simdatafolder =  fullfile(dropboxroot,'Current Projects/SlowOscillation/AnalysisScripts/simdata/');
%% Color maps
DOWNcolor = makeColorMap([0.5 0.5 0.5],[0 0 0.8]);
UPcolor = makeColorMap([0.5 0.5 0.5],[0.8 0 0]);
UPDOWNcolor = [flipud(DOWNcolor);UPcolor];
%UP/DOWN stats
CVcolor = [1 1 1; ...
makeColorMap(0.8.*[1 1 1],0.8.*[1 1 1]);...
makeColorMap(0.8.*[1 1 1],[0 0.5 0]);...
makeColorMap([0 0.5 0],[0.7 0.5 0])];
%% I-W space
simdatafilename = 'dwellmatch6.mat';
simdatafullfile = fullfile(simdatafolder,simdatafilename);
resim=false;
if ~exist(simdatafullfile,'file') || resim
% UP/DOWN Duration Map
numI = 50;
numW = 50;
testI = linspace(-3.3,-1,numI);
testbw = linspace(3.5,7.5,numW);
testI = repmat(testI,numW,1);testI = testI(:);
testbw = repmat(testbw,1,numI);testbw = testbw(:);
numsims = length(testI);
for nn = 1:numsims
modelparms(nn).N_neurons = 1;
modelparms(nn).I_in = testI(nn);
modelparms(nn).W = testbw(nn);
modelparms(nn).beta = 1;
modelparms(nn).tau_r = 1;
modelparms(nn).tau_a = 25;
modelparms(nn).A0 = 0.5;
modelparms(nn).Ak = 15;
modelparms(nn).noiseamp =0.25;
modelparms(nn).noisefreq = 0.05;
end
simparms.simtime = 60000;
simparms.dt = 1;
[ dwelltimes_sim,ratehist ] = BatchSimulate_WCadapt( modelparms,simparms );
save(simdatafullfile,'dwelltimes_sim','ratehist','modelparms','simparms');
else
load(simdatafullfile);
end
clear
%%WCadapt_DwellStats
dropboxroot = '/Users/dlevenstein/Dropbox/Research/';
%dropboxroot = '/mnt/data1/Dropbox/research/';
figfolder = fullfile(dropboxroot,'Current Projects/SlowOscillation/Modeling/Figures');
simdatafolder =  fullfile(dropboxroot,'Current Projects/SlowOscillation/AnalysisScripts/simdata/');
%% Color maps
DOWNcolor = makeColorMap([0.5 0.5 0.5],[0 0 0.8]);
UPcolor = makeColorMap([0.5 0.5 0.5],[0.8 0 0]);
UPDOWNcolor = [flipud(DOWNcolor);UPcolor];
%UP/DOWN stats
CVcolor = [1 1 1; ...
makeColorMap(0.8.*[1 1 1],0.8.*[1 1 1]);...
makeColorMap(0.8.*[1 1 1],[0 0.5 0]);...
makeColorMap([0 0.5 0],[0.7 0.5 0])];
%% I-W space
simdatafilename = 'dwellmatch6.mat';
simdatafullfile = fullfile(simdatafolder,simdatafilename);
resim=false;
if ~exist(simdatafullfile,'file') || resim
% UP/DOWN Duration Map
numI = 50;
numW = 50;
testI = linspace(-3.3,-1,numI);
testbw = linspace(3.5,7.5,numW);
testI = repmat(testI,numW,1);testI = testI(:);
testbw = repmat(testbw,1,numI);testbw = testbw(:);
numsims = length(testI);
for nn = 1:numsims
modelparms(nn).N_neurons = 1;
modelparms(nn).I_in = testI(nn);
modelparms(nn).W = testbw(nn);
modelparms(nn).beta = 1;
modelparms(nn).tau_r = 1;
modelparms(nn).tau_a = 25;
modelparms(nn).A0 = 0.5;
modelparms(nn).Ak = 15;
modelparms(nn).noiseamp =0.25;
modelparms(nn).noisefreq = 0.05;
end
simparms.simtime = 60000;
simparms.dt = 1;
[ dwelltimes_sim,ratehist ] = BatchSimulate_WCadapt( modelparms,simparms );
save(simdatafullfile,'dwelltimes_sim','ratehist','modelparms','simparms');
else
load(simdatafullfile);
end
50*50
edit ParcoursGenerateIdSleepRecord.m
FolderFigureDelta
clear
Figure3D
numsims
clear
%%WCadapt_DwellStats
dropboxroot = '/Users/dlevenstein/Dropbox/Research/';
%dropboxroot = '/mnt/data1/Dropbox/research/';
figfolder = fullfile(FolderFigureDelta,'Levenstein');%fullfile(dropboxroot,'Current Projects/SlowOscillation/Modeling/Figures');
simdatafolder =  FolderDeltaDataKJ; %fullfile(dropboxroot,'Current Projects/SlowOscillation/AnalysisScripts/simdata/');
%% Color maps
DOWNcolor = makeColorMap([0.5 0.5 0.5],[0 0 0.8]);
UPcolor = makeColorMap([0.5 0.5 0.5],[0.8 0 0]);
UPDOWNcolor = [flipud(DOWNcolor);UPcolor];
%UP/DOWN stats
CVcolor = [1 1 1; ...
makeColorMap(0.8.*[1 1 1],0.8.*[1 1 1]);...
makeColorMap(0.8.*[1 1 1],[0 0.5 0]);...
makeColorMap([0 0.5 0],[0.7 0.5 0])];
%% I-W space
simdatafilename = 'dwellmatch6.mat';
simdatafullfile = fullfile(simdatafolder,simdatafilename);
resim=false;
numI = 10;
numW = 10;
testI = linspace(-3.3,-1,numI);
testbw = linspace(3.5,7.5,numW);
testI = repmat(testI,numW,1);testI = testI(:);
testbw = repmat(testbw,1,numI);testbw = testbw(:);
numsims = length(testI);
modelparms.N_neurons = 1;
modelparms.I_in = testI(10);
modelparms.W = testbw(10);
modelparms.beta = 1;
modelparms.tau_r = 1;
modelparms.tau_a = 25;
modelparms.A0 = 0.5;
modelparms.Ak = 15;
modelparms.noiseamp = 0.25;
modelparms.noisefreq = 0.05;
simparms.simtime = 60000;
simparms.dt = 1;
[ dwelltimes_sim,ratehist ] = BatchSimulate_WCadapt( modelparms,simparms );
[PKS,LOCS] = findpeaks([0 bihist.hist 0],'NPeaks',2);
[0 bihist.hist 0]
which -all findpeaks
edit LoadPathMOBs.m
rmpath('/home/mobsjunior/Dropbox/Kteam/PrgMatlab/chronux2/spectral_analysis/continuous/findpeaks.m')
FolderDropBox
rmpath(fullfile(FolderDropBox,'Dropbox/Kteam/PrgMatlab/chronux2/spectral_analysis/continuous/findpeaks'))
which -all findpeaks
rmpath(fullfile(FolderDropBox,'Dropbox/Kteam/PrgMatlab/chronux2/spectral_analysis/continuous/findpeaks.m'))
rmpath(fullfile(FolderDropBox,'Dropbox/Kteam/PrgMatlab/chronux2/spectral_analysis/continuous'))
which -all findpeaks
Figure3D
modelparmsvec = collapseStruct(modelparms);
%Extract Parameters
modelparmsvec = collapseStruct(modelparms);
ratehistvec = collapseStruct(ratehist);
I_in = unique(modelparmsvec.I_in);
W = unique(modelparmsvec.W);
meanrate = reshape(ratehistvec.mean,length(I_in),length(W));
bifnlocation = fullfile(dropboxroot,'Current Projects/SlowOscillation/Figures/IWbifn.dat');
[ IWbifn ] = BifnFromXPP( bifnlocation );
simdatafullfile
cd(/home/mobsjunior/Dropbox/DataKJ/Mobs/Delta_Data/)
cd /home/mobsjunior/Dropbox/DataKJ/Mobs/Delta_Data/
ComputeLevensteinFigure3D
clc
clear
LoadPathMOBs
ComputeLevensteinFigure3D
%%WCadapt_DwellStats
dropboxroot = '/Users/dlevenstein/Dropbox/Research/';
%dropboxroot = '/mnt/data1/Dropbox/research/';
figfolder = fullfile(FolderFigureDelta,'Levenstein');%fullfile(dropboxroot,'Current Projects/SlowOscillation/Modeling/Figures');
simdatafolder =  fullfile(FolderDeltaDataKJ,'Levenstein_model'); %fullfile(dropboxroot,'Current Projects/SlowOscillation/AnalysisScripts/simdata/');
rmpath(fullfile(FolderDropBox,'Dropbox/Kteam/PrgMatlab/chronux2/spectral_analysis/continuous'))
%% I-W space
simdatafilename = 'dwellmatch6.mat';
simdatafullfile = fullfile(simdatafolder,simdatafilename);
resim=false;
~exist(simdatafullfile,'file') || resim
ComputeLevensteinFigure3D
cd(simdatafolder)
[ testI,w,testb ] = WCadapt_RescaleParms( testI_rs,w_rs,testb_rs,k,I0,tau );
for nn = 1:numsims
modelparms(nn).N_neurons = 1;
modelparms(nn).I_in = testI(nn);
modelparms(nn).I_rs = testI_rs(nn);
modelparms(nn).W = w;
modelparms(nn).W_rs = w_rs;
modelparms(nn).beta = testb(nn);
modelparms(nn).b_rs = testb_rs(nn);
modelparms(nn).tau_r = 1;
modelparms(nn).tau_a = 20;
modelparms(nn).A0 = 0.5;
modelparms(nn).Ak = 15;
modelparms(nn).noiseamp =0.8;
modelparms(nn).noisefreq = 0.05;
end
simparms.simtime = 50000;
simparms.dt = 1;
[ dwelltimes_sim,ratehist ] = BatchSimulate_WCadapt( modelparms,simparms );
save(simdatafullfile,'dwelltimes_sim','ratehist','modelparms','simparms');
else
load(simdatafullfile);
end
%-- 08/02/2019 16:28:27 --%
LoadPathMOBs
%-- 08/02/2019 16:34:56 --%
LoadPathMOBs
edit ParcoursResponseTypeNeuronsPlotFr
edit NeuronClassAndConnectivity_KJ.m
NeuronClassAndConnectivity_KJ
edit FigResponseNeuronsFR
FigResponseNeuronsFR
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
edit FigNeuronsResponseRipples3.m
FigNeuronsResponseRipples3
clear
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
clear
night_tones = 1;
zscoring=0;  %0 for firing rate, 1 for zscore, 2 for zscore by the pre period
%% Response to all ripples
load(fullfile(FolderDeltaDataKJ,'ParcoursRipplesNeuronCrossCorr.mat'))
rip_data{1} = rippeth_res.MatN1; rip_data{2} = rippeth_res.MatN2; rip_data{3} = rippeth_res.MatN3;
rip_data{4} = rippeth_res.MatREM; rip_data{5} = rippeth_res.MatWake; rip_data{6} = rippeth_res.MatRipples;
rip_data{7} = rippeth_res.MatN2N3;
t_corr = rippeth_res.t_corr{1};
%firing rates
neuronFR = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'rdmtone') || night_tones==0
neuronFR = [neuronFR ; rippeth_res.infoneurons{p}.firingrate];
end
end
FigNeuronsResponseRipples3
for p=1:length(rippeth_res.path)
disp(p)
disp(length(rippeth_res.infoneurons{p}.firingrate));
disp(length(rippeth_res.MatN1{p});
disp('       ')
end
for p=1:length(rippeth_res.path)
disp(p)
disp(length(rippeth_res.infoneurons{p}.firingrate));
disp(length(rippeth_res.MatN1{p}));
disp('       ')
end
for p=1:length(rippeth_res.path)
disp(p)
disp(length(rippeth_res.infoneurons{p}.firingrate));
disp(size(rippeth_res.MatN1{p},2));
disp('       ')
end
for p=1:length(rippeth_res.path)
disp(p)
disp(length(rippeth_res.infoneurons{p}.firingrate));
disp(size(rippeth_res.MatN1{p},1));
disp('       ')
end
clc
for p=1:length(rippeth_res.path)
disp(p)
if length(rippeth_res.infoneurons{p}.firingrate)~=size(rippeth_res.MatN1{p},1)
disp(length(rippeth_res.infoneurons{p}.firingrate));
disp(size(rippeth_res.MatN1{p},1));
end
disp('       ')
end
clc
for p=1:length(rippeth_res.path)
if length(rippeth_res.infoneurons{p}.firingrate)~=size(rippeth_res.MatN1{p},1)
disp(p)
disp(length(rippeth_res.infoneurons{p}.firingrate));
disp(size(rippeth_res.MatN1{p},1));
end
disp('       ')
end
ParcoursRipplesNeuronCrossCorr
edit GetRipples.m
[tRipples, ~] = GetRipples;
ParcoursRipplesNeuronCrossCorr
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx') & InfoNeurons.ismua==0);
NumNeurons = find(strcmpi(InfoNeurons.structure,'PFCx') & InfoNeurons.ismua'==0);
ParcoursRipplesNeuronCrossCorr
FigNeuronsResponseRipples3
for p=1:length(rippeth_res.path)
if length(rippeth_res.infoneurons{p}.firingrate)~=size(rippeth_res.MatN1{p},1)
disp(p)
disp(length(rippeth_res.infoneurons{p}.firingrate));
disp(size(rippeth_res.MatN1{p},1));
end
disp('       ')
end
infoneurons = rippeth_res.infoneurons{p};
%firing rates
neuronFR = [];
for p=1:length(rippeth_res.path)
if strcmpi(rippeth_res.manipe{p}, 'rdmtone') || night_tones==0
infoneurons = rippeth_res.infoneurons{p};
neuronFR = [neuronFR ; infoneurons.firingrate(strcmpi(infoneurons.structure,'PFCx')' & infoneurons.ismua==0)];
end
end
FigNeuronsResponseRipples3
line([0 0], get(gca,'ylim'), 'color',[0.7 0.7 0.7], 'linewidth',1),
FigNeuronsResponseRipples3
runmean(mean(Zpeth_n3(neuronClass{i},:)),2);
colori_neur{i}
FigNeuronsResponseRipples3
runmean(mean(Zpeth_n3(neuronClass{i},:)),2);
FigNeuronsResponseRipples3
%-- 14/03/2019 15:33:30 --%
LoadPathMOBs
FigNeuronsResponseRipples3
ylim([-1 3])
ylim([-1 4])
FigResponseNeuronsFR
ParcoursResponseTypeNeuronsPlotFr
FigResponseNeuronsFR
close all
FigResponseNeuronsFR
TonesAndLfpOnTransitionsPlot
edit ParcoursSynapticConnectivity.m
load('SpikeConnectivity.mat')
nb_excit.output = sum(MatConnectivity==1,2)
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Script/
ScriptTonesOnDeltaWavesEffect
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/Homeostasis/
PlotSwaDownDensity
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils/
DeltaReboundAfterWake
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils/
load('behavResources.mat', 'tpsfin')
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/K_Junior/utils/
DeltaReboundAfterWake
figure, plot(x_intervals, density_delta)
DeltaReboundAfterWake
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/DeltaToneProject/TonesInDown/Neurons/
which -all runmean
DeltaReboundAfterWake
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice403-451/20161205/Mouse403
edit PathForExperimentsDeltaSleepSpikes.m
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice403-451/20170213/Breath-Mouse-403-451-13022017/Mouse403
clear
[NREM, REM, Wake] = GetSleepScoring('scoring','ob');
delta_waves = GetDeltaWaves('area','PFCx');
down_PFCx = GetDownStates('area','PFCx');
load('IdFigureData2.mat', 'night_duration')
down_PFCx = dropShortIntervals(down_PFCx,1000);
delta_waves = dropShortIntervals(delta_waves,750);
%% density
%params
windowsize = 60E4; %60s
intervals_start = 0:windowsize:night_duration;
x_intervals = (intervals_start + windowsize/2)/(3600E4);
%down states
start_down = ts(Start(down_PFCx));
density_down = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_down(t) = length(Restrict(start_down,intv))/60; %per sec
end
%delta waves
start_delta = ts(Start(delta_waves));
density_delta = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_delta(t) = length(Restrict(start_delta,intv))/60; %per sec
end
%smooth
density_down = runmean(density_down,2);
density_delta = runmean(density_delta,2);
%%
figure, plot(x_intervals, density_delta)
%% load
[NREM, REM, Wake] = GetSleepScoring('scoring','ob');
delta_waves = GetDeltaWaves('area','PFCx');
down_PFCx = GetDownStates('area','PFCx');
load('IdFigureData2.mat', 'night_duration')
%     down_PFCx = dropShortIntervals(down_PFCx,1000);
%     delta_waves = dropShortIntervals(delta_waves,750);
%% density
%params
windowsize = 60E4; %60s
intervals_start = 0:windowsize:night_duration;
x_intervals = (intervals_start + windowsize/2)/(3600E4);
%down states
start_down = ts(Start(down_PFCx));
density_down = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_down(t) = length(Restrict(start_down,intv))/60; %per sec
end
%delta waves
start_delta = ts(Start(delta_waves));
density_delta = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_delta(t) = length(Restrict(start_delta,intv))/60; %per sec
end
%smooth
density_down = runmean(density_down,2);
density_delta = runmean(density_delta,2);
%%
figure, plot(x_intervals, density_delta)
cd /media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice403-451/20170215/Breath-Mouse-403-451-15022017/Mouse451
clear
%% load
[NREM, REM, Wake] = GetSleepScoring('scoring','ob');
delta_waves = GetDeltaWaves('area','PFCx');
down_PFCx = GetDownStates('area','PFCx');
load('IdFigureData2.mat', 'night_duration')
%     down_PFCx = dropShortIntervals(down_PFCx,1000);
%     delta_waves = dropShortIntervals(delta_waves,750);
%% density
%params
windowsize = 60E4; %60s
intervals_start = 0:windowsize:night_duration;
x_intervals = (intervals_start + windowsize/2)/(3600E4);
%down states
start_down = ts(Start(down_PFCx));
density_down = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_down(t) = length(Restrict(start_down,intv))/60; %per sec
end
%delta waves
start_delta = ts(Start(delta_waves));
density_delta = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_delta(t) = length(Restrict(start_delta,intv))/60; %per sec
end
%smooth
density_down = runmean(density_down,2);
density_delta = runmean(density_delta,2);
%%
figure, plot(x_intervals, density_delta)
clear
%% load
[NREM, REM, Wake] = GetSleepScoring('scoring','ob');
delta_waves = GetDeltaWaves('area','PFCx');
down_PFCx = GetDownStates('area','PFCx');
load('IdFigureData2.mat', 'night_duration')
%     down_PFCx = dropShortIntervals(down_PFCx,1000);
%     delta_waves = dropShortIntervals(delta_waves,750);
%% density
%params
windowsize = 60E4; %60s
intervals_start = 0:windowsize:night_duration;
x_intervals = (intervals_start + windowsize/2)/(3600E4);
%down states
start_down = ts(Start(down_PFCx));
density_down = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_down(t) = length(Restrict(start_down,intv))/60; %per sec
end
%delta waves
start_delta = ts(Start(delta_waves));
density_delta = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_delta(t) = length(Restrict(start_delta,intv))/60; %per sec
end
%smooth
%     density_down = runmean(density_down,2);
%     density_delta = runmean(density_delta,2);
%%
figure, plot(x_intervals, density_delta)
intervalSet(-100,100)
%% load
[NREM, REM, Wake] = GetSleepScoring('scoring','ob');
delta_waves = GetDeltaWaves('area','PFCx');
down_PFCx = GetDownStates('area','PFCx');
load('IdFigureData2.mat', 'night_duration')
%     down_PFCx = dropShortIntervals(down_PFCx,1000);
%     delta_waves = dropShortIntervals(delta_waves,750);
%% density
%params
windowsize = 60E4; %60s
intervals_start = 0:windowsize:night_duration;
x_intervals = (intervals_start + windowsize/2)/(3600E4);
%down states
start_down = ts(Start(down_PFCx));
density_down = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t),intervals_start(t) + windowsize);
density_down(t) = length(Restrict(start_down,intv))/60; %per sec
end
%delta waves
start_delta = ts(Start(delta_waves));
density_delta = zeros(length(intervals_start),1);
for t=1:length(intervals_start)
intv = intervalSet(intervals_start(t) - windowsize,intervals_start(t) + windowsize);
density_delta(t) = length(Restrict(start_delta,intv))/120; %per sec
end
%smooth
%     density_down = runmean(density_down,2);
%     density_delta = runmean(density_delta,2);
%%
figure, plot(x_intervals, density_delta)
DeltaReboundAfterWake
load('/media/DataMOBsRAID/ProjetBreathDeltaFeedback/Mice243-244/20150421/Breath-Mouse-243-21042015/LFPData/LFP0.mat')
try
load('IdFigureData2.mat', 'night_duration')
catch
load('LFPData/LFP0.mat')
night_duration = max(Range(LFP));
end
close all
DeltaReboundAfterWake
cd /home/vador/Dropbox/Kteam/PrgMatlab/NeuronDecodingSubStages
cd /home/mobsjunior/Dropbox/Kteam/PrgMatlab/NeuronDecodingSubStages
cd /media/DataMOBsRAIDN/ProjectEmbReact/Mouse508/20170126/ProjectEmbReact_M508_20170126_BaselineSleep/
clear all
load('SleepSubstages.mat')
load('SpikeData.mat')
load('DownState.mat')
load('LFPData/LFP1.mat')
[numNeurons, numtt, TT] = GetSpikesFromStructure('PFCx','remove_MUA',1);
% S = tsdArray(S);
S = S(numNeurons);
Q = MakeQfromS(S,2*1e4);
clear Vals
Vals.N1 = Data(Restrict(Q,Epoch{1}));
Vals.N2 = Data(Restrict(Q,Epoch{2}));
Vals.N3 = Data(Restrict(Q,Epoch{3}));
Vals.REM = Data(Restrict(Q,Epoch{4}));
Vals.Wake = Data(Restrict(Q,Epoch{5}));
fields = fieldnames(Vals);
cols = lines(5);
Vect1 = full(nanmean(Vals.N1(1:end/2,:))-nanmean(Vals.Wake(1:end/2,:)));
Vect2 = full(nanmean(Vals.N1(1:end/2,:))-nanmean(Vals.REM(1:end/2,:)));
clf
Proj1 = full(Vals.(fields{ff})(end/2:end,:)*Vect1');
Proj2 = full(Vals.(fields{ff})(end/2:end,:)*Vect2');
ff=3
Proj1 = full(Vals.(fields{ff})(end/2:end,:)*Vect1');
Proj2 = full(Vals.(fields{ff})(end/2:end,:)*Vect2');
[Y,X] = hist(Proj2,100);
subplot(3,3,[1,4])
[Y,X] = hist(Proj2,100);
stairs(Y/sum(Y),X,'LineWidth',3,'color',cols(ff,:)), hold on
subplot(3,3,[8,9])
[Y,X] = hist(Proj1,100);
stairs(X,Y/sum(Y),'LineWidth',3,'color',cols(ff,:)), hold on
subplot(3,3,[2,3,5,6])
distances = tsd(1:length(Proj1),(Proj1 - nanmean(Proj1)).^2 + (Proj2 - nanmean(Proj2)).^2);
Proj1 = tsd(1:length(Proj1),Proj1);
Proj2 = tsd(1:length(Proj2),Proj2);
Proj1 = full(Vals.(fields{ff})(end/2:end,:)*Vect1');
Proj2 = full(Vals.(fields{ff})(end/2:end,:)*Vect2');
subplot(3,3,[1,4])
[Y,X] = hist(Proj2,100);
stairs(Y/sum(Y),X,'LineWidth',3,'color',cols(ff,:)), hold on
subplot(3,3,[8,9])
[Y,X] = hist(Proj1,100);
stairs(X,Y/sum(Y),'LineWidth',3,'color',cols(ff,:)), hold on
subplot(3,3,[2,3,5,6])
distances = tsd(1:length(Proj1),(Proj1 - nanmean(Proj1)).^2 + (Proj2 - nanmean(Proj2)).^2);
Proj1 = tsd(1:length(Proj1),Proj1);
Proj2 = tsd(1:length(Proj2),Proj2);
%     for thres = 0.8:-0.1:0.4
thres = 0.5;
threshold = percentile(Data(distances),thres);
SubEpoch = thresholdIntervals(distances,threshold,'Direction','Below');
Proj1sub = Data(Restrict(Proj1,SubEpoch));
Proj2sub = Data(Restrict(Proj2,SubEpoch));
K=convhull(Proj1sub,Proj2sub);
plot(Proj1sub(K),Proj2sub(K),'LineWidth',3,'color',cols(ff,:)), hold on
close all
for ff = 1:5
Proj1 = full(Vals.(fields{ff})(end/2:end,:)*Vect1');
Proj2 = full(Vals.(fields{ff})(end/2:end,:)*Vect2');
subplot(3,3,[1,4])
[Y,X] = hist(Proj2,100);
stairs(Y/sum(Y),X,'LineWidth',3,'color',cols(ff,:)), hold on
subplot(3,3,[8,9])
[Y,X] = hist(Proj1,100);
stairs(X,Y/sum(Y),'LineWidth',3,'color',cols(ff,:)), hold on
subplot(3,3,[2,3,5,6])
distances = tsd(1:length(Proj1),(Proj1 - nanmean(Proj1)).^2 + (Proj2 - nanmean(Proj2)).^2);
Proj1 = tsd(1:length(Proj1),Proj1);
Proj2 = tsd(1:length(Proj2),Proj2);
%     for thres = 0.8:-0.1:0.4
thres = 0.5;
threshold = percentile(Data(distances),thres);
SubEpoch = thresholdIntervals(distances,threshold,'Direction','Below');
Proj1sub = Data(Restrict(Proj1,SubEpoch));
Proj2sub = Data(Restrict(Proj2,SubEpoch));
K=convhull(Proj1sub,Proj2sub);
plot(Proj1sub(K),Proj2sub(K),'LineWidth',3,'color',cols(ff,:)), hold on
%         P = patch(Proj1sub(K),Proj2sub(K),cols(ff,:));hold on
%         set(P,'FaceAlpha',0.3)
%         set(P,'EdgeColor','none')
%
%     end
end
legend(fields)
full(nanmean(Vals.N1(1:end/2,:)));
LookATSomeProjectionsN1N2N3Neurons_SB
edit GetMuaNeurons_KJ.m
Q = MakeQfromS(tsdArray(S),2*1e4);
LookATSomeProjectionsN1N2N3Neurons_SB
load('InfoNeuronsAll.mat')
load('InfoNeuronsAll.mat', 'InfoNeurons')
lookAtSomeProjectionsN1N2N3Neurons_KJ
clear
Dir=PathForExperimentsSleepRipplesSpikes('Basal')
lookAtSomeProjectionsN1N2N3Neurons_KJ
Q = Qall(:,selected_neurons');
Q = Qall(:,2);
Q = Qall(:,:);
Q = Qall(:,1);
Q = Qall(1);
Q = Qall(3);
lookAtSomeProjectionsN1N2N3Neurons_KJ
edit PathForExperimentsBasalSleepRhythms.m
lookAtSomeProjectionsN1N2N3Neurons_KJ
lookfor homeosta
TestDownDurationDensity